{
	"AddFileDependencies": {
		"name": "AddFileDependencies",
		"description": "소스 파일에 종속성을 추가합니다."
	},
	"AndroidTestUtilities": {
		"name": "AndroidTestUtilities",
		"description": "지정된 데이터를 Android 디바이스에 자동으로 로드하는 테스트를 만듭니다."
	},
	"BundleUtilities": {
		"name": "BundleUtilities",
		"description": "독립 실행형 번들 애플리케이션을 어셈블하는 데 도움이 되는 함수입니다."
	},
	"CheckCCompilerFlag": {
		"name": "CheckCCompilerFlag",
		"description": "C 컴파일러가 지정된 플래그를 지원하는지 확인합니다."
	},
	"CheckCompilerFlag": {
		"name": "CheckCompilerFlag",
		"description": "컴파일러가 지정된 플래그를 지원하는지 확인합니다."
	},
	"CheckCSourceCompiles": {
		"name": "CheckCSourceCompiles",
		"description": "지정된 C 소스가 컴파일되고 실행 파일에 연결되는지 확인합니다."
	},
	"CheckCSourceRuns": {
		"name": "CheckCSourceRuns",
		"description": "지정된 C 소스가 컴파일되고 실행 파일에 연결되고 이후에 실행될 수 있는지 확인합니다."
	},
	"CheckCXXCompilerFlag": {
		"name": "CheckCXXCompilerFlag",
		"description": "CXX 컴파일러가 지정된 플래그를 지원하는지 확인합니다."
	},
	"CheckCXXSourceCompiles": {
		"name": "CheckCXXSourceCompiles",
		"description": "지정된 C++ 소스가 컴파일되고 실행 파일에 연결되는지 확인합니다."
	},
	"CheckCXXSourceRuns": {
		"name": "CheckCXXSourceRuns",
		"description": "지정된 C++ 소스가 컴파일되고 실행 파일에 연결되고 이후에 실행될 수 있는지 확인합니다."
	},
	"CheckCXXSymbolExists": {
		"name": "CheckCXXSymbolExists",
		"description": "기호가 C++에서 함수, 변수 또는 매크로로 존재하는지 확인합니다."
	},
	"CheckFortranCompilerFlag": {
		"name": "CheckFortranCompilerFlag",
		"description": "Fortran 컴파일러가 지정된 플래그를 지원하는지 확인합니다."
	},
	"CheckFortranFunctionExists": {
		"name": "CheckFortranFunctionExists",
		"description": "Fortran 함수가 있는지 확인합니다."
	},
	"CheckFortranSourceCompiles": {
		"name": "CheckFortranSourceCompiles",
		"description": "지정된 Fortran 소스가 컴파일되고 실행 파일에 연결되는지 확인합니다."
	},
	"CheckFortranSourceRuns": {
		"name": "CheckFortranSourceRuns",
		"description": "지정된 Fortran 소스가 컴파일되고 실행 파일에 연결되고 이후에 실행될 수 있는지 확인합니다."
	},
	"CheckFunctionExists": {
		"name": "CheckFunctionExists",
		"description": "C 함수를 연결할 수 있는지 확인"
	},
	"CheckIncludeFile": {
		"name": "CheckIncludeFile",
		"description": "헤더 파일을 C에 포함할 수 있는지 확인하는 매크로를 제공합니다."
	},
	"CheckIncludeFileCXX": {
		"name": "CheckIncludeFileCXX",
		"description": "헤더 파일을 CXX에 포함할 수 있는지 확인하는 매크로를 제공합니다."
	},
	"CheckIncludeFiles": {
		"name": "CheckIncludeFiles",
		"description": "하나 이상의 헤더 파일 목록을 함께 포함할 수 있는지 확인하는 매크로를 제공합니다."
	},
	"CheckIPOSupported": {
		"name": "CheckIPOSupported",
		"description": "컴파일러가 SQL/LTO(프로시저 간 최적화)를 지원하는지 확인합니다. INTERPROCEDURAL_OPTIMIZATION 대상 속성을 사용하도록 설정하기 전에 사용합니다."
	},
	"CheckLanguage": {
		"name": "CheckLanguage",
		"description": "enable_language 또는 프로젝트 명령으로 언어를 활성화할 수 있는지 확인합니다."
	},
	"CheckLibraryExists": {
		"name": "CheckLibraryExists",
		"description": "함수가 있는지 확인합니다."
	},
	"CheckLinkerFlag": {
		"name": "CheckLinkerFlag",
		"description": "컴파일러가 지정된 링크 플래그를 지원하는지 확인합니다."
	},
	"CheckOBJCCompilerFlag": {
		"name": "CheckOBJCCompilerFlag",
		"description": "Objective-C 컴파일러가 지정된 플래그를 지원하는지 확인합니다."
	},
	"CheckOBJCSourceCompiles": {
		"name": "CheckOBJCSourceCompiles",
		"description": "지정된 Objective-C 원본이 컴파일되고 실행 파일에 연결되는지 확인합니다."
	},
	"CheckOBJCSourceRuns": {
		"name": "CheckOBJCSourceRuns",
		"description": "지정된 Objective-C 소스가 컴파일되고 실행 파일에 연결되고 이후에 실행될 수 있는지 확인합니다."
	},
	"CheckOBJCXXCompilerFlag": {
		"name": "CheckOBJCXXCompilerFlag",
		"description": "Objective-C++ 컴파일러가 지정된 플래그를 지원하는지 확인합니다."
	},
	"CheckOBJCXXSourceCompiles": {
		"name": "CheckOBJCXXSourceCompiles",
		"description": "지정된 Objective-C++ 소스가 컴파일되고 실행 파일에 연결되는지 확인합니다."
	},
	"CheckOBJCXXSourceRuns": {
		"name": "CheckOBJCXXSourceRuns",
		"description": "지정된 Objective-C++ 소스가 컴파일되고 실행 파일에 연결되고 이후에 실행될 수 있는지 확인합니다."
	},
	"CheckPIESupported": {
		"name": "CheckPIESupported",
		"description": "링커가 실행 파일에 대해 PIE(Position Independent Code) 또는 NO_PIE(No Position Independent Code)를 지원하는지 확인합니다. 이를 사용하여 실행 파일의 POSITION_INDEPENDENT_CODE 대상 속성이 링크 타임에 적용되도록 합니다."
	},
	"CheckPrototypeDefinition": {
		"name": "CheckPrototypeDefinition",
		"description": "필요한 프로토타입이 올바른지 확인합니다."
	},
	"CheckSourceCompiles": {
		"name": "CheckSourceCompiles",
		"description": "지정된 소스가 컴파일되고 실행 파일에 연결되는지 확인합니다."
	},
	"CheckSourceRuns": {
		"name": "CheckSourceRuns",
		"description": "지정된 소스가 컴파일되고 실행 파일에 연결되고 이후에 실행될 수 있는지 확인합니다."
	},
	"CheckStructHasMember": {
		"name": "CheckStructHasMember",
		"description": "지정된 구조체 또는 클래스에 지정된 멤버 변수가 있는지 확인합니다."
	},
	"CheckSymbolExists": {
		"name": "CheckSymbolExists",
		"description": "기호가 C에 함수, 변수 또는 매크로로 존재하는지 확인하는 매크로를 제공합니다."
	},
	"CheckTypeSize": {
		"name": "CheckTypeSize",
		"description": "형식의 크기 확인"
	},
	"CheckVariableExists": {
		"name": "CheckVariableExists",
		"description": "변수가 있는지 확인합니다."
	},
	"CMakeAddFortranSubdirectory": {
		"name": "CMakeAddFortranSubdirectory",
		"description": "fortran 전용 하위 디렉터리를 추가하고 fortran 컴파일러를 찾아 빌드합니다."
	},
	"CMakeBackwardCompatibilityCXX": {
		"name": "CMakeBackwardCompatibilityCXX",
		"description": "여러 이전 버전과의 호환성 변수 정의"
	},
	"CMakeDependentOption": {
		"name": "CMakeDependentOption",
		"description": "다른 옵션에 종속된 옵션을 제공하는 매크로입니다."
	},
	"CMakeDetermineVSServicePack": {
		"name": "CMakeDetermineVSServicePack",
		"description": "이 모듈의 기능은 컴파일러 버전 번호를 포함하는 CMAKE_<LANG>_COMPILER_VERSION 변수로 대체되었습니다."
	},
	"CMakeExpandImportedTargets": {
		"name": "CMakeExpandImportedTargets",
		"description": "이 모듈은 가져온 대상을 try_compile 및 try_run 명령에 사용하기 위해 디스크에서 참조하는 기본 라이브러리로 확장해야 했습니다. 이제 이러한 명령은 LINK_LIBRARIES 옵션에서 가져온 라이브러리를 지원합니다(try_compile CMake 2.8.11 이후 및 try_run CMake 3.2 이후)."
	},
	"CMakeFindDependencyMacro": {
		"name": "CMakeFindDependencyMacro",
		"description": "``find_dependency()`` 매크로는 패키지 종속성에 대한 :command:`find_package` 호출을 래핑합니다."
	},
	"CMakeFindFrameworks": {
		"name": "CMakeFindFrameworks",
		"description": "OSX 프레임워크를 찾는 도우미 모듈"
	},
	"CMakeFindPackageMode": {
		"name": "CMakeFindPackageMode",
		"description": "이 파일은 --find-package <Find-Package 도구 모드>를 사용하여 호출될 때 cmake에 의해 실행됩니다. -D를 사용하여 다음 변수가 설정됩니다."
	},
	"CMakeForceCompiler": {
		"name": "CMakeForceCompiler",
		"description": "이 모듈에서 제공하는 매크로는 CMake가 컴파일러 ID를 자동으로 검색할 수 없을 때 도구 체인 파일을 교차 컴파일하는 데 사용되었습니다. 이 모듈이 도입된 이후 CMake의 컴파일러 식별 기능이 향상되었으며 이제 컴파일러를 인식하도록 지정할 수 있습니다. 또한 CMake가 컴파일러에서 검색하는 정보 모음은 이제 너무 광범위하여 이러한 매크로를 사용하는 도구 체인 파일에서 제공할 수 없습니다."
	},
	"CMakeGraphVizOptions": {
		"name": "CMakeGraphVizOptions",
		"description": "CMake의 기본 제공 Graphviz 지원입니다."
	},
	"CMakePackageConfigHelpers": {
		"name": "CMakePackageConfigHelpers",
		"description": "패키지를 찾고 사용하기 위해 다른 프로젝트에서 포함할 수 있는 구성 파일을 만들기 위한 도우미 함수입니다."
	},
	"CMakeParseArguments": {
		"name": "CMakeParseArguments",
		"description": "이 모듈은 CMake에서 기본적으로 구현되는 cmake_parse_arguments 명령을 구현했습니다. 이제 CMake 3.4 이하에서 명령을 가져오는 데 포함된 프로젝트와의 호환성을 위한 빈 자리 표시자입니다."
	},
	"CMakePrintHelpers": {
		"name": "CMakePrintHelpers",
		"description": "속성 및 변수를 인쇄하는 편리한 기능(예: 디버깅에 유용)."
	},
	"CMakePrintSystemInformation": {
		"name": "CMakePrintSystemInformation",
		"description": "시스템 정보를 인쇄합니다."
	},
	"CMakePushCheckState": {
		"name": "CMakePushCheckState",
		"description": "이 모듈은 세 개의 매크로를 정의합니다: CMAKE_PUSH_CHECK_STATE(), CMAKE_POP_CHECK_STATE() 및 CMAKE_RESET_CHECK_STATE() 이 매크로는 CMake와 함께 제공되는 다양한 Check 파일에서 사용하는 변수 CMAKE_REQUIRED_FLAGS, CMAKE_REQUIRED_DEFINITIONS, CMAKE_REQUIRED_LINK_OPTIONS, CMAKE_REQUIRED_LIBRARIES, CMAKE_REQUIRED_INCLUDES 및 CMAKE_EXTRA_INCLUDE_FILES의 상태를 저장, 복원 및 재설정(즉, 내용 지우기)하는 데 사용할 수 있습니다. 예를 들어 check_function_exists() 등과 같습니다. 변수 콘텐츠가 스택에 푸시되고 여러 번 푸시가 지원됩니다. 예를 들어 이러한 테스트를 설정해야 하는 Find-module에서 실행할 때 유용하지만 Find-module이 실행된 후에는 이전과 동일한 값을 가져야 합니다."
	},
	"CMakeVerifyManifest": {
		"name": "CMakeVerifyManifest",
		"description": "CMakeVerifyManifest.cmake"
	},
	"CPack": {
		"name": "CPack",
		"description": "이진 설치 관리자 및 원본 패키지에 대한 생성기를 구성합니다."
	},
	"CPackArchive": {
		"name": "CPackArchive",
		"description": "CPack 보관 생성기에 대한 설명서는 여기로 이동되었습니다. CPack 보관 생성기"
	},
	"CPackBundle": {
		"name": "CPackBundle",
		"description": "CPack 번들 생성기에 대한 설명서는 여기로 이동되었습니다. CPack 번들 생성기"
	},
	"CPackComponent": {
		"name": "CPackComponent",
		"description": "이진 설치 관리자 및 원본 패키지에 대한 구성 요소를 구성합니다."
	},
	"CPackCygwin": {
		"name": "CPackCygwin",
		"description": "CPack Cygwin 생성기에 대한 설명서는 여기로 이동되었습니다. CPack Cygwin 생성기"
	},
	"CPackDeb": {
		"name": "CPackDeb",
		"description": "CPack DEB 생성기에 대한 설명서는 CPack DEB 생성기에서 이동되었습니다."
	},
	"CPackDMG": {
		"name": "CPackDMG",
		"description": "CPack DragNDrop 생성기에 대한 설명서는 여기로 이동되었습니다. CPack DragNDrop 생성기"
	},
	"CPackFreeBSD": {
		"name": "CPackFreeBSD",
		"description": "CPack FreeBSD 생성기에 대한 설명서는 여기로 이동되었습니다. CPack FreeBSD 생성기"
	},
	"CPackIFW": {
		"name": "CPackIFW",
		"description": "이 모듈은 QtIFW(Qt Installer Framework)와 함께 제공되는 명령줄 유틸리티의 위치를 찾습니다."
	},
	"CPackIFWConfigureFile": {
		"name": "CPackIFWConfigureFile",
		"description": "이 모듈은 QtIFW/SDK/Creator 스타일로 준비된 파일 템플릿을 구성하기 위해 configure_file과 유사한 명령을 정의합니다."
	},
	"CPackNSIS": {
		"name": "CPackNSIS",
		"description": "CPack NSIS 생성기에 대한 설명서는 여기로 이동되었습니다. CPack NSIS 생성기"
	},
	"CPackNuGet": {
		"name": "CPackNuGet",
		"description": "CPack NuGet 생성기에 대한 설명서는 여기로 이동되었습니다. CPack NuGet 생성기"
	},
	"CPackProductBuild": {
		"name": "CPackProductBuild",
		"description": "CPack productbuild 생성기에 대한 설명서는 여기로 이동되었습니다. CPack productbuild 생성기"
	},
	"CPackRPM": {
		"name": "CPackRPM",
		"description": "CPack RPM 생성기에 대한 설명서는 CPack RPM 생성기에서 이동되었습니다."
	},
	"CPackWIX": {
		"name": "CPackWIX",
		"description": "CPack WIX 생성기에 대한 설명서는 CPack WIX 생성기에서 이동되었습니다."
	},
	"CSharpUtilities": {
		"name": "CSharpUtilities",
		"description": "CSharp/.NET 대상의 구성을 더 쉽게 만드는 함수입니다."
	},
	"CTest": {
		"name": "CTest",
		"description": "CTest/CDash를 사용하여 테스트할 프로젝트 구성"
	},
	"CTestCoverageCollectGCOV": {
		"name": "CTestCoverageCollectGCOV",
		"description": "이 모듈은 ctest_coverage_collect_gcov 함수를 제공합니다."
	},
	"CTestScriptMode": {
		"name": "CTestScriptMode",
		"description": "이 파일은 스크립트 모드(-S)에서 ctest로 읽습니다."
	},
	"CTestUseLaunchers": {
		"name": "CTestUseLaunchers",
		"description": "CTEST_USE_LAUNCHERS가 켜져 있을 때 RULE_LAUNCH_* 전역 속성을 설정합니다."
	},
	"Dart": {
		"name": "Dart",
		"description": "CTest 또는 이전 처리 Tcl 클라이언트를 사용하여 테스트할 프로젝트 구성"
	},
	"DeployQt4": {
		"name": "DeployQt4",
		"description": "독립 실행형 Qt4 실행 파일을 어셈블하는 데 도움이 되는 함수입니다."
	},
	"Documentation": {
		"name": "Documentation",
		"description": "이 모듈에서는 VTK 설명서 프레임워크를 지원합니다. 여러 도구(Doxygen, Perl 등)를 사용합니다."
	},
	"ExternalData": {
		"name": "ExternalData",
		"description": "원본 트리 외부에 저장된 데이터 파일 관리"
	},
	"ExternalProject": {
		"name": "ExternalProject",
		"description": "ExternalProject_Add() 함수는 외부 프로젝트의 다운로드, 업데이트/패치, 구성, 빌드, 설치 및 테스트 단계를 구동하는 사용자 지정 대상을 만듭니다."
	},
	"FeatureSummary": {
		"name": "FeatureSummary",
		"description": "사용/사용 안 함 기능의 요약을 생성하는 함수입니다."
	},
	"FetchContent": {
		"name": "FetchContent",
		"description": "이 모듈에서는 ExternalProject 모듈에서 지원하는 모든 메서드를 통해 구성 시 콘텐츠를 채울 수 있습니다. ExternalProject_Add()는 빌드 시 다운로드되는 반면, FetchContent 모듈은 콘텐츠를 즉시 사용할 수 있도록 하여 구성 단계에서 add_subdirectory(), include() 또는 file() 작업과 같은 명령에서 콘텐츠를 사용할 수 있도록 합니다."
	},
	"FindALSA": {
		"name": "FindALSA",
		"description": "ALSA(Advanced Linux Sound Architecture) 찾기"
	},
	"FindArmadillo": {
		"name": "FindArmadillo",
		"description": "Armad도어 C++ 라이브러리를 찾습니다. Armad 표시는 선형 대수 및 과학 컴퓨팅을 위한 라이브러리입니다."
	},
	"FindASPELL": {
		"name": "FindASPELL",
		"description": "ASPELL 찾기 시도"
	},
	"FindAVIFile": {
		"name": "FindAVIFile",
		"description": "AVIFILE 라이브러리 찾기 및 경로 포함"
	},
	"FindBacktrace": {
		"name": "FindBacktrace",
		"description": "backtrace(3)에 대한 공급자를 찾습니다."
	},
	"FindBISON": {
		"name": "FindBISON",
		"description": "들소 실행 파일을 찾고 사용자 지정 빌드 규칙을 생성하는 매크로를 제공합니다."
	},
	"FindBLAS": {
		"name": "FindBLAS",
		"description": "BLAS(기본 선형 대수 하위 프로그램) 라이브러리 찾기"
	},
	"FindBoost": {
		"name": "FindBoost",
		"description": "Boost 포함 디렉터리 및 라이브러리 찾기"
	},
	"FindBullet": {
		"name": "FindBullet",
		"description": "글머리 기호 물리학 엔진을 찾아보세요."
	},
	"FindBZip2": {
		"name": "FindBZip2",
		"description": "BZip2 찾기 시도"
	},
	"FindCABLE": {
		"name": "FindCABLE",
		"description": "CABLE 찾기"
	},
	"FindCoin3D": {
		"name": "FindCoin3D",
		"description": "Coin3D 찾기(오픈 인벤토리)"
	},
	"FindCUDA": {
		"name": "FindCUDA",
		"description": "더 이상 이 모듈을 사용하거나 CUDA(find_package)를 호출하여 CUDA 코드를 컴파일할 필요가 없습니다. 대신 프로젝트 명령에 대한 최상위 호출에서 명명된 언어 중에서 CUDA를 나열하거나 CUDA를 사용하여 enable_language 명령을 호출합니다. 그런 다음 다른 언어와 유사한 대상에 직접 CUDA(.cu) 소스를 추가할 수 있습니다."
	},
	"FindCUDAToolkit": {
		"name": "FindCUDAToolkit",
		"description": "이 스크립트는 NVIDIA CUDA 도구 키트 및 연결된 라이브러리를 찾지만 지정된 프로젝트에 대해 CUDA 언어를 사용하도록 설정할 필요는 없습니다. 이 모듈은 NVIDIA CUDA 샘플을 검색하지 않습니다."
	},
	"FindCups": {
		"name": "FindCups",
		"description": "CUPS(Common UNIX Printing System)를 찾습니다."
	},
	"FindCURL": {
		"name": "FindCURL",
		"description": "네이티브 CURL 헤더 및 라이브러리를 찾습니다."
	},
	"FindCurses": {
		"name": "FindCurses",
		"description": "파일 및 라이브러리를 포함하는 curses 또는 ncurses를 찾습니다."
	},
	"FindCVS": {
		"name": "FindCVS",
		"description": "CVS(동시 버전 시스템)를 찾습니다."
	},
	"FindCxxTest": {
		"name": "FindCxxTest",
		"description": "CxxTest 단위 테스트 프레임워크를 찾습니다."
	},
	"FindCygwin": {
		"name": "FindCygwin",
		"description": "Microsoft Windows에서 기본적으로 실행되는 POSIX 호환 환경인 Cygwin 찾기"
	},
	"FindDart": {
		"name": "FindDart",
		"description": "DART 찾기"
	},
	"FindDCMTK": {
		"name": "FindDCMTK",
		"description": "DCMTK(DICOM ToolKit) 라이브러리 및 애플리케이션 찾기"
	},
	"FindDevIL": {
		"name": "FindDevIL",
		"description": "이 모듈은 개발자의 이미지 라이브러리를 찾습니다. https://openil.sourceforge.net/"
	},
	"FindDoxygen": {
		"name": "FindDoxygen",
		"description": "Doxygen은 설명서 생성 도구입니다(https://www.doxygen.nl 참조). 이 모듈에서는 Doxygen 및 Doxygen이 지원하는 몇 가지 선택적 도구를 찾습니다."
	},
	"FindEnvModules": {
		"name": "FindEnvModules",
		"description": "환경 모듈 구현을 찾아 CMake 스크립트에서 사용할 수 있는 명령을 만듭니다. 이는 Lua 기반 Lmod 및 TCL 기반 EnvironmentModules 모두와 호환됩니다."
	},
	"FindEXPAT": {
		"name": "FindEXPAT",
		"description": "네이티브 표시줄 헤더 및 라이브러리를 찾습니다. 가요는 C로 작성된 스트림 지향 XML 파서 라이브러리입니다."
	},
	"FindFLEX": {
		"name": "FindFLEX",
		"description": "Flex(Fast Lexical Analyzer) 실행 파일을 찾고 사용자 지정 빌드 규칙을 생성하는 매크로를 제공합니다."
	},
	"FindFLTK": {
		"name": "FindFLTK",
		"description": "FLTK(Fast Light Toolkit) 라이브러리 찾기"
	},
	"FindFLTK2": {
		"name": "FindFLTK2",
		"description": "네이티브 FLTK 2.0 포함 및 라이브러리 찾기"
	},
	"FindFontconfig": {
		"name": "FindFontconfig",
		"description": "Fontconfig 헤더 및 라이브러리를 찾습니다."
	},
	"FindFreetype": {
		"name": "FindFreetype",
		"description": "FreeType 글꼴 렌더러 포함 및 라이브러리를 찾습니다."
	},
	"FindGCCXML": {
		"name": "FindGCCXML",
		"description": "GCC-XML 프런트 엔드 실행 파일을 찾습니다."
	},
	"FindGDAL": {
		"name": "FindGDAL",
		"description": "GDAL(지리 공간적 데이터 추상화 라이브러리)을 찾습니다."
	},
	"FindGettext": {
		"name": "FindGettext",
		"description": "GNU gettext 도구 찾기"
	},
	"FindGIF": {
		"name": "FindGIF",
		"description": "그러면 GIF(Graphics Interchange Format) 라이브러리(giflib)를 찾습니다."
	},
	"FindGit": {
		"name": "FindGit",
		"description": "모듈은 다음 변수를 정의합니다."
	},
	"FindGLEW": {
		"name": "FindGLEW",
		"description": "GLEW(OpenGL 확장 Wrangler 라이브러리) 찾기"
	},
	"FindGLUT": {
		"name": "FindGLUT",
		"description": "GLUT(OpenGL Utility Toolkit) 라이브러리 및 포함 파일을 찾습니다."
	},
	"FindGnuplot": {
		"name": "FindGnuplot",
		"description": "이 모듈은 gnuplot을 찾습니다."
	},
	"FindGnuTLS": {
		"name": "FindGnuTLS",
		"description": "GNU 전송 계층 보안 라이브러리 (gnutls) 찾기"
	},
	"FindGSL": {
		"name": "FindGSL",
		"description": "네이티브 GSL(GNU Scientific Library) 포함 및 라이브러리를 찾습니다."
	},
	"FindGTest": {
		"name": "FindGTest",
		"description": "Google C++ 테스트 프레임워크를 찾습니다."
	},
	"FindGTK": {
		"name": "FindGTK",
		"description": "GTK, glib 및 GTKGLArea 찾기"
	},
	"FindGTK2": {
		"name": "FindGTK2",
		"description": "GTK2 위젯 라이브러리와 gtkmm, glade 및 glademm과 같은 다른 여러 선택적 구성 요소를 찾습니다."
	},
	"FindHDF5": {
		"name": "FindHDF5",
		"description": "배열 데이터를 직접 읽고 쓰기 위한 라이브러리인 HDF5(계층적 데이터 형식)를 찾습니다."
	},
	"FindHg": {
		"name": "FindHg",
		"description": "수은 작업 복사본에서 정보를 추출합니다."
	},
	"FindHSPELL": {
		"name": "FindHSPELL",
		"description": "히브리어 맞춤법 검사기(Hspell) 및 모폴로지 엔진 찾기를 시도합니다."
	},
	"FindHTMLHelp": {
		"name": "FindHTMLHelp",
		"description": "이 모듈은 Microsoft HTML 도움말 컴파일러를 찾습니다."
	},
	"FindIce": {
		"name": "FindIce",
		"description": "ZEROC ICE(인터넷 통신 엔진) 프로그램, 라이브러리 및 데이터 파일을 찾습니다."
	},
	"FindIconv": {
		"name": "FindIconv",
		"description": "이 모듈은 시스템에서 iconv() POSIX.1 함수를 찾습니다. 이러한 함수는 일반 C 라이브러리에서 제공되거나 외부적으로 추가 라이브러리 형식으로 제공될 수 있습니다."
	},
	"FindIcotool": {
		"name": "FindIcotool",
		"description": "icotool 찾기"
	},
	"FindICU": {
		"name": "FindICU",
		"description": "ICU(International Components for Unicode) 라이브러리 및 프로그램을 찾습니다."
	},
	"FindImageMagick": {
		"name": "FindImageMagick",
		"description": "래스터 이미지를 표시, 변환 및 조작하기 위한 소프트웨어 제품군인 ImageMagick을 찾습니다."
	},
	"FindIntl": {
		"name": "FindIntl",
		"description": "Gettext libintl 헤더 및 라이브러리를 찾습니다."
	},
	"FindITK": {
		"name": "FindITK",
		"description": "이 모듈은 더 이상 존재하지 않습니다."
	},
	"FindJasper": {
		"name": "FindJasper",
		"description": "Jasper JPEG2000 라이브러리를 찾습니다."
	},
	"FindJava": {
		"name": "FindJava",
		"description": "Java 찾기"
	},
	"FindJNI": {
		"name": "FindJNI",
		"description": "JNI(Java 네이티브 인터페이스) 헤더 및 라이브러리를 찾습니다."
	},
	"FindJPEG": {
		"name": "FindJPEG",
		"description": "JPEG(Joint Photographic Experts Group) 라이브러리(lib jpeg) 찾기"
	},
	"FindKDE3": {
		"name": "FindKDE3",
		"description": "KDE3 포함 및 라이브러리 디렉터리, KDE 전처리기 찾기 및 일부 매크로 정의"
	},
	"FindKDE4": {
		"name": "FindKDE4",
		"description": "KDE4를 찾고 소프트웨어를 컴파일하는 데 필요한 모든 변수와 매크로를 제공합니다. 지정된 순서로 다음 디렉터리에서 KDE 4를 찾습니다."
	},
	"FindLAPACK": {
		"name": "FindLAPACK",
		"description": "LAPACK(선형 대수 PACKage) 라이브러리 찾기"
	},
	"FindLATEX": {
		"name": "FindLATEX",
		"description": "LaTeX 찾기"
	},
	"FindLibArchive": {
		"name": "FindLibArchive",
		"description": "라이브러리 및 헤더를 찾습니다. Libarchive는 다중 형식 보관 및 압축 라이브러리입니다."
	},
	"FindLibinput": {
		"name": "FindLibinput",
		"description": "libinput 헤더 및 라이브러리를 찾습니다."
	},
	"FindLibLZMA": {
		"name": "FindLibLZMA",
		"description": "LZMA 압축 알고리즘 헤더 및 라이브러리를 찾습니다."
	},
	"FindLibXml2": {
		"name": "FindLibXml2",
		"description": "XML 처리 라이브러리(libxml2)를 찾습니다."
	},
	"FindLibXslt": {
		"name": "FindLibXslt",
		"description": "XSL 변환, XSLT(Extensible Stylesheet Language Transformations) 라이브러리 찾기(LibXslt)"
	},
	"FindLTTngUST": {
		"name": "FindLTTngUST",
		"description": "Linux 추적 도구 키트 차세대(LTTng-UST) 라이브러리를 찾습니다."
	},
	"FindLua": {
		"name": "FindLua",
		"description": "Lua 라이브러리를 찾습니다."
	},
	"FindLua50": {
		"name": "FindLua50",
		"description": "Lua 라이브러리를 찾습니다."
	},
	"FindLua51": {
		"name": "FindLua51",
		"description": "Lua 라이브러리를 찾습니다. 이 모듈은 다음을 정의합니다."
	},
	"FindMatlab": {
		"name": "FindMatlab",
		"description": "Matlab 또는 MCR(Matlab Compiler Runtime)을 찾아서 Matlab 도구, 라이브러리 및 컴파일러를 CMake에 제공합니다."
	},
	"FindMFC": {
		"name": "FindMFC",
		"description": "Windows에서 MFC(MFC 라이브러리) 찾기"
	},
	"FindMotif": {
		"name": "FindMotif",
		"description": "Motif(또는 lesstif) 찾기 시도"
	},
	"FindMPEG": {
		"name": "FindMPEG",
		"description": "네이티브 MPEG 포함 및 라이브러리 찾기"
	},
	"FindMPEG2": {
		"name": "FindMPEG2",
		"description": "네이티브 MPEG2 포함 및 라이브러리 찾기"
	},
	"FindMPI": {
		"name": "FindMPI",
		"description": "MPI(메시지 전달 인터페이스) 구현을 찾습니다."
	},
	"FindMsys": {
		"name": "FindMsys",
		"description": "Microsoft Windows에서 기본적으로 실행되는 POSIX 호환 환경인 MSYS 찾기"
	},
	"FindODBC": {
		"name": "FindODBC",
		"description": "ODBC(Open Database Connectivity) 포함 디렉터리 및 라이브러리를 찾습니다."
	},
	"FindOpenACC": {
		"name": "FindOpenACC",
		"description": "컴파일러에서 OpenACC 지원을 검색합니다."
	},
	"FindOpenAL": {
		"name": "FindOpenAL",
		"description": "OpenAL(Open Audio Library)을 찾습니다."
	},
	"FindOpenCL": {
		"name": "FindOpenCL",
		"description": "OpenCL(Open Computing Language)을 찾습니다."
	},
	"FindOpenGL": {
		"name": "FindOpenGL",
		"description": "OpenGL 및 GLU(OpenGL 유틸리티 라이브러리)용 FindModule."
	},
	"FindOpenMP": {
		"name": "FindOpenMP",
		"description": "OpenMP(Open Multi-Processing) 지원을 찾습니다."
	},
	"FindOpenSceneGraph": {
		"name": "FindOpenSceneGraph",
		"description": "OpenSceneGraph(3D 그래픽 애플리케이션 프로그래밍 인터페이스) 찾기"
	},
	"FindOpenSP": {
		"name": "FindOpenSP",
		"description": "OpenSP 라이브러리 찾기를 시도하세요."
	},
	"FindOpenSSL": {
		"name": "FindOpenSSL",
		"description": "OpenSSL 암호화 라이브러리를 찾습니다."
	},
	"FindOpenThreads": {
		"name": "FindOpenThreads",
		"description": "OpenThreads는 C++ 기반 스레딩 라이브러리입니다. 가장 큰 사용자 기반은 OpenSceneGraph인 것 같으므로 OSGDIR을 환경 경로로 수락할 수 있습니다. OpenSceneGraph 구성 요소를 찾는 데 사용되는 Findosg* 제품군의 이 부분을 고려합니다. 각 구성 요소는 별개이며 각 모듈에 옵트인해야 합니다."
	},
	"Findosg": {
		"name": "Findosg",
		"description": "OpenSceneGraph 구성 요소를 찾는 데 사용되는 Findosg* 제품군의 일부입니다. 각 구성 요소는 별개이며 각 모듈에 옵트인해야 합니다. 또한 이러한 모듈은 사용자 대신 자동으로 수행되지 않으므로 OpenGL 및 OpenThread(필요한 경우 Producer)를 선택해야 합니다. 이는 특정 구성 요소를 선택 해제하거나 특정 모듈에 대한 찾기 동작을 변경해야 하는 경우 (아마도 기본 FindOpenGL 모듈이 시스템에서 작동하지 않기 때문에) 자신의 시스템을 하나씩 제어할 수 있도록 하기 위한 것입니다. 모든 것을 포함하는 더 편리한 모듈을 사용하려면 Findosg*.cmake 모듈 대신 FindOpenSceneGraph를 사용하세요."
	},
	"FindosgAnimation": {
		"name": "FindosgAnimation",
		"description": "OpenSceneGraph 구성 요소를 찾는 데 사용되는 Findosg* 제품군의 일부입니다. 각 구성 요소는 별개이며 각 모듈에 옵트인해야 합니다. 또한 이러한 모듈은 사용자 대신 자동으로 수행되지 않으므로 OpenGL 및 OpenThread(필요한 경우 Producer)를 선택해야 합니다. 이는 특정 구성 요소를 선택 해제하거나 특정 모듈에 대한 찾기 동작을 변경해야 하는 경우 (아마도 기본 FindOpenGL 모듈이 시스템에서 작동하지 않기 때문에) 자신의 시스템을 하나씩 제어할 수 있도록 하기 위한 것입니다. 모든 것을 포함하는 더 편리한 모듈을 사용하려면 Findosg*.cmake 모듈 대신 FindOpenSceneGraph를 사용하세요."
	},
	"FindosgDB": {
		"name": "FindosgDB",
		"description": "OpenSceneGraph 구성 요소를 찾는 데 사용되는 Findosg* 제품군의 일부입니다. 각 구성 요소는 별개이며 각 모듈에 옵트인해야 합니다. 또한 이러한 모듈은 사용자 대신 자동으로 수행되지 않으므로 OpenGL 및 OpenThread(필요한 경우 Producer)를 선택해야 합니다. 이는 특정 구성 요소를 선택 해제하거나 특정 모듈에 대한 찾기 동작을 변경해야 하는 경우 (아마도 기본 FindOpenGL 모듈이 시스템에서 작동하지 않기 때문에) 자신의 시스템을 하나씩 제어할 수 있도록 하기 위한 것입니다. 모든 것을 포함하는 더 편리한 모듈을 사용하려면 Findosg*.cmake 모듈 대신 FindOpenSceneGraph를 사용하세요."
	},
	"FindosgFX": {
		"name": "FindosgFX",
		"description": "OpenSceneGraph 구성 요소를 찾는 데 사용되는 Findosg* 제품군의 일부입니다. 각 구성 요소는 별개이며 각 모듈에 옵트인해야 합니다. 또한 이러한 모듈은 사용자 대신 자동으로 수행되지 않으므로 OpenGL 및 OpenThread(필요한 경우 Producer)를 선택해야 합니다. 이는 특정 구성 요소를 선택 해제하거나 특정 모듈에 대한 찾기 동작을 변경해야 하는 경우 (아마도 기본 FindOpenGL 모듈이 시스템에서 작동하지 않기 때문에) 자신의 시스템을 하나씩 제어할 수 있도록 하기 위한 것입니다. 모든 것을 포함하는 더 편리한 모듈을 사용하려면 Findosg*.cmake 모듈 대신 FindOpenSceneGraph를 사용하세요."
	},
	"FindosgGA": {
		"name": "FindosgGA",
		"description": "OpenSceneGraph 구성 요소를 찾는 데 사용되는 Findosg* 제품군의 일부입니다. 각 구성 요소는 별개이며 각 모듈에 옵트인해야 합니다. 또한 이러한 모듈은 사용자 대신 자동으로 수행되지 않으므로 OpenGL 및 OpenThread(필요한 경우 Producer)를 선택해야 합니다. 이는 특정 구성 요소를 선택 해제하거나 특정 모듈에 대한 찾기 동작을 변경해야 하는 경우 (아마도 기본 FindOpenGL 모듈이 시스템에서 작동하지 않기 때문에) 자신의 시스템을 하나씩 제어할 수 있도록 하기 위한 것입니다. 모든 것을 포함하는 더 편리한 모듈을 사용하려면 Findosg*.cmake 모듈 대신 FindOpenSceneGraph를 사용하세요."
	},
	"FindosgIntrospection": {
		"name": "FindosgIntrospection",
		"description": "OpenSceneGraph 구성 요소를 찾는 데 사용되는 Findosg* 제품군의 일부입니다. 각 구성 요소는 별개이며 각 모듈에 옵트인해야 합니다. 또한 이러한 모듈은 사용자 대신 자동으로 수행되지 않으므로 OpenGL 및 OpenThread(필요한 경우 Producer)를 선택해야 합니다. 이는 특정 구성 요소를 선택 해제하거나 특정 모듈에 대한 찾기 동작을 변경해야 하는 경우 (아마도 기본 FindOpenGL 모듈이 시스템에서 작동하지 않기 때문에) 자신의 시스템을 하나씩 제어할 수 있도록 하기 위한 것입니다. 모든 것을 포함하는 더 편리한 모듈을 사용하려면 Findosg*.cmake 모듈 대신 FindOpenSceneGraph를 사용하세요."
	},
	"FindosgManipulator": {
		"name": "FindosgManipulator",
		"description": "OpenSceneGraph 구성 요소를 찾는 데 사용되는 Findosg* 제품군의 일부입니다. 각 구성 요소는 별개이며 각 모듈에 옵트인해야 합니다. 또한 이러한 모듈은 사용자 대신 자동으로 수행되지 않으므로 OpenGL 및 OpenThread(필요한 경우 Producer)를 선택해야 합니다. 이는 특정 구성 요소를 선택 해제하거나 특정 모듈에 대한 찾기 동작을 변경해야 하는 경우 (아마도 기본 FindOpenGL 모듈이 시스템에서 작동하지 않기 때문에) 자신의 시스템을 하나씩 제어할 수 있도록 하기 위한 것입니다. 모든 것을 포함하는 더 편리한 모듈을 사용하려면 Findosg*.cmake 모듈 대신 FindOpenSceneGraph를 사용하세요."
	},
	"FindosgParticle": {
		"name": "FindosgParticle",
		"description": "OpenSceneGraph 구성 요소를 찾는 데 사용되는 Findosg* 제품군의 일부입니다. 각 구성 요소는 별개이며 각 모듈에 옵트인해야 합니다. 또한 이러한 모듈은 사용자 대신 자동으로 수행되지 않으므로 OpenGL 및 OpenThread(필요한 경우 Producer)를 선택해야 합니다. 이는 특정 구성 요소를 선택 해제하거나 특정 모듈에 대한 찾기 동작을 변경해야 하는 경우 (아마도 기본 FindOpenGL 모듈이 시스템에서 작동하지 않기 때문에) 자신의 시스템을 하나씩 제어할 수 있도록 하기 위한 것입니다. 모든 것을 포함하는 더 편리한 모듈을 사용하려면 Findosg*.cmake 모듈 대신 FindOpenSceneGraph를 사용하세요."
	},
	"FindosgPresentation": {
		"name": "FindosgPresentation",
		"description": "OpenSceneGraph 구성 요소를 찾는 데 사용되는 Findosg* 제품군의 일부입니다. 각 구성 요소는 별개이며 각 모듈에 옵트인해야 합니다. 또한 이러한 모듈은 사용자 대신 자동으로 수행되지 않으므로 OpenGL 및 OpenThread(필요한 경우 Producer)를 선택해야 합니다. 이는 특정 구성 요소를 선택 해제하거나 특정 모듈에 대한 찾기 동작을 변경해야 하는 경우 (아마도 기본 FindOpenGL 모듈이 시스템에서 작동하지 않기 때문에) 자신의 시스템을 하나씩 제어할 수 있도록 하기 위한 것입니다. 모든 것을 포함하는 더 편리한 모듈을 사용하려면 Findosg*.cmake 모듈 대신 FindOpenSceneGraph를 사용하세요."
	},
	"FindosgProducer": {
		"name": "FindosgProducer",
		"description": "OpenSceneGraph 구성 요소를 찾는 데 사용되는 Findosg* 제품군의 일부입니다. 각 구성 요소는 별개이며 각 모듈에 옵트인해야 합니다. 또한 이러한 모듈은 사용자 대신 자동으로 수행되지 않으므로 OpenGL 및 OpenThread(필요한 경우 Producer)를 선택해야 합니다. 이는 특정 구성 요소를 선택 해제하거나 특정 모듈에 대한 찾기 동작을 변경해야 하는 경우 (아마도 기본 FindOpenGL 모듈이 시스템에서 작동하지 않기 때문에) 자신의 시스템을 하나씩 제어할 수 있도록 하기 위한 것입니다. 모든 것을 포함하는 더 편리한 모듈을 사용하려면 Findosg*.cmake 모듈 대신 FindOpenSceneGraph를 사용하세요."
	},
	"FindosgQt": {
		"name": "FindosgQt",
		"description": "OpenSceneGraph 구성 요소를 찾는 데 사용되는 Findosg* 제품군의 일부입니다. 각 구성 요소는 별개이며 각 모듈에 옵트인해야 합니다. 또한 이러한 모듈은 사용자 대신 자동으로 수행되지 않으므로 OpenGL 및 OpenThread(필요한 경우 Producer)를 선택해야 합니다. 이는 특정 구성 요소를 선택 해제하거나 특정 모듈에 대한 찾기 동작을 변경해야 하는 경우 (아마도 기본 FindOpenGL 모듈이 시스템에서 작동하지 않기 때문에) 자신의 시스템을 하나씩 제어할 수 있도록 하기 위한 것입니다. 모든 것을 포함하는 더 편리한 모듈을 사용하려면 Findosg*.cmake 모듈 대신 FindOpenSceneGraph를 사용하세요."
	},
	"FindosgShadow": {
		"name": "FindosgShadow",
		"description": "OpenSceneGraph 구성 요소를 찾는 데 사용되는 Findosg* 제품군의 일부입니다. 각 구성 요소는 별개이며 각 모듈에 옵트인해야 합니다. 또한 이러한 모듈은 사용자 대신 자동으로 수행되지 않으므로 OpenGL 및 OpenThread(필요한 경우 Producer)를 선택해야 합니다. 이는 특정 구성 요소를 선택 해제하거나 특정 모듈에 대한 찾기 동작을 변경해야 하는 경우 (아마도 기본 FindOpenGL 모듈이 시스템에서 작동하지 않기 때문에) 자신의 시스템을 하나씩 제어할 수 있도록 하기 위한 것입니다. 모든 것을 포함하는 더 편리한 모듈을 사용하려면 Findosg*.cmake 모듈 대신 FindOpenSceneGraph를 사용하세요."
	},
	"FindosgSim": {
		"name": "FindosgSim",
		"description": "OpenSceneGraph 구성 요소를 찾는 데 사용되는 Findosg* 제품군의 일부입니다. 각 구성 요소는 별개이며 각 모듈에 옵트인해야 합니다. 또한 이러한 모듈은 사용자 대신 자동으로 수행되지 않으므로 OpenGL 및 OpenThread(필요한 경우 Producer)를 선택해야 합니다. 이는 특정 구성 요소를 선택 해제하거나 특정 모듈에 대한 찾기 동작을 변경해야 하는 경우 (아마도 기본 FindOpenGL 모듈이 시스템에서 작동하지 않기 때문에) 자신의 시스템을 하나씩 제어할 수 있도록 하기 위한 것입니다. 모든 것을 포함하는 더 편리한 모듈을 사용하려면 Findosg*.cmake 모듈 대신 FindOpenSceneGraph를 사용하세요."
	},
	"FindosgTerrain": {
		"name": "FindosgTerrain",
		"description": "OpenSceneGraph 구성 요소를 찾는 데 사용되는 Findosg* 제품군의 일부입니다. 각 구성 요소는 별개이며 각 모듈에 옵트인해야 합니다. 또한 이러한 모듈은 사용자 대신 자동으로 수행되지 않으므로 OpenGL 및 OpenThread(필요한 경우 Producer)를 선택해야 합니다. 이는 특정 구성 요소를 선택 해제하거나 특정 모듈에 대한 찾기 동작을 변경해야 하는 경우 (아마도 기본 FindOpenGL 모듈이 시스템에서 작동하지 않기 때문에) 자신의 시스템을 하나씩 제어할 수 있도록 하기 위한 것입니다. 모든 것을 포함하는 더 편리한 모듈을 사용하려면 Findosg*.cmake 모듈 대신 FindOpenSceneGraph를 사용하세요."
	},
	"FindosgText": {
		"name": "FindosgText",
		"description": "OpenSceneGraph 구성 요소를 찾는 데 사용되는 Findosg* 제품군의 일부입니다. 각 구성 요소는 별개이며 각 모듈에 옵트인해야 합니다. 또한 이러한 모듈은 사용자 대신 자동으로 수행되지 않으므로 OpenGL 및 OpenThread(필요한 경우 Producer)를 선택해야 합니다. 이는 특정 구성 요소를 선택 해제하거나 특정 모듈에 대한 찾기 동작을 변경해야 하는 경우 (아마도 기본 FindOpenGL 모듈이 시스템에서 작동하지 않기 때문에) 자신의 시스템을 하나씩 제어할 수 있도록 하기 위한 것입니다. 모든 것을 포함하는 더 편리한 모듈을 사용하려면 Findosg*.cmake 모듈 대신 FindOpenSceneGraph를 사용하세요."
	},
	"FindosgUtil": {
		"name": "FindosgUtil",
		"description": "OpenSceneGraph 구성 요소를 찾는 데 사용되는 Findosg* 제품군의 일부입니다. 각 구성 요소는 별개이며 각 모듈에 옵트인해야 합니다. 또한 이러한 모듈은 사용자 대신 자동으로 수행되지 않으므로 OpenGL 및 OpenThread(필요한 경우 Producer)를 선택해야 합니다. 이는 특정 구성 요소를 선택 해제하거나 특정 모듈에 대한 찾기 동작을 변경해야 하는 경우 (아마도 기본 FindOpenGL 모듈이 시스템에서 작동하지 않기 때문에) 자신의 시스템을 하나씩 제어할 수 있도록 하기 위한 것입니다. 모든 것을 포함하는 더 편리한 모듈을 사용하려면 Findosg*.cmake 모듈 대신 FindOpenSceneGraph를 사용하세요."
	},
	"FindosgViewer": {
		"name": "FindosgViewer",
		"description": "OpenSceneGraph 구성 요소를 찾는 데 사용되는 Findosg* 제품군의 일부입니다. 각 구성 요소는 별개이며 각 모듈에 옵트인해야 합니다. 또한 이러한 모듈은 사용자 대신 자동으로 수행되지 않으므로 OpenGL 및 OpenThread(필요한 경우 Producer)를 선택해야 합니다. 이는 특정 구성 요소를 선택 해제하거나 특정 모듈에 대한 찾기 동작을 변경해야 하는 경우 (아마도 기본 FindOpenGL 모듈이 시스템에서 작동하지 않기 때문에) 자신의 시스템을 하나씩 제어할 수 있도록 하기 위한 것입니다. 모든 것을 포함하는 더 편리한 모듈을 사용하려면 Findosg*.cmake 모듈 대신 FindOpenSceneGraph를 사용하세요."
	},
	"FindosgVolume": {
		"name": "FindosgVolume",
		"description": "OpenSceneGraph 구성 요소를 찾는 데 사용되는 Findosg* 제품군의 일부입니다. 각 구성 요소는 별개이며 각 모듈에 옵트인해야 합니다. 또한 이러한 모듈은 사용자 대신 자동으로 수행되지 않으므로 OpenGL 및 OpenThread(필요한 경우 Producer)를 선택해야 합니다. 이는 특정 구성 요소를 선택 해제하거나 특정 모듈에 대한 찾기 동작을 변경해야 하는 경우 (아마도 기본 FindOpenGL 모듈이 시스템에서 작동하지 않기 때문에) 자신의 시스템을 하나씩 제어할 수 있도록 하기 위한 것입니다. 모든 것을 포함하는 더 편리한 모듈을 사용하려면 Findosg*.cmake 모듈 대신 FindOpenSceneGraph를 사용하세요."
	},
	"FindosgWidget": {
		"name": "FindosgWidget",
		"description": "OpenSceneGraph 구성 요소를 찾는 데 사용되는 Findosg* 제품군의 일부입니다. 각 구성 요소는 별개이며 각 모듈에 옵트인해야 합니다. 또한 이러한 모듈은 사용자 대신 자동으로 수행되지 않으므로 OpenGL 및 OpenThread(필요한 경우 Producer)를 선택해야 합니다. 이는 특정 구성 요소를 선택 해제하거나 특정 모듈에 대한 찾기 동작을 변경해야 하는 경우 (아마도 기본 FindOpenGL 모듈이 시스템에서 작동하지 않기 때문에) 자신의 시스템을 하나씩 제어할 수 있도록 하기 위한 것입니다. 모든 것을 포함하는 더 편리한 모듈을 사용하려면 Findosg*.cmake 모듈 대신 FindOpenSceneGraph를 사용하세요."
	},
	"Findosg_functions": {
		"name": "Findosg_functions",
		"description": "이 CMake 파일에는 OSG 라이브러리 및 nodekit 검색을 지원하는 두 개의 매크로가 포함되어 있습니다. 전체 설명서는 FindOpenSceneGraph를 참조하세요."
	},
	"FindPackageHandleStandardArgs": {
		"name": "FindPackageHandleStandardArgs",
		"description": "이 모듈은 find_package(<PackageName>) 호출을 구현하는 모듈 찾기에 사용할 함수를 제공합니다."
	},
	"FindPackageMessage": {
		"name": "FindPackageMessage",
		"description": "이 함수는 FindXXX.cmake 모듈 파일에서 사용됩니다. 각 고유한 찾기 결과에 대해 메시지를 한 번 인쇄합니다. 이는 패키지가 발견된 위치를 사용자에게 알리는 데 유용합니다. 첫 번째 인수는 패키지의 이름(XXX)을 지정합니다. 두 번째 인수는 표시할 메시지를 지정합니다. 세 번째 인수는 찾기 결과에 대한 세부 정보를 나열하므로 변경하면 메시지가 다시 표시됩니다. 또한 매크로는 QUIET 인수를 find_package 명령에 적용합니다."
	},
	"FindPatch": {
		"name": "FindPatch",
		"description": "모듈은 다음 변수를 정의합니다."
	},
	"FindPerl": {
		"name": "FindPerl",
		"description": "Perl 인터프리터를 찾습니다."
	},
	"FindPerlLibs": {
		"name": "FindPerlLibs",
		"description": "Perl 라이브러리 찾기"
	},
	"FindPHP4": {
		"name": "FindPHP4",
		"description": "PHP4 찾기"
	},
	"FindPhysFS": {
		"name": "FindPhysFS",
		"description": "PhysFS 라이브러리 찾기 이 모듈은 다음을 정의합니다."
	},
	"FindPike": {
		"name": "FindPike",
		"description": "Pike 찾기"
	},
	"FindPkgConfig": {
		"name": "FindPkgConfig",
		"description": "CMake용 pkg-config 모듈."
	},
	"FindPNG": {
		"name": "FindPNG",
		"description": "PNG 이미지 형식의 공식 참조 라이브러리인 libpng를 찾습니다."
	},
	"FindPostgreSQL": {
		"name": "FindPostgreSQL",
		"description": "PostgreSQL 설치를 찾습니다."
	},
	"FindProducer": {
		"name": "FindProducer",
		"description": "생산자가 OpenSceneGraph에 직접 속하지는 않지만 기본 사용자는 OSG이므로 OpenSceneGraph 구성 요소를 찾는 데 사용되는 Findosg* 제품군의 이 부분을 고려합니다. OSGDIR을 환경 경로로 수락합니다."
	},
	"FindProtobuf": {
		"name": "FindProtobuf",
		"description": "Google 프로토콜 버퍼 라이브러리를 찾아 구성합니다."
	},
	"FindPython": {
		"name": "FindPython",
		"description": "Python 인터프리터, 컴파일러 및 개발 환경(디렉터리 및 라이브러리 포함)을 찾습니다."
	},
	"FindPython2": {
		"name": "FindPython2",
		"description": "Python 2 인터프리터, 컴파일러 및 개발 환경(디렉터리 및 라이브러리 포함)을 찾습니다."
	},
	"FindPython3": {
		"name": "FindPython3",
		"description": "Python 3 인터프리터, 컴파일러 및 개발 환경(디렉터리 및 라이브러리 포함)을 찾습니다."
	},
	"FindPythonInterp": {
		"name": "FindPythonInterp",
		"description": "Python 인터프리터 찾기"
	},
	"FindPythonLibs": {
		"name": "FindPythonLibs",
		"description": "Python 라이브러리 찾기"
	},
	"FindQt": {
		"name": "FindQt",
		"description": "설치된 모든 버전의 Qt3 또는 Qt4를 검색합니다."
	},
	"FindQt3": {
		"name": "FindQt3",
		"description": "Qt 포함 경로 및 라이브러리 찾기"
	},
	"FindQt4": {
		"name": "FindQt4",
		"description": "이 모듈을 사용하여 Qt4를 찾을 수 있습니다. 가장 중요한 문제는 Qt4 qmake를 시스템 경로를 통해 사용할 수 있다는 것입니다. 이 qmake는 기본적으로 다른 모든 항목을 검색하는 데 사용됩니다. 이 모듈은 여러 IMPORTED 대상, 매크로 및 변수를 정의합니다."
	},
	"FindQuickTime": {
		"name": "FindQuickTime",
		"description": "QuickTime 찾기 이 모듈은 다음을 정의합니다."
	},
	"FindRTI": {
		"name": "FindRTI",
		"description": "M&S HLA RTI 라이브러리 찾기 시도"
	},
	"FindRuby": {
		"name": "FindRuby",
		"description": "Ruby 찾기"
	},
	"FindSDL": {
		"name": "FindSDL",
		"description": "SDL 라이브러리 찾기"
	},
	"FindSDL_gfx": {
		"name": "FindSDL_gfx",
		"description": "SDL_gfx 라이브러리 찾기"
	},
	"FindSDL_image": {
		"name": "FindSDL_image",
		"description": "SDL_image 라이브러리 찾기"
	},
	"FindSDL_mixer": {
		"name": "FindSDL_mixer",
		"description": "SDL_mixer 라이브러리 찾기"
	},
	"FindSDL_net": {
		"name": "FindSDL_net",
		"description": "SDL_net 라이브러리 찾기"
	},
	"FindSDL_sound": {
		"name": "FindSDL_sound",
		"description": "SDL_sound 라이브러리를 찾습니다."
	},
	"FindSDL_ttf": {
		"name": "FindSDL_ttf",
		"description": "SDL_ttf 라이브러리 찾기"
	},
	"FindSelfPackers": {
		"name": "FindSelfPackers",
		"description": "upx 찾기"
	},
	"FindSQLite3": {
		"name": "FindSQLite3",
		"description": "SQLite 라이브러리 찾기, v3"
	},
	"FindSquish": {
		"name": "FindSquish",
		"description": "-- 일반적인 사용"
	},
	"FindSubversion": {
		"name": "FindSubversion",
		"description": "하위 버전 작업 복사본에서 정보 추출"
	},
	"FindSWIG": {
		"name": "FindSWIG",
		"description": "S EXECUTE(Simplified Wrapper and Interface Generator) 실행 파일을 찾습니다."
	},
	"FindTCL": {
		"name": "FindTCL",
		"description": "TK_INTERNAL_PATH가 제거되었습니다."
	},
	"FindTclsh": {
		"name": "FindTclsh",
		"description": "tclsh 찾기"
	},
	"FindTclStub": {
		"name": "FindTclStub",
		"description": "TCL_STUB_LIBRARY_DEBUG 및 TK_STUB_LIBRARY_DEBUG가 제거되었습니다."
	},
	"FindThreads": {
		"name": "FindThreads",
		"description": "이 모듈은 시스템의 스레드 라이브러리를 결정합니다."
	},
	"FindTIFF": {
		"name": "FindTIFF",
		"description": "TIFF 라이브러리(libtiff, https://libtiff.gitlab.io/libtiff/)를 찾습니다."
	},
	"FindUnixCommands": {
		"name": "FindUnixCommands",
		"description": "Cygwin의 명령을 포함하여 Unix 명령 찾기"
	},
	"FindVTK": {
		"name": "FindVTK",
		"description": "이 모듈은 더 이상 존재하지 않습니다."
	},
	"FindVulkan": {
		"name": "FindVulkan",
		"description": "오버헤드가 낮은 플랫폼 간 3D 그래픽 및 컴퓨팅 API인 Vullot을 찾아보세요."
	},
	"FindWget": {
		"name": "FindWget",
		"description": "wget 찾기"
	},
	"FindWish": {
		"name": "FindWish",
		"description": "wish 설치 찾기"
	},
	"FindwxWidgets": {
		"name": "FindwxWidgets",
		"description": "wxWidgets(wxWindows) 설치를 찾습니다."
	},
	"FindwxWindows": {
		"name": "FindwxWindows",
		"description": "wxWindows(wxWidgets) 설치 찾기"
	},
	"FindX11": {
		"name": "FindX11",
		"description": "X11 설치 찾기"
	},
	"FindXalanC": {
		"name": "FindXalanC",
		"description": "Apache Xalan-C++ XSL 변환 프로세서 헤더 및 라이브러리를 찾습니다."
	},
	"FindXCTest": {
		"name": "FindXCTest",
		"description": "XCTest 번들을 만들고 실행하는 데 도움이 되는 함수입니다."
	},
	"FindXercesC": {
		"name": "FindXercesC",
		"description": "XML 파서 헤더 및 라이브러리의 유효성을 검사하는 Apache Xerces-C++를 찾습니다."
	},
	"FindXMLRPC": {
		"name": "FindXMLRPC",
		"description": "xmlrpc 찾기"
	},
	"FindZLIB": {
		"name": "FindZLIB",
		"description": "네이티브 ZLIB 포함 및 라이브러리를 찾습니다."
	},
	"FortranCInterface": {
		"name": "FortranCInterface",
		"description": "Fortran/C 인터페이스 탐지"
	},
	"GenerateExportHeader": {
		"name": "GenerateExportHeader",
		"description": "라이브러리에 대한 내보내기 매크로 생성을 위한 함수"
	},
	"GetPrerequisites": {
		"name": "GetPrerequisites",
		"description": "실행 파일 필수 구성 요소를 분석하고 나열하는 함수입니다."
	},
	"GNUInstallDirs": {
		"name": "GNUInstallDirs",
		"description": "GNU 표준 설치 디렉터리 정의"
	},
	"GoogleTest": {
		"name": "GoogleTest",
		"description": "이 모듈은 Google Test 인프라를 사용하는 데 도움이 되는 함수를 정의합니다. 테스트를 추가하기 위한 두 가지 메커니즘이 제공됩니다. gtest_add_tests는 원래 find_package(GTest)를 통해 한동안 사용되었습니다. gtest_discover_tests는 CMake 3.10에서 도입되었습니다."
	},
	"InstallRequiredSystemLibraries": {
		"name": "InstallRequiredSystemLibraries",
		"description": "컴파일러에서 제공하는 시스템 런타임 라이브러리를 검색하고 설치 규칙을 추가하려면 이 모듈을 포함합니다. 동작을 조정하기 위해 모듈을 포함하기 전에 일부 선택적 변수를 설정할 수 있습니다."
	},
	"MacroAddFileDependencies": {
		"name": "MacroAddFileDependencies",
		"description": "새 코드에서는 이 명령을 사용하지 마세요. 이것은 단지 래퍼입니다."
	},
	"ProcessorCount": {
		"name": "ProcessorCount",
		"description": "ProcessorCount(var)"
	},
	"SelectLibraryConfigurations": {
		"name": "SelectLibraryConfigurations",
		"description": "이 매크로는 라이브러리 기본 이름을 인수로 사용하고 변수에 적합한 값을 선택합니다."
	},
	"SquishTestScript": {
		"name": "SquishTestScript",
		"description": "이 스크립트는 Squish를 사용하여 GUI 테스트를 시작합니다. 스크립트를 직접 호출해서는 안 됩니다. 대신 FindSquish.cmake에 정의된 SQUISH_ADD_TEST 매크로를 통해 액세스해야 합니다."
	},
	"TestBigEndian": {
		"name": "TestBigEndian",
		"description": "대상 아키텍처가 big endian 또는 little endian인지 확인합니다."
	},
	"TestCXXAcceptsFlag": {
		"name": "TestCXXAcceptsFlag",
		"description": "CXX 컴파일러가 플래그를 허용하는지 확인합니다."
	},
	"TestForANSIForScope": {
		"name": "TestForANSIForScope",
		"description": "범위 지원에 대해 ANSI 확인"
	},
	"TestForANSIStreamHeaders": {
		"name": "TestForANSIStreamHeaders",
		"description": "ANSI 스트림 헤더 iostream 등의 컴파일러 지원을 테스트합니다."
	},
	"TestForSSTREAM": {
		"name": "TestForSSTREAM",
		"description": "ANSI sstream 헤더의 컴파일러 지원 테스트"
	},
	"TestForSTDNamespace": {
		"name": "TestForSTDNamespace",
		"description": "std:: 네임스페이스 지원 테스트"
	},
	"UseEcos": {
		"name": "UseEcos",
		"description": "이 모듈은 eCos 애플리케이션을 빌드하는 데 필요한 변수 및 매크로를 정의합니다."
	},
	"UseJava": {
		"name": "UseJava",
		"description": "이 파일은 Java를 지원합니다. FindJava가 이미 로드되었다고 가정합니다. CMake 프로젝트에 Java를 로드하는 방법에 대한 자세한 내용은 FindJava를 참조하세요."
	},
	"UseJavaClassFilelist": {
		"name": "UseJavaClassFilelist",
		"description": "이 모듈은 이전에 실수로 문서화되었으며 프로젝트 코드에 직접 포함할 수 없었습니다. :module:`UseJava` 모듈을 참조하세요."
	},
	"UseJavaSymlinks": {
		"name": "UseJavaSymlinks",
		"description": "이 모듈은 이전에 실수로 문서화되었으며 프로젝트 코드에 직접 포함할 수 없었습니다. :module:`UseJava` 모듈을 참조하세요."
	},
	"UsePkgConfig": {
		"name": "UsePkgConfig",
		"description": "CMake용 pkg-config 모듈이 사용되지 않습니다. 대신 FindPkgConfig를 사용하세요."
	},
	"UseSWIG": {
		"name": "UseSWIG",
		"description": "이 파일은 S WAV를 지원합니다. FindS WAV 모듈이 이미 로드된 것으로 가정합니다."
	},
	"UsewxWidgets": {
		"name": "UsewxWidgets",
		"description": "편의를 위해 wxWidgets 라이브러리를 사용할 수 있습니다."
	},
	"Use_wxWindows": {
		"name": "Use_wxWindows",
		"description": "이러한 편의를 위해 wxWindows가 설치되어 있는지 확인하고 적절한 라이브러리, incdir, 플래그 등을 설정합니다. 작성자 Jan Woetzel <jw -at- mip.informatik.uni-kiel.de>(2003년 7월)"
	},
	"WriteBasicConfigVersionFile": {
		"name": "WriteBasicConfigVersionFile",
		"description": "버전 3.0 이후 사용되지 않음: 모듈 CMakePackageConfigHelpers에서 동일한 명령 write_basic_package_version_file()를 사용합니다."
	},
	"WriteCompilerDetectionHeader": {
		"name": "WriteCompilerDetectionHeader",
		"description": "이 모듈은 함수 write_compiler_detection_header()를 제공합니다."
	}
}