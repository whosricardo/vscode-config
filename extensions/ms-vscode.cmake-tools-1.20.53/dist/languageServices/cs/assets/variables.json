{
	"ANDROID": {
		"name": "ANDROID",
		"description": "Nastavte na hodnotu 1, pokud je cílovým systémem (CMAKE_SYSTEM_NAME) Android."
	},
	"APPLE": {
		"name": "APPLE",
		"description": "Nastavte na hodnotu True, pokud je cílovým systémem platforma Apple (macOS, iOS, tvOS, visionOS nebo watchOS)."
	},
	"BORLAND": {
		"name": "BORLAND",
		"description": "Zadejte hodnotu True, pokud se používá kompilátor Borland."
	},
	"BSD": {
		"name": "BSD",
		"description": "Nastavte na řetězcovou hodnotu, pokud je cílovým systémem BSD. Tato hodnota může být jedna z následujících hodnot: DragonFlyBSD, FreeBSD, OpenBSD nebo NetBSD."
	},
	"BUILD_SHARED_LIBS": {
		"name": "BUILD_SHARED_LIBS",
		"description": "Instruujte add_library, ať při volání bez explicitního typu knihovny použije ve výchozím nastavení knihovny SHARED namísto knihoven STATIC."
	},
	"CACHE": {
		"name": "CACHE",
		"description": "Operátor pro čtení proměnných mezipaměti"
	},
	"CMAKE_ABSOLUTE_DESTINATION_FILES": {
		"name": "CMAKE_ABSOLUTE_DESTINATION_FILES",
		"description": "Seznam souborů, které se nainstalovaly pomocí cesty ABSOLUTE DESTINATION"
	},
	"CMAKE_ADD_CUSTOM_COMMAND_DEPENDS_EXPLICIT_ONLY": {
		"name": "CMAKE_ADD_CUSTOM_COMMAND_DEPENDS_EXPLICIT_ONLY",
		"description": "Určuje, jestli se má ve výchozím nastavení v add_custom_command povolit možnost DEPENDS_EXPLICIT_ONLY."
	},
	"CMAKE_ADSP_ROOT": {
		"name": "CMAKE_ADSP_ROOT",
		"description": "´Pokud je :ref: `Křížová kompilace pro ADSP SHARC/Blackfin`, obsahuje tato proměnná absolutní cestu k nejnovější instalaci CCES nebo VDSP++. Očekává se, že adresář bude obsahovat kompilátory cc21k.exe a ccblkfn.exe. Tato hodnota se nastaví automaticky, pokud je možné nalézt výchozí instalaci CCES nebo VDSP++."
	},
	"CMAKE_AIX_EXPORT_ALL_SYMBOLS": {
		"name": "CMAKE_AIX_EXPORT_ALL_SYMBOLS",
		"description": "Výchozí hodnota cílové vlastnosti AIX_EXPORT_ALL_SYMBOLS. Tato proměnná slouží k inicializaci této vlastnosti u každého cíle v době, kdy se vytváří."
	},
	"CMAKE_ANDROID_ANT_ADDITIONAL_OPTIONS": {
		"name": "CMAKE_ANDROID_ANT_ADDITIONAL_OPTIONS",
		"description": "Výchozí hodnota pro vlastnost ANDROID_ANT_ADDITIONAL_OPTIONS cílů. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_ANDROID_API": {
		"name": "CMAKE_ANDROID_API",
		"description": "Když se provádí křížová kompilace pro Android pomocí NVIDIA Nsight Tegra Visual Studio Edition, může se nastavit tato proměnná, která bude určovat výchozí hodnotu pro vlastnost ANDROID_API cílů. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_ANDROID_API_MIN": {
		"name": "CMAKE_ANDROID_API_MIN",
		"description": "Výchozí hodnota pro vlastnost ANDROID_API_MIN cílů. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_ANDROID_ARCH": {
		"name": "CMAKE_ANDROID_ARCH",
		"description": "Když se provádí křížová kompilace pro Android pomocí NVIDIA Nsight Tegra Visual Studio Edition, může se nastavit tato proměnná, která bude určovat výchozí hodnotu pro vlastnost ANDROID_ARCH cílů. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_ANDROID_ARCH_ABI": {
		"name": "CMAKE_ANDROID_ARCH_ABI",
		"description": "Když se provádí křížová kompilace pro Android, určuje tato proměnná cílovou architekturu a rozhraní ABI, které chcete použít. Platné hodnoty jsou:"
	},
	"CMAKE_ANDROID_ARM_MODE": {
		"name": "CMAKE_ANDROID_ARM_MODE",
		"description": "Když se provádí křížová kompilace pro Android a proměnná CMAKE_ANDROID_ARCH_ABI je nastavená na některou z architektur armeabi, můžete cílit na 32bitové procesory ARM (-marm) nastavením proměnné CMAKE_ANDROID_ARM_MODE na hodnotu ON. Jinak se ve výchozím nastavení cílí na 16bitové procesory Thumb (-mthumb)."
	},
	"CMAKE_ANDROID_ARM_NEON": {
		"name": "CMAKE_ANDROID_ARM_NEON",
		"description": "Když se provádí křížová kompilace pro Android a proměnná CMAKE_ANDROID_ARCH_ABI je nastavená na hodnotu armeabi-v7a, můžete cílit na zařízení ARM NEON nastavením proměnné CMAKE_ANDROID_ARM_NEON na hodnotu ON."
	},
	"CMAKE_ANDROID_ASSETS_DIRECTORIES": {
		"name": "CMAKE_ANDROID_ASSETS_DIRECTORIES",
		"description": "Výchozí hodnota pro vlastnost ANDROID_ASSETS_DIRECTORIES cílů. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_ANDROID_EXCEPTIONS": {
		"name": "CMAKE_ANDROID_EXCEPTIONS",
		"description": "Když se provádí křížová kompilace pro Android pomocí sady NDK, dá se nastavením této proměnné určit, jestli se povolují výjimky."
	},
	"CMAKE_ANDROID_GUI": {
		"name": "CMAKE_ANDROID_GUI",
		"description": "Výchozí hodnota pro cílovou vlastnost ANDROID_GUI spustitelných souborů. Další informace najdete v popisu této cílové vlastnosti."
	},
	"CMAKE_ANDROID_JAR_DEPENDENCIES": {
		"name": "CMAKE_ANDROID_JAR_DEPENDENCIES",
		"description": "Výchozí hodnota pro vlastnost ANDROID_JAR_DEPENDENCIES cílů. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_ANDROID_JAR_DIRECTORIES": {
		"name": "CMAKE_ANDROID_JAR_DIRECTORIES",
		"description": "Výchozí hodnota pro vlastnost ANDROID_JAR_DIRECTORIES cílů. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_ANDROID_JAVA_SOURCE_DIR": {
		"name": "CMAKE_ANDROID_JAVA_SOURCE_DIR",
		"description": "Výchozí hodnota pro vlastnost ANDROID_JAVA_SOURCE_DIR cílů. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_ANDROID_NATIVE_LIB_DEPENDENCIES": {
		"name": "CMAKE_ANDROID_NATIVE_LIB_DEPENDENCIES",
		"description": "Výchozí hodnota pro vlastnost ANDROID_NATIVE_LIB_DEPENDENCIES cílů. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_ANDROID_NATIVE_LIB_DIRECTORIES": {
		"name": "CMAKE_ANDROID_NATIVE_LIB_DIRECTORIES",
		"description": "Výchozí hodnota pro vlastnost ANDROID_NATIVE_LIB_DIRECTORIES cílů. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_ANDROID_NDK": {
		"name": "CMAKE_ANDROID_NDK",
		"description": "Když se provádí křížová kompilace pro Android pomocí sady NDK, uchovává tato proměnná absolutní cestu ke kořenovému adresáři sady NDK. Zadaný adresář musí obsahovat podadresář platforms s adresáři android-<api>."
	},
	"CMAKE_ANDROID_NDK_DEPRECATED_HEADERS": {
		"name": "CMAKE_ANDROID_NDK_DEPRECATED_HEADERS",
		"description": "Když se provádí křížová kompilace pro Android pomocí sady NDK, může se nastavením této proměnné určit, jestli se místo sjednocených hlaviček mají použít zastaralé hlavičky pro jednotlivá rozhraní API."
	},
	"CMAKE_ANDROID_NDK_TOOLCHAIN_HOST_TAG": {
		"name": "CMAKE_ANDROID_NDK_TOOLCHAIN_HOST_TAG",
		"description": "Když se provádí křížová kompilace pro Android pomocí sady NDK, poskytuje tato proměnná značku hostitele sady NDK, která se používá k vytvoření cesty k předkompilovaným sadám nástrojům běžícím na hostiteli."
	},
	"CMAKE_ANDROID_NDK_TOOLCHAIN_VERSION": {
		"name": "CMAKE_ANDROID_NDK_TOOLCHAIN_VERSION",
		"description": "Když se provádí křížová kompilace pro Android pomocí sady NDK, může se nastavením této proměnné určit verze sady nástrojů, která se má použít jako kompilátor."
	},
	"CMAKE_ANDROID_NDK_VERSION": {
		"name": "CMAKE_ANDROID_NDK_VERSION",
		"description": "Když se provádí křížová kompilace pro Android pomocí sad NDK a Android NDK verze 11 nebo vyšší, prostřednictvím této proměnné CMake hlásí číslo verze sady NDK."
	},
	"CMAKE_ANDROID_PROCESS_MAX": {
		"name": "CMAKE_ANDROID_PROCESS_MAX",
		"description": "Výchozí hodnota pro vlastnost ANDROID_PROCESS_MAX cílů. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_ANDROID_PROGUARD": {
		"name": "CMAKE_ANDROID_PROGUARD",
		"description": "Výchozí hodnota pro vlastnost ANDROID_PROGUARD cílů. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_ANDROID_PROGUARD_CONFIG_PATH": {
		"name": "CMAKE_ANDROID_PROGUARD_CONFIG_PATH",
		"description": "Výchozí hodnota pro vlastnost ANDROID_PROGUARD_CONFIG_PATH cílů. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_ANDROID_RTTI": {
		"name": "CMAKE_ANDROID_RTTI",
		"description": "Když se provádí křížová kompilace pro Android pomocí sady NDK, dá se nastavením této proměnné určit, jestli se povoluje RTTI."
	},
	"CMAKE_ANDROID_SECURE_PROPS_PATH": {
		"name": "CMAKE_ANDROID_SECURE_PROPS_PATH",
		"description": "Výchozí hodnota pro vlastnost ANDROID_SECURE_PROPS_PATH cílů. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_ANDROID_SKIP_ANT_STEP": {
		"name": "CMAKE_ANDROID_SKIP_ANT_STEP",
		"description": "Výchozí hodnota pro vlastnost ANDROID_SKIP_ANT_STEP cílů. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_ANDROID_STANDALONE_TOOLCHAIN": {
		"name": "CMAKE_ANDROID_STANDALONE_TOOLCHAIN",
		"description": "Když se provádí křížová kompilace pro Android pomocí samostatné sady nástrojů, uchovává tato proměnná absolutní cestu ke kořenovému adresáři sady nástrojů. Zadaný adresář musí obsahovat podadresář sysroot."
	},
	"CMAKE_ANDROID_STL_TYPE": {
		"name": "CMAKE_ANDROID_STL_TYPE",
		"description": "Když se provádí křížová kompilace pro Android pomocí NVIDIA Nsight Tegra Visual Studio Edition, může se nastavit tato proměnná, která bude určovat výchozí hodnotu pro vlastnost ANDROID_STL_TYPE cílů. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_APPBUNDLE_PATH": {
		"name": "CMAKE_APPBUNDLE_PATH",
		"description": "Středníky oddělený seznam adresářů určující cesty pro vyhledávání pro sady prostředků aplikací pro macOS používané příkazy find_program a find_package"
	},
	"CMAKE_APPLE_SILICON_PROCESSOR": {
		"name": "CMAKE_APPLE_SILICON_PROCESSOR",
		"description": "Na hostitelích Apple Silicon, kteří používají macOS, nastavte tuto proměnnou tak, aby oznamovala nástroji CMake, jakou architekturu použít pro CMAKE_HOST_SYSTEM_PROCESSOR. Hodnota musí být buď arm64, nebo x86_64."
	},
	"CMAKE_AR": {
		"name": "CMAKE_AR",
		"description": "Název archivačního nástroje pro statické knihovny"
	},
	"CMAKE_ARCHIVE_OUTPUT_DIRECTORY": {
		"name": "CMAKE_ARCHIVE_OUTPUT_DIRECTORY",
		"description": "Určuje umístění všech cílových souborů typu ARCHIVE při sestavování."
	},
	"CMAKE_ARCHIVE_OUTPUT_DIRECTORY_<CONFIG>": {
		"name": "CMAKE_ARCHIVE_OUTPUT_DIRECTORY_<CONFIG>",
		"description": "Určuje umístění všech cílových souborů typu ARCHIVE při sestavování pro konkrétní konfiguraci."
	},
	"CMAKE_ARGC": {
		"name": "CMAKE_ARGC",
		"description": "Počet argumentů příkazového řádku předaných nástroji CMake v režimu skriptu"
	},
	"CMAKE_ARGV0": {
		"name": "CMAKE_ARGV0",
		"description": "Argument příkazového řádku předaný nástroji CMake v režimu skriptu"
	},
	"CMAKE_AUTOGEN_BETTER_GRAPH_MULTI_CONFIG": {
		"name": "CMAKE_AUTOGEN_BETTER_GRAPH_MULTI_CONFIG",
		"description": "Tato proměnná slouží k inicializaci vlastnosti AUTOGEN_BETTER_GRAPH_MULTI_CONFIG u všech cílů při jejich vytváření. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_AUTOGEN_COMMAND_LINE_LENGTH_MAX": {
		"name": "CMAKE_AUTOGEN_COMMAND_LINE_LENGTH_MAX",
		"description": "Omezení délky příkazového řádku pro cíle autogen, tj. moc nebo uic, které aktivuje použití souborů odpovědí v systému Windows namísto předávání všech argumentů na příkazovém řádku."
	},
	"CMAKE_AUTOGEN_ORIGIN_DEPENDS": {
		"name": "CMAKE_AUTOGEN_ORIGIN_DEPENDS",
		"description": "Přepínač pro předávání závislostí cíle původu příslušným cílům <ORIGIN>_autogen"
	},
	"CMAKE_AUTOGEN_PARALLEL": {
		"name": "CMAKE_AUTOGEN_PARALLEL",
		"description": "Počet paralelních procesů moc nebo uic, které se mají spustit při použití možností AUTOMOC a AUTOUIC"
	},
	"CMAKE_AUTOGEN_USE_SYSTEM_INCLUDE": {
		"name": "CMAKE_AUTOGEN_USE_SYSTEM_INCLUDE",
		"description": "Tato proměnná slouží k inicializaci vlastnosti AUTOGEN_USE_SYSTEM_INCLUDE u všech cílů při jejich vytváření. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_AUTOGEN_VERBOSE": {
		"name": "CMAKE_AUTOGEN_VERBOSE",
		"description": "Umožňuje nastavit úroveň podrobností pro AUTOMOC, AUTOUIC a AUTORCC. Kladná celočíselná hodnota nebo logická hodnota true umožní, aby generátory AUTO* vypisovaly další informace o zpracování."
	},
	"CMAKE_AUTOMOC": {
		"name": "CMAKE_AUTOMOC",
		"description": "Určuje, jestli se má automaticky zpracovat moc pro cíle Qt."
	},
	"CMAKE_AUTOMOC_COMPILER_PREDEFINES": {
		"name": "CMAKE_AUTOMOC_COMPILER_PREDEFINES",
		"description": "Tato proměnná slouží k inicializaci vlastnosti AUTOMOC_COMPILER_PREDEFINES na všech cílech. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_AUTOMOC_DEPEND_FILTERS": {
		"name": "CMAKE_AUTOMOC_DEPEND_FILTERS",
		"description": "Definice filtrů, které CMAKE_AUTOMOC používá k extrahování názvů souborů ze zdrojového kódu jako dalších závislostí pro soubor moc"
	},
	"CMAKE_AUTOMOC_EXECUTABLE": {
		"name": "CMAKE_AUTOMOC_EXECUTABLE",
		"description": "Tato proměnná slouží k inicializaci vlastnosti AUTOMOC_EXECUTABLE ve všech cílech. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_AUTOMOC_MACRO_NAMES": {
		"name": "CMAKE_AUTOMOC_MACRO_NAMES",
		"description": "Středníky oddělený seznam názvů maker, který CMAKE_AUTOMOC používá k určení, jestli moc musí zpracovat soubor C++"
	},
	"CMAKE_AUTOMOC_MOC_OPTIONS": {
		"name": "CMAKE_AUTOMOC_MOC_OPTIONS",
		"description": "Další možnosti pro moc při použití CMAKE_AUTOMOC"
	},
	"CMAKE_AUTOMOC_PATH_PREFIX": {
		"name": "CMAKE_AUTOMOC_PATH_PREFIX",
		"description": "Určuje, jestli se má vygenerovat předponový parametr cesty -p pro funkci moc na cílech Qt s povolenou funkcí AUTOMOC."
	},
	"CMAKE_AUTOMOC_RELAXED_MODE": {
		"name": "CMAKE_AUTOMOC_RELAXED_MODE",
		"description": "Umožňuje přepínat u generátoru automoc mezi režimy strict a relaxed."
	},
	"CMAKE_AUTORCC": {
		"name": "CMAKE_AUTORCC",
		"description": "Určuje, jestli se má automaticky zpracovat rcc pro cíle Qt."
	},
	"CMAKE_AUTORCC_EXECUTABLE": {
		"name": "CMAKE_AUTORCC_EXECUTABLE",
		"description": "Tato proměnná slouží k inicializaci vlastnosti AUTORCC_EXECUTABLE ve všech cílech. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_AUTORCC_OPTIONS": {
		"name": "CMAKE_AUTORCC_OPTIONS",
		"description": "Další možnosti pro rcc při použití CMAKE_AUTORCC"
	},
	"CMAKE_AUTOUIC": {
		"name": "CMAKE_AUTOUIC",
		"description": "Určuje, jestli se má automaticky zpracovat uic pro cíle Qt."
	},
	"CMAKE_AUTOUIC_EXECUTABLE": {
		"name": "CMAKE_AUTOUIC_EXECUTABLE",
		"description": "Tato proměnná slouží k inicializaci vlastnosti AUTOUIC_EXECUTABLE ve všech cílech. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_AUTOUIC_OPTIONS": {
		"name": "CMAKE_AUTOUIC_OPTIONS",
		"description": "Další možnosti pro uic při použití CMAKE_AUTOUIC"
	},
	"CMAKE_AUTOUIC_SEARCH_PATHS": {
		"name": "CMAKE_AUTOUIC_SEARCH_PATHS",
		"description": "Seznam cest pro vyhledávání, které CMAKE_AUTOUIC používá k hledání zahrnutých souborů .ui"
	},
	"CMAKE_BACKWARDS_COMPATIBILITY": {
		"name": "CMAKE_BACKWARDS_COMPATIBILITY",
		"description": "Zastaralé. Podívejte se na dokumentaci k zásadě CMake CMP0001."
	},
	"CMAKE_BINARY_DIR": {
		"name": "CMAKE_BINARY_DIR",
		"description": "Cesta k nejvyšší úrovni stromu sestavení"
	},
	"CMAKE_BUILD_RPATH": {
		"name": "CMAKE_BUILD_RPATH",
		"description": "Středníky oddělený seznam položek cest runtime (RPATH), které se mají přidat do binárních souborů propojených ve stromu sestavení (na platformách, které to podporují). Položky se nebudou používat pro binární soubory ve stromu instalace. Viz také informace o proměnné CMAKE_INSTALL_RPATH."
	},
	"CMAKE_BUILD_RPATH_USE_ORIGIN": {
		"name": "CMAKE_BUILD_RPATH_USE_ORIGIN",
		"description": "Určuje, jestli se mají použít relativní cesty pro parametr RPATH sestavení."
	},
	"CMAKE_BUILD_TOOL": {
		"name": "CMAKE_BUILD_TOOL",
		"description": "Tato proměnná existuje jenom v zájmu zpětné kompatibility. Obsahuje stejnou hodnotu jako CMAKE_MAKE_PROGRAM. Použijte radši tuto proměnnou."
	},
	"CMAKE_BUILD_TYPE": {
		"name": "CMAKE_BUILD_TYPE",
		"description": "Určuje typ sestavení pro generátory s jednou konfigurací (např. generátory Makefile nebo Ninja). Mezi obvyklé hodnoty patří Debug, Release, RelWithDebInfo a MinSizeRel, ale je možné definovat i vlastní typy sestavení."
	},
	"CMAKE_BUILD_WITH_INSTALL_NAME_DIR": {
		"name": "CMAKE_BUILD_WITH_INSTALL_NAME_DIR",
		"description": "Určuje, jestli se má použít cesta INSTALL_NAME_DIR pro cíle ve stromu sestavení."
	},
	"CMAKE_BUILD_WITH_INSTALL_RPATH": {
		"name": "CMAKE_BUILD_WITH_INSTALL_RPATH",
		"description": "Umožňuje použít pro RPATH cestu instalace."
	},
	"CMAKE_CACHEFILE_DIR": {
		"name": "CMAKE_CACHEFILE_DIR",
		"description": "Tato proměnná je používána interně nástrojem CMake a nemusí být nastavena během první konfigurace stromu sestavení. Když je nastavena, má stejnou hodnotu jako CMAKE_BINARY_DIR. Použijte místo ní tuto proměnnou."
	},
	"CMAKE_CACHE_MAJOR_VERSION": {
		"name": "CMAKE_CACHE_MAJOR_VERSION",
		"description": "Hlavní verze nástroje CMake použitá k vytvoření souboru CMakeCache.txt"
	},
	"CMAKE_CACHE_MINOR_VERSION": {
		"name": "CMAKE_CACHE_MINOR_VERSION",
		"description": "Podverze nástroje CMake použitá k vytvoření souboru CMakeCache.txt"
	},
	"CMAKE_CACHE_PATCH_VERSION": {
		"name": "CMAKE_CACHE_PATCH_VERSION",
		"description": "Verze opravy nástroje CMake použitá k vytvoření souboru CMakeCache.txt"
	},
	"CMAKE_CFG_INTDIR": {
		"name": "CMAKE_CFG_INTDIR",
		"description": "Odkaz v čase sestavení na výstupní podadresář pro jednotlivé konfigurace"
	},
	"CMAKE_CLANG_VFS_OVERLAY": {
		"name": "CMAKE_CLANG_VFS_OVERLAY",
		"description": "Když se provádí křížová kompilace pro Windows pomocí nástroje clang-cl, může být tato proměnná absolutní cestou odkazující na soubor YAML virtuálního souborového systému clang, který umožní nástroji clang-cl překládat názvy hlaviček systému Windows v systému souborů, který rozlišuje velká a malá písmena."
	},
	"CMAKE_CL_64": {
		"name": "CMAKE_CL_64",
		"description": "Nedoporučuje se. Použijte radši CMAKE_SIZEOF_VOID_P."
	},
	"CMAKE_CODEBLOCKS_COMPILER_ID": {
		"name": "CMAKE_CODEBLOCKS_COMPILER_ID",
		"description": "Umožňuje změnit ID kompilátoru v generovaných souborech projektů CodeBlocks."
	},
	"CMAKE_CODEBLOCKS_EXCLUDE_EXTERNAL_FILES": {
		"name": "CMAKE_CODEBLOCKS_EXCLUDE_EXTERNAL_FILES",
		"description": "Umožňuje změnit způsob, jakým generátor CodeBlocks vytváří soubory projektů."
	},
	"CMAKE_CODELITE_USE_TARGETS": {
		"name": "CMAKE_CODELITE_USE_TARGETS",
		"description": "Umožňuje změnit způsob, jakým generátor CodeLite vytváří soubory projektů."
	},
	"CMAKE_COLOR_DIAGNOSTICS": {
		"name": "CMAKE_COLOR_DIAGNOSTICS",
		"description": "Povolte v celém prostředí diagnostiku barev."
	},
	"CMAKE_COLOR_MAKEFILE": {
		"name": "CMAKE_COLOR_MAKEFILE",
		"description": "Umožňuje barevný výstup při použití generátorů Makefile."
	},
	"CMAKE_COMMAND": {
		"name": "CMAKE_COMMAND",
		"description": "Úplná cesta ke spustitelnému souboru nástroje cmake"
	},
	"CMAKE_COMPILER_2005": {
		"name": "CMAKE_COMPILER_2005",
		"description": "Použití kompilátoru Visual Studio 2005 od Microsoftu"
	},
	"CMAKE_COMPILER_IS_GNUCC": {
		"name": "CMAKE_COMPILER_IS_GNUCC",
		"description": "True, pokud je kompilátorem C GNU."
	},
	"CMAKE_COMPILER_IS_GNUCXX": {
		"name": "CMAKE_COMPILER_IS_GNUCXX",
		"description": "True, pokud je kompilátorem C++ (CXX) GNU."
	},
	"CMAKE_COMPILER_IS_GNUG77": {
		"name": "CMAKE_COMPILER_IS_GNUG77",
		"description": "True, pokud je kompilátorem C++ Fortran."
	},
	"CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY": {
		"name": "CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY",
		"description": "Výstupní adresář pro soubory symbolů ladění MS ve formátu .pdb generované kompilátorem při sestavování zdrojových souborů"
	},
	"CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY_<CONFIG>": {
		"name": "CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY_<CONFIG>",
		"description": "Výstupní adresář pro jednotlivé konfigurace pro soubory symbolů ladění MS ve formátu .pdb generované kompilátorem při sestavování zdrojových souborů"
	},
	"CMAKE_COMPILE_WARNING_AS_ERROR": {
		"name": "CMAKE_COMPILE_WARNING_AS_ERROR",
		"description": "Určete, jestli se mají upozornění při kompilaci zpracovávat jako chyby."
	},
	"CMAKE_CONFIGURATION_TYPES": {
		"name": "CMAKE_CONFIGURATION_TYPES",
		"description": "Určuje dostupné typy sestavení (konfigurace) pro generátory s více konfiguracemi (např. Visual Studio, Xcode nebo Ninja Multi-Config) jako seznam oddělený středníky. Mezi obvyklé položky patří Debug, Release, RelWithDebInfo a MinSizeRel, ale je možné definovat i vlastní typy sestavení."
	},
	"CMAKE_<CONFIG>_POSTFIX": {
		"name": "CMAKE_<CONFIG>_POSTFIX",
		"description": "Výchozí přípona názvu souboru pro knihovny v konfiguraci <CONFIG>"
	},
	"CMAKE_CPACK_COMMAND": {
		"name": "CMAKE_CPACK_COMMAND",
		"description": "Úplná cesta k příkazu cpack nainstalovanému pomocí nástroje CMake"
	},
	"CMAKE_CROSSCOMPILING": {
		"name": "CMAKE_CROSSCOMPILING",
		"description": "Tuto proměnnou nastavuje CMake tak, aby označovala, jestli provádí křížovou kompilaci, ale všimněte si níže popsaných omezení."
	},
	"CMAKE_CROSSCOMPILING_EMULATOR": {
		"name": "CMAKE_CROSSCOMPILING_EMULATOR",
		"description": "Tato proměnná se používá, jenom když je zapnutá možnost CMAKE_CROSSCOMPILING. Měla by odkazovat na příkaz v hostitelském systému, který může spustit spustitelný soubor sestavený pro cílový systém."
	},
	"CMAKE_CROSS_CONFIGS": {
		"name": "CMAKE_CROSS_CONFIGS",
		"description": "Určuje středníky oddělený seznam konfigurací, které jsou k dispozici ze všech souborů build-<Config>.ninja v generátoru s více konfiguracemi Ninja. Tato proměnná aktivuje režim křížové konfigurace. Cíle z každé konfigurace určené v této proměnné můžou být sestaveny z libovolného souboru build-<Config>.ninja. Vlastní příkazy budou používat konfiguraci, která je nativní pro build-<Config>.ninja. Pokud je možnost nastavená na hodnotu Vše, všechny konfigurace z CMAKE_CONFIGURATION_TYPES jsou křížové konfigurace. Pokud není nastavená nebo je prázdná, každý soubor build-<Config>.ninja bude obsahovat jenom pravidla sestavení pro svoji vlastní konfiguraci."
	},
	"CMAKE_CTEST_ARGUMENTS": {
		"name": "CMAKE_CTEST_ARGUMENTS",
		"description": "Nastavte tuto možnost na středníky oddělený seznam argumentů příkazového řádku, které se mají předat funkci ctest při spouštění testů přes cíl test (nebo RUN_TESTS) vygenerovaného systému sestavení."
	},
	"CMAKE_CTEST_COMMAND": {
		"name": "CMAKE_CTEST_COMMAND",
		"description": "Úplná cesta k příkazu ctest nainstalovanému pomocí nástroje CMake"
	},
	"CMAKE_CUDA_ARCHITECTURES": {
		"name": "CMAKE_CUDA_ARCHITECTURES",
		"description": "Výchozí hodnota pro vlastnost CUDA_ARCHITECTURES cílů"
	},
	"CMAKE_CUDA_COMPILE_FEATURES": {
		"name": "CMAKE_CUDA_COMPILE_FEATURES",
		"description": "Seznam funkcí známých v kompilátoru jazyka CUDA"
	},
	"CMAKE_CUDA_EXTENSIONS": {
		"name": "CMAKE_CUDA_EXTENSIONS",
		"description": "Výchozí hodnota pro cílovou vlastnost CUDA_EXTENSIONS, pokud je nastavena při vytvoření cíle"
	},
	"CMAKE_CUDA_HOST_COMPILER": {
		"name": "CMAKE_CUDA_HOST_COMPILER",
		"description": "Toto je původní název specifický pro CUDA pro obecnější proměnnou CMAKE_<LANG>_HOST_COMPILER. Podrobnosti najdete v tomdruhém."
	},
	"CMAKE_CUDA_RESOLVE_DEVICE_SYMBOLS": {
		"name": "CMAKE_CUDA_RESOLVE_DEVICE_SYMBOLS",
		"description": "Výchozí hodnota pro cílovou vlastnost CUDA_RESOLVE_DEVICE_SYMBOLS, pokud je definována. Ve výchozím nastavení není tato proměnná definována."
	},
	"CMAKE_CUDA_RUNTIME_LIBRARY": {
		"name": "CMAKE_CUDA_RUNTIME_LIBRARY",
		"description": "Vyberte knihovnu runtime CUDA, která se má použít při kompilaci a propojení CUDA. Tato proměnná slouží k inicializaci vlastnosti CUDA_RUNTIME_LIBRARY u všech cílů v době, kdy se vytvářejí."
	},
	"CMAKE_CUDA_SEPARABLE_COMPILATION": {
		"name": "CMAKE_CUDA_SEPARABLE_COMPILATION",
		"description": "Výchozí hodnota pro vlastnost CUDA_SEPARABLE_COMPILATION cílů. Tato proměnná slouží k inicializaci vlastnosti u každého cíle při jeho vytvoření."
	},
	"CMAKE_CUDA_STANDARD": {
		"name": "CMAKE_CUDA_STANDARD",
		"description": "Výchozí hodnota pro cílovou vlastnost CUDA_STANDARD, pokud je nastavena při vytvoření cíle"
	},
	"CMAKE_CUDA_STANDARD_REQUIRED": {
		"name": "CMAKE_CUDA_STANDARD_REQUIRED",
		"description": "Výchozí hodnota pro cílovou vlastnost CUDA_REQUIRED, pokud je nastavena při vytvoření cíle"
	},
	"CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES": {
		"name": "CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES",
		"description": "Když je povolený jazyk CUDA, toto nastavení poskytuje středníky oddělený seznam zahrnutých adresářů poskytovaných sadou CUDA Toolkit. Hodnota může být užitečná pro zahrnutí hlaviček CUDA do zdrojových souborů v C++."
	},
	"CMAKE_CURRENT_BINARY_DIR": {
		"name": "CMAKE_CURRENT_BINARY_DIR",
		"description": "Cesta k aktuálně zpracovávanému adresáři binárních souborů"
	},
	"CMAKE_CURRENT_FUNCTION": {
		"name": "CMAKE_CURRENT_FUNCTION",
		"description": "Tato proměnná při spouštění kódu uvnitř funkce obsahuje název aktuální funkce. Může to být užitečné pro diagnostické nebo ladicí zprávy."
	},
	"CMAKE_CURRENT_FUNCTION_LIST_DIR": {
		"name": "CMAKE_CURRENT_FUNCTION_LIST_DIR",
		"description": "Tato proměnná při spouštění kódu uvnitř funkce obsahuje úplný adresář souboru listfile, který definoval aktuální funkci."
	},
	"CMAKE_CURRENT_FUNCTION_LIST_FILE": {
		"name": "CMAKE_CURRENT_FUNCTION_LIST_FILE",
		"description": "Tato proměnná při spouštění kódu uvnitř funkce obsahuje úplnou cestu k souboru listfile, který definoval aktuální funkci."
	},
	"CMAKE_CURRENT_FUNCTION_LIST_LINE": {
		"name": "CMAKE_CURRENT_FUNCTION_LIST_LINE",
		"description": "Tato proměnná při spouštění kódu uvnitř funkce obsahuje číslo řádku v souboru listfile, kde se definovala aktuální funkce."
	},
	"CMAKE_CURRENT_LIST_DIR": {
		"name": "CMAKE_CURRENT_LIST_DIR",
		"description": "Úplný adresář právě zpracovávaného souboru listfile"
	},
	"CMAKE_CURRENT_LIST_FILE": {
		"name": "CMAKE_CURRENT_LIST_FILE",
		"description": "Úplná cesta k právě zpracovávanému souboru listfile"
	},
	"CMAKE_CURRENT_LIST_LINE": {
		"name": "CMAKE_CURRENT_LIST_LINE",
		"description": "Číslo řádku aktuálně zpracovávaného souboru"
	},
	"CMAKE_CURRENT_SOURCE_DIR": {
		"name": "CMAKE_CURRENT_SOURCE_DIR",
		"description": "Cesta k aktuálně zpracovávanému zdrojovému adresáři"
	},
	"CMAKE_CXX_COMPILER_IMPORT_STD": {
		"name": "CMAKE_CXX_COMPILER_IMPORT_STD",
		"description": "Seznam standardních úrovní C++, ke kterým existuje podpora pro import std pro aktuální sadu nástrojů C++. Podpora pro C++<NN> se dá zjistit pomocí predikátu <NN> IN_LIST CMAKE_CXX_COMPILER_IMPORT_STD s příkazem if."
	},
	"CMAKE_CXX_COMPILE_FEATURES": {
		"name": "CMAKE_CXX_COMPILE_FEATURES",
		"description": "Seznam funkcí známých v kompilátoru jazyka C++"
	},
	"CMAKE_CXX_EXTENSIONS": {
		"name": "CMAKE_CXX_EXTENSIONS",
		"description": "Výchozí hodnota pro cílovou vlastnost CXX_EXTENSIONS, pokud je nastavena při vytvoření cíle"
	},
	"CMAKE_CXX_MODULE_STD": {
		"name": "CMAKE_CXX_MODULE_STD",
		"description": "Určuje, jestli se mají cíle nástroje přidávat jako závislosti k cílům s alespoň cxx_std_23, nebo ne."
	},
	"CMAKE_CXX_SCAN_FOR_MODULES": {
		"name": "CMAKE_CXX_SCAN_FOR_MODULES",
		"description": "Určuje, jestli se mají vyhledat závislosti modulů ve zdrojových souborech C++."
	},
	"CMAKE_CXX_STANDARD": {
		"name": "CMAKE_CXX_STANDARD",
		"description": "Výchozí hodnota pro cílovou vlastnost CXX_STANDARD, pokud je nastavena při vytvoření cíle"
	},
	"CMAKE_CXX_STANDARD_REQUIRED": {
		"name": "CMAKE_CXX_STANDARD_REQUIRED",
		"description": "Výchozí hodnota pro cílovou vlastnost CXX_REQUIRED, pokud je nastavena při vytvoření cíle"
	},
	"CMAKE_C_COMPILE_FEATURES": {
		"name": "CMAKE_C_COMPILE_FEATURES",
		"description": "Seznam funkcí známých v kompilátoru jazyka C"
	},
	"CMAKE_C_EXTENSIONS": {
		"name": "CMAKE_C_EXTENSIONS",
		"description": "Výchozí hodnota pro cílovou vlastnost C_EXTENSIONS, pokud je nastavena při vytvoření cíle"
	},
	"CMAKE_C_STANDARD": {
		"name": "CMAKE_C_STANDARD",
		"description": "Výchozí hodnota pro cílovou vlastnost C_STANDARD, pokud je nastavena při vytvoření cíle"
	},
	"CMAKE_C_STANDARD_REQUIRED": {
		"name": "CMAKE_C_STANDARD_REQUIRED",
		"description": "Výchozí hodnota pro cílovou vlastnost C_REQUIRED, pokud je nastavena při vytvoření cíle"
	},
	"CMAKE_DEBUG_POSTFIX": {
		"name": "CMAKE_DEBUG_POSTFIX",
		"description": "Viz informace o proměnné CMAKE_<CONFIG>_POSTFIX."
	},
	"CMAKE_DEBUG_TARGET_PROPERTIES": {
		"name": "CMAKE_DEBUG_TARGET_PROPERTIES",
		"description": "Povolí trasování výstupu vlastností cílů."
	},
	"CMAKE_DEFAULT_BUILD_TYPE": {
		"name": "CMAKE_DEFAULT_BUILD_TYPE",
		"description": "Určuje konfiguraci, která se má použít ve výchozím nastavení v souboru build.ninja v generátoru s více konfiguracemi Ninja. Pokud je tato proměnná zadána, build.ninja používá ve výchozím nastavení pravidla sestavení ze souboru build-<Config>.ninja. Všechny vlastní příkazy se spouštějí s touto konfigurací. Pokud není proměnná zadána, použije se první položka z CMAKE_CONFIGURATION_TYPES."
	},
	"CMAKE_DEFAULT_CONFIGS": {
		"name": "CMAKE_DEFAULT_CONFIGS",
		"description": "Určuje středníky oddělený seznam konfigurací, které se mají sestavovat pro cíl v souboru build.ninja, pokud není v generátoru s více konfiguracemi Ninja zadána žádná přípona :<Config>. Pokud je proměnná nastavená na hodnotu Vše, použijí se všechny konfigurace z CMAKE_CROSS_CONFIGS. Pokud není zadaná, použije se jako výchozí hodnota CMAKE_DEFAULT_BUILD_TYPE."
	},
	"CMAKE_DEPENDS_IN_PROJECT_ONLY": {
		"name": "CMAKE_DEPENDS_IN_PROJECT_ONLY",
		"description": "Při nastavení na hodnotu TRUE v adresáři se sestavovací systém vyprodukovaný generátory Makefile nastaví tak, aby bral v úvahu jenom závislosti na zdrojových souborech, které se vyskytují v adresářích zdrojových nebo binárních souborů. Změny zdrojových souborů mimo tyto adresáře nepovedou k opakovanému sestavení."
	},
	"CMAKE_DEPENDS_USE_COMPILER": {
		"name": "CMAKE_DEPENDS_USE_COMPILER",
		"description": "Pro generátory Makefile teď zdrojové závislosti pro výběr kompilátorů generuje samotný kompilátor. Když se tato proměnná definuje s hodnotou FALSE, můžete obnovit starší verze chování (tj. zjišťovat závislosti pomocí nástroje CMake)."
	},
	"CMAKE_DIRECTORY_LABELS": {
		"name": "CMAKE_DIRECTORY_LABELS",
		"description": "Zadejte popisky pro aktuální adresář."
	},
	"CMAKE_DISABLE_FIND_PACKAGE_<PackageName>": {
		"name": "CMAKE_DISABLE_FIND_PACKAGE_<PackageName>",
		"description": "Proměnná pro zakázání volání find_package"
	},
	"CMAKE_DISABLE_PRECOMPILE_HEADERS": {
		"name": "CMAKE_DISABLE_PRECOMPILE_HEADERS",
		"description": "Výchozí hodnota pro vlastnost DISABLE_PRECOMPILE_HEADERS cílů"
	},
	"CMAKE_DLL_NAME_WITH_SOVERSION": {
		"name": "CMAKE_DLL_NAME_WITH_SOVERSION",
		"description": "Tato proměnná slouží k inicializaci vlastnosti DLL_NAME_WITH_SOVERSION na cílech sdílené knihovny pro platformu Windows, která je vybrána při nastavení proměnné WIN32."
	},
	"CMAKE_DL_LIBS": {
		"name": "CMAKE_DL_LIBS",
		"description": "Název knihovny obsahující dlopen a dlclose"
	},
	"CMAKE_DOTNET_SDK": {
		"name": "CMAKE_DOTNET_SDK",
		"description": "Výchozí hodnota pro vlastnost DOTNET_SDK cílů."
	},
	"CMAKE_DOTNET_TARGET_FRAMEWORK": {
		"name": "CMAKE_DOTNET_TARGET_FRAMEWORK",
		"description": "Výchozí hodnota pro vlastnost DOTNET_TARGET_FRAMEWORK cílů"
	},
	"CMAKE_DOTNET_TARGET_FRAMEWORK_VERSION": {
		"name": "CMAKE_DOTNET_TARGET_FRAMEWORK_VERSION",
		"description": "Výchozí hodnota vlastnosti DOTNET_TARGET_FRAMEWORK_VERSION pro cíle"
	},
	"CMAKE_ECLIPSE_GENERATE_LINKED_RESOURCES": {
		"name": "CMAKE_ECLIPSE_GENERATE_LINKED_RESOURCES",
		"description": "Tuto proměnnou mezipaměti používá generátor projektů Eclipse. Viz cmake-generators."
	},
	"CMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT": {
		"name": "CMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT",
		"description": "Tuto proměnnou mezipaměti používá generátor projektů Eclipse. Viz cmake-generators."
	},
	"CMAKE_ECLIPSE_MAKE_ARGUMENTS": {
		"name": "CMAKE_ECLIPSE_MAKE_ARGUMENTS",
		"description": "Tuto proměnnou mezipaměti používá generátor projektů Eclipse. Viz cmake-generators."
	},
	"CMAKE_ECLIPSE_RESOURCE_ENCODING": {
		"name": "CMAKE_ECLIPSE_RESOURCE_ENCODING",
		"description": "Tato proměnná mezipaměti sděluje generátoru projektů Eclipse CDT4, aby v generovaných souborech projektu nastavil kódování prostředků na danou hodnotu. Pokud není zadaná žádná hodnota, kódování se nenastaví."
	},
	"CMAKE_ECLIPSE_VERSION": {
		"name": "CMAKE_ECLIPSE_VERSION",
		"description": "Tuto proměnnou mezipaměti používá generátor projektů Eclipse. Viz cmake-generators."
	},
	"CMAKE_EDIT_COMMAND": {
		"name": "CMAKE_EDIT_COMMAND",
		"description": "Úplná cesta k cmake-gui nebo ccmake. Definováno pouze pro generátory souborů pravidel a generátory Ninja, pokud nepoužíváte žádné další generátory."
	},
	"CMAKE_ENABLE_EXPORTS": {
		"name": "CMAKE_ENABLE_EXPORTS",
		"description": "Určuje, jestli spustitelné soubory exportují symboly pro načitatelné moduly."
	},
	"CMAKE_ERROR_DEPRECATED": {
		"name": "CMAKE_ERROR_DEPRECATED",
		"description": "Určuje, jestli se u zastaralých funkcí mají zobrazovat chyby."
	},
	"CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION": {
		"name": "CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION",
		"description": "Vyžádat, aby skript cmake_install.cmake skončil chybou, jakmile dojde ke zjištění souboru s absolutní hodnotou INSTALL DESTINATION"
	},
	"CMAKE_EXECUTABLE_ENABLE_EXPORTS": {
		"name": "CMAKE_EXECUTABLE_ENABLE_EXPORTS",
		"description": "Určuje, jestli spustitelné soubory exportují symboly pro načitatelné moduly."
	},
	"CMAKE_EXECUTABLE_SUFFIX": {
		"name": "CMAKE_EXECUTABLE_SUFFIX",
		"description": "Přípona spustitelných souborů na této platformě"
	},
	"CMAKE_EXECUTABLE_SUFFIX_<LANG>": {
		"name": "CMAKE_EXECUTABLE_SUFFIX_<LANG>",
		"description": "Přípona, která se má použít pro konec spustitelného názvu souboru cílové architektury kompilátoru <LANG>, pokud existuje."
	},
	"CMAKE_EXECUTE_PROCESS_COMMAND_ECHO": {
		"name": "CMAKE_EXECUTE_PROCESS_COMMAND_ECHO",
		"description": "Pokud je tato proměnná nastavená na STDERR, STDOUT nebo NONE, příkazy ve voláních execute_process budou vytištěny na stderr nebo stdout nebo vůbec."
	},
	"CMAKE_EXE_LINKER_FLAGS": {
		"name": "CMAKE_EXE_LINKER_FLAGS",
		"description": "Příznaky linkeru, které se mají použít pro vytvoření spustitelných souborů"
	},
	"CMAKE_EXE_LINKER_FLAGS_<CONFIG>": {
		"name": "CMAKE_EXE_LINKER_FLAGS_<CONFIG>",
		"description": "Příznaky, které se mají použít při připojování spustitelného souboru"
	},
	"CMAKE_EXE_LINKER_FLAGS_<CONFIG>_INIT": {
		"name": "CMAKE_EXE_LINKER_FLAGS_<CONFIG>_INIT",
		"description": "Hodnota používaná k inicializaci položky mezipaměti CMAKE_EXE_LINKER_FLAGS_ při první konfiguraci stromu sestavení. Tuto proměnnou by měl nastavit soubor sady nástrojů. CMake může k této hodnotě předřadit nebo připojit obsah na základě prostředí a cílové platformy."
	},
	"CMAKE_EXE_LINKER_FLAGS_INIT": {
		"name": "CMAKE_EXE_LINKER_FLAGS_INIT",
		"description": "Hodnota používaná k inicializaci položky mezipaměti CMAKE_EXE_LINKER_FLAGS při první konfiguraci stromu sestavení. Tuto proměnnou by měl nastavit soubor sady nástrojů. CMake může k této hodnotě předřadit nebo připojit obsah na základě prostředí a cílové platformy."
	},
	"CMAKE_EXPORT_COMPILE_COMMANDS": {
		"name": "CMAKE_EXPORT_COMPILE_COMMANDS",
		"description": "Povolit nebo zakázat výstup příkazů kompilace během generování"
	},
	"CMAKE_EXPORT_FIND_PACKAGE_NAME": {
		"name": "CMAKE_EXPORT_FIND_PACKAGE_NAME",
		"description": "Inicializuje hodnotu EXPORT_FIND_PACKAGE_NAME."
	},
	"CMAKE_EXPORT_NO_PACKAGE_REGISTRY": {
		"name": "CMAKE_EXPORT_NO_PACKAGE_REGISTRY",
		"description": "Zakáže příkaz Export, když možnost CMP0090 není nastavená na hodnotu NOVÉ."
	},
	"CMAKE_EXPORT_PACKAGE_REGISTRY": {
		"name": "CMAKE_EXPORT_PACKAGE_REGISTRY",
		"description": "Povolí příkaz Export, když je možnost CMP0090 nastavená na hodnotu NOVÉ."
	},
	"CMAKE_EXTRA_GENERATOR": {
		"name": "CMAKE_EXTRA_GENERATOR",
		"description": "Další generátor, který se používá k sestavení projektu. Viz cmake-generators."
	},
	"CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES": {
		"name": "CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES",
		"description": "Další přípony pro sdílené knihovny"
	},
	"CMAKE_FIND_APPBUNDLE": {
		"name": "CMAKE_FIND_APPBUNDLE",
		"description": "Tato proměnná ovlivňuje, jak příkazy find_* volí mezi balíčky aplikací macOS a komponentami balíčku unix-style."
	},
	"CMAKE_FIND_DEBUG_MODE": {
		"name": "CMAKE_FIND_DEBUG_MODE",
		"description": "Pro následující příkazy do standardní chyby vytisknout dodatečné informace o vyhledání volání:"
	},
	"CMAKE_FIND_FRAMEWORK": {
		"name": "CMAKE_FIND_FRAMEWORK",
		"description": "Tato proměnná ovlivňuje, jak příkazy find_* volí mezi rozhraními macOS a komponentami balíčku unix-style."
	},
	"CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX": {
		"name": "CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX",
		"description": "Zadejte <suffix>, abyste příkazu find_library určili, že před každým adresářem lib, který by se normálně prohledával, se má hledat v adresáři lib<suffix>."
	},
	"CMAKE_FIND_LIBRARY_PREFIXES": {
		"name": "CMAKE_FIND_LIBRARY_PREFIXES",
		"description": "Předpony, které se mají předřadit při hledání knihoven"
	},
	"CMAKE_FIND_LIBRARY_SUFFIXES": {
		"name": "CMAKE_FIND_LIBRARY_SUFFIXES",
		"description": "Přípony, které se mají připojit při hledání knihoven"
	},
	"CMAKE_FIND_NO_INSTALL_PREFIX": {
		"name": "CMAKE_FIND_NO_INSTALL_PREFIX",
		"description": "Vyloučí hodnoty proměnných CMAKE_INSTALL_PREFIX a CMAKE_STAGING_PREFIX z CMAKE_SYSTEM_PREFIX_PATH. CMake standardně přidává tyto prefixy cíle projektu do CMAKE_SYSTEM_PREFIX_PATH za účelem podpory vytvoření série závislých balíčků a jejich instalace do společného prefixu. Pokud chcete toto chování potlačit, nastavte CMAKE_FIND_NO_INSTALL_PREFIX na hodnotu TRUE."
	},
	"CMAKE_FIND_PACKAGE_NAME": {
		"name": "CMAKE_FIND_PACKAGE_NAME",
		"description": "Definuje se příkazem find_package během načítání modulu find pro záznam názvu balíčku určeného volající funkcí. Podrobnosti najdete v dokumentaci k příkazu."
	},
	"CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY": {
		"name": "CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY",
		"description": "Ve výchozím nastavení není tato proměnná nastavena. Pokud není nastavená možnost CMAKE_FIND_USE_PACKAGE_REGISTRY ani CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY, bude příkaz find_package() používat uživatelský registr balíčků, pokud není zadána možnost NO_CMAKE_PACKAGE_REGISTRY."
	},
	"CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY": {
		"name": "CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY",
		"description": "Ve výchozím nastavení není tato proměnná nastavena. Pokud není nastavená možnost CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY ani CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY, bude příkaz find_package() používat systémový registr balíčků, pokud není zadána možnost NO_CMAKE_SYSTEM_PACKAGE_REGISTRY."
	},
	"CMAKE_FIND_PACKAGE_PREFER_CONFIG": {
		"name": "CMAKE_FIND_PACKAGE_PREFER_CONFIG",
		"description": "Oznámí příkazu find_package před režimem Module vyzkoušet režim Config, pokud nebyl zadán žádný režim."
	},
	"CMAKE_FIND_PACKAGE_REDIRECTS_DIR": {
		"name": "CMAKE_FIND_PACKAGE_REDIRECTS_DIR",
		"description": "Tato proměnná je určena pouze pro čtení a určuje adresář, který příkaz find_package nejprve zkontroluje, než začne hledat soubor modulu nebo konfiguračního balíčku kdekoli jinde. Soubor konfiguračního balíčku v tomto adresáři bude vždy nalezen přednostně před jakýmkoli jiným souborem modulu nebo souborem konfiguračního balíčku."
	},
	"CMAKE_FIND_PACKAGE_RESOLVE_SYMLINKS": {
		"name": "CMAKE_FIND_PACKAGE_RESOLVE_SYMLINKS",
		"description": "Nastavte možnost na hodnotu TRUE, pokud chcete, aby volání find_package vyřešila symbolické odkazy v hodnotě <PackageName>_DIR."
	},
	"CMAKE_FIND_PACKAGE_SORT_DIRECTION": {
		"name": "CMAKE_FIND_PACKAGE_SORT_DIRECTION",
		"description": "Směr řazení, který používá CMAKE_FIND_PACKAGE_SORT_ORDER. Může mít jednu z následujících hodnot:"
	},
	"CMAKE_FIND_PACKAGE_SORT_ORDER": {
		"name": "CMAKE_FIND_PACKAGE_SORT_ORDER",
		"description": "Výchozí pořadí řazení balíčků, které bylo nalezeno při použití příkazu find_package. Může mít jednu z následujících hodnot:"
	},
	"CMAKE_FIND_PACKAGE_TARGETS_GLOBAL": {
		"name": "CMAKE_FIND_PACKAGE_TARGETS_GLOBAL",
		"description": "Nastavení na TRUE povýší všechny IMPORTOVANÉ cíle zjištěné pomocí find_package na GLOBALÁLNí obor."
	},
	"CMAKE_FIND_PACKAGE_WARN_NO_MODULE": {
		"name": "CMAKE_FIND_PACKAGE_WARN_NO_MODULE",
		"description": "Určí, aby příkaz find_package zobrazil upozornění, pokud je volán bez explicitního režimu."
	},
	"CMAKE_FIND_ROOT_PATH": {
		"name": "CMAKE_FIND_ROOT_PATH",
		"description": "Seznam kořenových cest oddělených středníky pro hledání v systému souborů"
	},
	"CMAKE_FIND_ROOT_PATH_MODE_INCLUDE": {
		"name": "CMAKE_FIND_ROOT_PATH_MODE_INCLUDE",
		"description": "Tato proměnná určuje, jestli FIND_XXX používá cesty CMAKE_FIND_ROOT_PATH a CMAKE_SYSROOT."
	},
	"CMAKE_FIND_ROOT_PATH_MODE_LIBRARY": {
		"name": "CMAKE_FIND_ROOT_PATH_MODE_LIBRARY",
		"description": "Tato proměnná určuje, jestli FIND_XXX používá cesty CMAKE_FIND_ROOT_PATH a CMAKE_SYSROOT."
	},
	"CMAKE_FIND_ROOT_PATH_MODE_PACKAGE": {
		"name": "CMAKE_FIND_ROOT_PATH_MODE_PACKAGE",
		"description": "Tato proměnná určuje, jestli FIND_XXX používá cesty CMAKE_FIND_ROOT_PATH a CMAKE_SYSROOT."
	},
	"CMAKE_FIND_ROOT_PATH_MODE_PROGRAM": {
		"name": "CMAKE_FIND_ROOT_PATH_MODE_PROGRAM",
		"description": "Tato proměnná určuje, jestli FIND_XXX používá cesty CMAKE_FIND_ROOT_PATH a CMAKE_SYSROOT."
	},
	"CMAKE_FIND_USE_CMAKE_ENVIRONMENT_PATH": {
		"name": "CMAKE_FIND_USE_CMAKE_ENVIRONMENT_PATH",
		"description": "Řídí výchozí chování následujících příkazů pro to, jestli se mají prohledávat cesty poskytnuté proměnnými prostředí, které jsou specifické pro cmake:"
	},
	"CMAKE_FIND_USE_CMAKE_PATH": {
		"name": "CMAKE_FIND_USE_CMAKE_PATH",
		"description": "Řídí výchozí chování následujících příkazů pro to, jestli se mají prohledávat cesty poskytnuté proměnnými mezipaměti, které jsou specifické pro cmake:"
	},
	"CMAKE_FIND_USE_CMAKE_SYSTEM_PATH": {
		"name": "CMAKE_FIND_USE_CMAKE_SYSTEM_PATH",
		"description": "Řídí výchozí chování následujících příkazů pro to, jestli se mají prohledávat cesty poskytnuté proměnnými cmake, které jsou specifické pro platformu:"
	},
	"CMAKE_FIND_USE_INSTALL_PREFIX": {
		"name": "CMAKE_FIND_USE_INSTALL_PREFIX",
		"description": "Ovládá výchozí chování následujících příkazů. Konkrétně to, jestli se mají prohledávat umístění v proměnných CMAKE_INSTALL_PREFIX a CMAKE_STAGING_PREFIX."
	},
	"CMAKE_FIND_USE_PACKAGE_REGISTRY": {
		"name": "CMAKE_FIND_USE_PACKAGE_REGISTRY",
		"description": "Řídí výchozí chování příkazu find_package pro to, jestli se mají prohledávat cesty poskytnuté uživatelským registrem balíčků."
	},
	"CMAKE_FIND_USE_PACKAGE_ROOT_PATH": {
		"name": "CMAKE_FIND_USE_PACKAGE_ROOT_PATH",
		"description": "Řídí výchozí chování následujících příkazů pro to, jestli se mají prohledávat cesty poskytnuté proměnnými <PackageName>_ROOT:"
	},
	"CMAKE_FIND_USE_SYSTEM_ENVIRONMENT_PATH": {
		"name": "CMAKE_FIND_USE_SYSTEM_ENVIRONMENT_PATH",
		"description": "Řídí výchozí chování následujících příkazů pro to, jestli se mají prohledávat cesty poskytnuté standardními systémovými proměnnými prostředí:"
	},
	"CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY": {
		"name": "CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY",
		"description": "Řídí prohledávání systémového registru balíčků příkazem find_package."
	},
	"CMAKE_FOLDER": {
		"name": "CMAKE_FOLDER",
		"description": "Umožňuje nastavit název složky. Slouží k uspořádání cílů v integrovaném vývojovém prostředí."
	},
	"CMAKE_Fortran_FORMAT": {
		"name": "CMAKE_Fortran_FORMAT",
		"description": "Nastavením hodnoty FIXED nebo FREE můžete určit rozložení zdroje v jazyce Fortran."
	},
	"CMAKE_Fortran_MODDIR_DEFAULT": {
		"name": "CMAKE_Fortran_MODDIR_DEFAULT",
		"description": "Výchozí adresář výstupu modulu pro Fortran"
	},
	"CMAKE_Fortran_MODDIR_FLAG": {
		"name": "CMAKE_Fortran_MODDIR_FLAG",
		"description": "Příznak Fortranu pro adresář výstupu modulu"
	},
	"CMAKE_Fortran_MODOUT_FLAG": {
		"name": "CMAKE_Fortran_MODOUT_FLAG",
		"description": "Příznak Fortranu pro povolení výstupu modulu"
	},
	"CMAKE_Fortran_MODULE_DIRECTORY": {
		"name": "CMAKE_Fortran_MODULE_DIRECTORY",
		"description": "Adresář výstupu modulu pro Fortran"
	},
	"CMAKE_Fortran_PREPROCESS": {
		"name": "CMAKE_Fortran_PREPROCESS",
		"description": "Výchozí hodnota pro vlastnost Fortran_PREPROCESS cílů"
	},
	"CMAKE_FRAMEWORK": {
		"name": "CMAKE_FRAMEWORK",
		"description": "Výchozí hodnota pro vlastnost FRAMEWORK cílů"
	},
	"CMAKE_FRAMEWORK_MULTI_CONFIG_POSTFIX_<CONFIG>": {
		"name": "CMAKE_FRAMEWORK_MULTI_CONFIG_POSTFIX_<CONFIG>",
		"description": "Výchozí přípona názvu souboru architektury v konfiguraci <CONFIG> při použití generátoru s více konfiguracemi"
	},
	"CMAKE_FRAMEWORK_PATH": {
		"name": "CMAKE_FRAMEWORK_PATH",
		"description": "Seznam adresářů oddělených středníky, který určuje cestu pro hledání rozhraní macOS používaných příkazy find_library, find_package, find_path a find_file."
	},
	"CMAKE_GENERATOR": {
		"name": "CMAKE_GENERATOR",
		"description": "Generátor, který se používá k sestavení projektu. Viz cmake-generators."
	},
	"CMAKE_GENERATOR_INSTANCE": {
		"name": "CMAKE_GENERATOR_INSTANCE",
		"description": "Specifikace instance pro konkrétní generátor, kterou zadal uživatel"
	},
	"CMAKE_GENERATOR_PLATFORM": {
		"name": "CMAKE_GENERATOR_PLATFORM",
		"description": "Specifikace cílové platformy pro konkrétní generátor, kterou zadal uživatel"
	},
	"CMAKE_GENERATOR_TOOLSET": {
		"name": "CMAKE_GENERATOR_TOOLSET",
		"description": "Specifikace nativní sady nástrojů systému sestavení, kterou zadal uživatel"
	},
	"CMAKE_GHS_NO_SOURCE_GROUP_FILE": {
		"name": "CMAKE_GHS_NO_SOURCE_GROUP_FILE",
		"description": "Logická hodnota ZAPNOUT/VYPNOUT k řízení toho, jestli soubor projektu pro cíl by měl být jeden jediný soubor nebo více souborů. Další podrobnosti najdete v informacích k vlastnosti GHS_NO_SOURCE_GROUP_FILE."
	},
	"CMAKE_GLOBAL_AUTOGEN_TARGET": {
		"name": "CMAKE_GLOBAL_AUTOGEN_TARGET",
		"description": "Přepínač k povolení generování globálního cíle autogen"
	},
	"CMAKE_GLOBAL_AUTOGEN_TARGET_NAME": {
		"name": "CMAKE_GLOBAL_AUTOGEN_TARGET_NAME",
		"description": "Umožňuje změnit název globálního cíle autogen."
	},
	"CMAKE_GLOBAL_AUTORCC_TARGET": {
		"name": "CMAKE_GLOBAL_AUTORCC_TARGET",
		"description": "Přepínač k povolení generování globálního cíle autorcc"
	},
	"CMAKE_GLOBAL_AUTORCC_TARGET_NAME": {
		"name": "CMAKE_GLOBAL_AUTORCC_TARGET_NAME",
		"description": "Umožňuje změnit název globálního cíle autorcc."
	},
	"CMAKE_GNUtoMS": {
		"name": "CMAKE_GNUtoMS",
		"description": "Převést knihovny importu GNU (.dll.a) na formát MS (.lib)"
	},
	"CMAKE_HIP_ARCHITECTURES": {
		"name": "CMAKE_HIP_ARCHITECTURES",
		"description": "Seznam architektur GPU, pro které se má vygenerovat kód zařízení. Názvy architektury se interpretují na základě CMAKE_HIP_PLATFORM."
	},
	"CMAKE_HIP_COMPILE_FEATURES": {
		"name": "CMAKE_HIP_COMPILE_FEATURES",
		"description": "Seznam funkcí známých v kompilátoru HIP"
	},
	"CMAKE_HIP_EXTENSIONS": {
		"name": "CMAKE_HIP_EXTENSIONS",
		"description": "Výchozí hodnota pro cílovou vlastnost HIP_EXTENSIONS, pokud je nastavena při vytvoření cíle"
	},
	"CMAKE_HIP_PLATFORM": {
		"name": "CMAKE_HIP_PLATFORM",
		"description": "Platforma GPU, pro kterou se mají kompilovat zdroje jazyka HIP."
	},
	"CMAKE_HIP_STANDARD": {
		"name": "CMAKE_HIP_STANDARD",
		"description": "Výchozí hodnota pro cílovou vlastnost HIP_STANDARD, pokud je nastavena při vytvoření cíle"
	},
	"CMAKE_HIP_STANDARD_REQUIRED": {
		"name": "CMAKE_HIP_STANDARD_REQUIRED",
		"description": "Výchozí hodnota pro cílovou vlastnost HIP_REQUIRED, pokud je nastavena při vytvoření cíle"
	},
	"CMAKE_HOME_DIRECTORY": {
		"name": "CMAKE_HOME_DIRECTORY",
		"description": "Cesta k nejvyšší úrovni zdrojového stromu. Stejné jako CMAKE_SOURCE_DIR."
	},
	"CMAKE_HOST_APPLE": {
		"name": "CMAKE_HOST_APPLE",
		"description": "Hodnota true pro operační systémy Apple macOS"
	},
	"CMAKE_HOST_BSD": {
		"name": "CMAKE_HOST_BSD",
		"description": "Nastavte na řetězcovou hodnotu, pokud je hostitelský systém BSD. Tato hodnota může být jedna z následujících hodnot: DragonFlyBSD, FreeBSD, OpenBSD nebo NetBSD."
	},
	"CMAKE_HOST_LINUX": {
		"name": "CMAKE_HOST_LINUX",
		"description": "Pokud je hostitelským systémem Linux, nastavte hodnotu true."
	},
	"CMAKE_HOST_SOLARIS": {
		"name": "CMAKE_HOST_SOLARIS",
		"description": "Hodnota true pro operační systémy Oracle Solaris"
	},
	"CMAKE_HOST_SYSTEM": {
		"name": "CMAKE_HOST_SYSTEM",
		"description": "Složený název operačního systému, ve kterém je CMake spuštěný"
	},
	"CMAKE_HOST_SYSTEM_NAME": {
		"name": "CMAKE_HOST_SYSTEM_NAME",
		"description": "Název operačního systému, ve kterém CMake běží"
	},
	"CMAKE_HOST_SYSTEM_PROCESSOR": {
		"name": "CMAKE_HOST_SYSTEM_PROCESSOR",
		"description": "Název procesoru, na kterém CMake běží"
	},
	"CMAKE_HOST_SYSTEM_VERSION": {
		"name": "CMAKE_HOST_SYSTEM_VERSION",
		"description": "Verze operačního systému, ve které CMake běží"
	},
	"CMAKE_HOST_UNIX": {
		"name": "CMAKE_HOST_UNIX",
		"description": "Hodnota true pro operační systémy UNIX a na bázi systému UNIX"
	},
	"CMAKE_HOST_WIN32": {
		"name": "CMAKE_HOST_WIN32",
		"description": "Hodnota true, pokud systém hostitele používá Windows, včetně 64bitových systémů Windows a MSYS"
	},
	"CMAKE_IGNORE_PATH": {
		"name": "CMAKE_IGNORE_PATH",
		"description": "Středníky oddělený seznam adresářů, které mají být ignorovány různými příkazy find...()."
	},
	"CMAKE_IGNORE_PREFIX_PATH": {
		"name": "CMAKE_IGNORE_PREFIX_PATH",
		"description": "Středníky oddělený seznam předpon vyhledávání, které mají být ignorovány příkazy find_program, find_library, find_file a find_path. Režim konfigurace příkazu find_package také ignoruje předpony (režim modulu není ovlivněný). Pokud místo toho chcete ignorovat konkrétní adresáře, podívejte se na CMAKE_IGNORE_NONPREFIX_VAR."
	},
	"CMAKE_IMPORT_LIBRARY_PREFIX": {
		"name": "CMAKE_IMPORT_LIBRARY_PREFIX",
		"description": "Předpona pro knihovny importu, se kterými se propojujete"
	},
	"CMAKE_IMPORT_LIBRARY_SUFFIX": {
		"name": "CMAKE_IMPORT_LIBRARY_SUFFIX",
		"description": "Přípona pro knihovny importu, se kterými se propojujete"
	},
	"CMAKE_INCLUDE_CURRENT_DIR": {
		"name": "CMAKE_INCLUDE_CURRENT_DIR",
		"description": "Automaticky přidat aktuální adresáře zdroje a sestavení do cesty zahrnutí"
	},
	"CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE": {
		"name": "CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE",
		"description": "Automaticky přidat aktuální adresáře zdroje a sestavení do cílové vlastnosti INTERFACE_INCLUDE_DIRECTORIES"
	},
	"CMAKE_INCLUDE_DIRECTORIES_BEFORE": {
		"name": "CMAKE_INCLUDE_DIRECTORIES_BEFORE",
		"description": "Určuje, jestli se adresáře v include_directories mají ve výchozím nastavení připojit nebo předřadit."
	},
	"CMAKE_INCLUDE_DIRECTORIES_PROJECT_BEFORE": {
		"name": "CMAKE_INCLUDE_DIRECTORIES_PROJECT_BEFORE",
		"description": "Určuje, jestli se má vynucovat předřazování adresářů souborů k zahrnutí do projektu."
	},
	"CMAKE_INCLUDE_PATH": {
		"name": "CMAKE_INCLUDE_PATH",
		"description": "Seznam adresářů oddělených středníky, který určuje cestu hledání pro příkazy find_file a find_path. Ve výchozím nastavení je seznam prázdný, je určen k nastavení podle projektu."
	},
	"CMAKE_INSTALL_DEFAULT_COMPONENT_NAME": {
		"name": "CMAKE_INSTALL_DEFAULT_COMPONENT_NAME",
		"description": "Výchozí komponenta používaná v příkazech instalace"
	},
	"CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS": {
		"name": "CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS",
		"description": "Výchozí oprávnění pro adresáře vytvořené implicitně během instalace souborů pomocí příkazů install a file."
	},
	"CMAKE_INSTALL_MESSAGE": {
		"name": "CMAKE_INSTALL_MESSAGE",
		"description": "Určete úroveň podrobností kódu instalačního skriptu, který generuje příkaz install (pomocí příkazu file). U cest, které jsou nově instalované nebo aktualizované, může instalace tisknout řádky, jako jsou například:"
	},
	"CMAKE_INSTALL_NAME_DIR": {
		"name": "CMAKE_INSTALL_NAME_DIR",
		"description": "Název adresáře pro nainstalované cíle na platformách Apple"
	},
	"CMAKE_INSTALL_PREFIX": {
		"name": "CMAKE_INSTALL_PREFIX",
		"description": "Instalační adresář, který používá instalace"
	},
	"CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT": {
		"name": "CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT",
		"description": "CMake nastaví tuto proměnnou na hodnotu TRUE, pokud byl CMAKE_INSTALL_PREFIX právě inicializován na svoji výchozí hodnotu, obvykle při prvním spuštění CMake v rámci nového stromu sestavení, když není při prvním spuštění CMake nastavena proměnná prostředí CMAKE_INSTALL_PREFIX. V kódu projektu to lze použít ke změně výchozí hodnoty bez nutnosti přepsání hodnoty zadané uživatelem:"
	},
	"CMAKE_INSTALL_REMOVE_ENVIRONMENT_RPATH": {
		"name": "CMAKE_INSTALL_REMOVE_ENVIRONMENT_RPATH",
		"description": "Nastaví výchozí nastavení pro to, jestli by se měly během instalace odebrat cesty rpaths definované sadou nástrojů."
	},
	"CMAKE_INSTALL_RPATH": {
		"name": "CMAKE_INSTALL_RPATH",
		"description": "Cesta rpath, která se má použít pro instalované cíle"
	},
	"CMAKE_INSTALL_RPATH_USE_LINK_PATH": {
		"name": "CMAKE_INSTALL_RPATH_USE_LINK_PATH",
		"description": "Přidejte cesty pro vyhledávání linkeru a cestu rpath pro nainstalované cíle."
	},
	"CMAKE_INTERNAL_PLATFORM_ABI": {
		"name": "CMAKE_INTERNAL_PLATFORM_ABI",
		"description": "Interní proměnná, která se může změnit"
	},
	"CMAKE_INTERPROCEDURAL_OPTIMIZATION": {
		"name": "CMAKE_INTERPROCEDURAL_OPTIMIZATION",
		"description": "Výchozí hodnota INTERPROCEDURAL_OPTIMIZATION pro cíle"
	},
	"CMAKE_INTERPROCEDURAL_OPTIMIZATION_<CONFIG>": {
		"name": "CMAKE_INTERPROCEDURAL_OPTIMIZATION_<CONFIG>",
		"description": "Výchozí hodnota INTERPROCEDURAL_OPTIMIZATION_ pro cíle"
	},
	"CMAKE_IOS_INSTALL_COMBINED": {
		"name": "CMAKE_IOS_INSTALL_COMBINED",
		"description": "Výchozí hodnota IOS_INSTALL_COMBINED pro cíle"
	},
	"CMAKE_ISPC_HEADER_DIRECTORY": {
		"name": "CMAKE_ISPC_HEADER_DIRECTORY",
		"description": "ISPC vygeneroval výstupní adresář hlavičky."
	},
	"CMAKE_ISPC_HEADER_SUFFIX": {
		"name": "CMAKE_ISPC_HEADER_SUFFIX",
		"description": "Výstupní přípona, která se má použít pro hlavičky vygenerované pomocí ISPC"
	},
	"CMAKE_ISPC_INSTRUCTION_SETS": {
		"name": "CMAKE_ISPC_INSTRUCTION_SETS",
		"description": "Výchozí hodnota pro vlastnost ISPC_INSTRUCTION_SETS cílů"
	},
	"CMAKE_JOB_POOLS": {
		"name": "CMAKE_JOB_POOLS",
		"description": "Pokud není globální vlastnost JOB_POOLS nastavená, použije se místo ní hodnota této proměnné. Další informace viz JOB_POOLS."
	},
	"CMAKE_JOB_POOL_COMPILE": {
		"name": "CMAKE_JOB_POOL_COMPILE",
		"description": "Tato proměnná se používá k inicializaci vlastnosti JOB_POOL_COMPILE ve všech cílích. Další informace viz JOB_POOL_COMPILE."
	},
	"CMAKE_JOB_POOL_LINK": {
		"name": "CMAKE_JOB_POOL_LINK",
		"description": "Tato proměnná se používá k inicializaci vlastnosti JOB_POOL_LINK ve všech cílích. Další informace viz JOB_POOL_LINK."
	},
	"CMAKE_JOB_POOL_PRECOMPILE_HEADER": {
		"name": "CMAKE_JOB_POOL_PRECOMPILE_HEADER",
		"description": "Tato proměnná se používá k inicializaci vlastnosti JOB_POOL_PRECOMPILE_HEADER ve všech cílech. Další informace viz JOB_POOL_PRECOMPILE_HEADER."
	},
	"CMAKE_KATE_FILES_MODE": {
		"name": "CMAKE_KATE_FILES_MODE",
		"description": "Tuto proměnnou mezipaměti používá generátor projektu Kate a řídí, v jakém režimu se nastaví položka souborů v souboru projektu. Viz cmake-generators."
	},
	"CMAKE_KATE_MAKE_ARGUMENTS": {
		"name": "CMAKE_KATE_MAKE_ARGUMENTS",
		"description": "Tuto proměnnou mezipaměti používá generátor projektu Kate. Viz cmake-generators."
	},
	"CMAKE_<LANG>_ANDROID_TOOLCHAIN_MACHINE": {
		"name": "CMAKE_<LANG>_ANDROID_TOOLCHAIN_MACHINE",
		"description": "Při křížové kompilaci pro Android tato proměnná obsahuje název počítače s kolekcí binutils sady nástrojů (např. gcc -dumpmachine). Nástroje kolekce binutils mají obvykle ve svém názvu předponu <machine>-."
	},
	"CMAKE_<LANG>_ANDROID_TOOLCHAIN_PREFIX": {
		"name": "CMAKE_<LANG>_ANDROID_TOOLCHAIN_PREFIX",
		"description": "Při křížové kompilaci pro Android tato proměnná obsahuje absolutní cestu s předponou pro kompilátor GNU sady nástrojů a jeho kolekci binutils."
	},
	"CMAKE_<LANG>_ANDROID_TOOLCHAIN_SUFFIX": {
		"name": "CMAKE_<LANG>_ANDROID_TOOLCHAIN_SUFFIX",
		"description": "Při křížové kompilaci pro Android tato proměnná obsahuje příponu platformy hostitele kompilátoru GNU sady nástrojů a jeho kolekce binutils."
	},
	"CMAKE_<LANG>_ARCHIVE_APPEND": {
		"name": "CMAKE_<LANG>_ARCHIVE_APPEND",
		"description": "Proměnná pravidla pro přidání do statického archivu"
	},
	"CMAKE_<LANG>_ARCHIVE_CREATE": {
		"name": "CMAKE_<LANG>_ARCHIVE_CREATE",
		"description": "Proměnná pravidla pro vytvoření nového statického archivu"
	},
	"CMAKE_<LANG>_ARCHIVE_FINISH": {
		"name": "CMAKE_<LANG>_ARCHIVE_FINISH",
		"description": "Proměnná pravidla pro dokončení existujícího statického archivu"
	},
	"CMAKE_<LANG>_BYTE_ORDER": {
		"name": "CMAKE_<LANG>_BYTE_ORDER",
		"description": "Pořadí bajtů cílové architektury kompilátoru <LANG>, pokud je známé. Pokud je definované a není prázdné, hodnota je jednou z těchto hodnot:"
	},
	"CMAKE_<LANG>_CLANG_TIDY": {
		"name": "CMAKE_<LANG>_CLANG_TIDY",
		"description": "Výchozí hodnota cílové vlastnosti <LANG>_CLANG_TIDY, pokud <LANG> je C, CXX, OBJC nebo OBJCXX"
	},
	"CMAKE_<LANG>_CLANG_TIDY_EXPORT_FIXES_DIR": {
		"name": "CMAKE_<LANG>_CLANG_TIDY_EXPORT_FIXES_DIR",
		"description": "Výchozí hodnota cílové vlastnosti <LANG>_CLANG_TIDY_EXPORT_FIXES_DIR, pokud <LANG> je C, CXX, OBJC nebo OBJCXX."
	},
	"CMAKE_<LANG>_COMPILER": {
		"name": "CMAKE_<LANG>_COMPILER",
		"description": "Úplná cesta ke kompilátoru pro LANG"
	},
	"CMAKE_<LANG>_COMPILER_ABI": {
		"name": "CMAKE_<LANG>_COMPILER_ABI",
		"description": "Interní proměnná, která se může změnit"
	},
	"CMAKE_<LANG>_COMPILER_AR": {
		"name": "CMAKE_<LANG>_COMPILER_AR",
		"description": "Obálka okolo příkazu ar, která přidává vhodný parametr --plugin pro daný kompilátor."
	},
	"CMAKE_<LANG>_COMPILER_ARCHITECTURE_ID": {
		"name": "CMAKE_<LANG>_COMPILER_ARCHITECTURE_ID",
		"description": "Interní proměnná, která se může změnit"
	},
	"CMAKE_<LANG>_COMPILER_EXTERNAL_TOOLCHAIN": {
		"name": "CMAKE_<LANG>_COMPILER_EXTERNAL_TOOLCHAIN",
		"description": "Externí sada nástrojů pro křížovou kompilaci, pokud je podporována"
	},
	"CMAKE_<LANG>_COMPILER_FRONTEND_VARIANT": {
		"name": "CMAKE_<LANG>_COMPILER_FRONTEND_VARIANT",
		"description": "Identifikační řetězec varianty front-endu kompilátoru"
	},
	"CMAKE_<LANG>_COMPILER_ID": {
		"name": "CMAKE_<LANG>_COMPILER_ID",
		"description": "Identifikační řetězec kompilátoru."
	},
	"CMAKE_<LANG>_COMPILER_LAUNCHER": {
		"name": "CMAKE_<LANG>_COMPILER_LAUNCHER",
		"description": "Výchozí hodnota cílové vlastnosti <LANG>_COMPILER_LAUNCHER. Tato proměnná slouží k inicializaci této vlastnosti u každého cíle v době, kdy se vytváří. To se provádí jen v případě, že <LANG> je C, CXX, Fortran, HIP, OBJC, OBJCXX nebo CUDA."
	},
	"CMAKE_<LANG>_COMPILER_LINKER": {
		"name": "CMAKE_<LANG>_COMPILER_LINKER",
		"description": "Úplná cesta k linkeru pro LANG"
	},
	"CMAKE_<LANG>_COMPILER_LINKER_FRONTEND_VARIANT": {
		"name": "CMAKE_<LANG>_COMPILER_LINKER_FRONTEND_VARIANT",
		"description": "Identifikační řetězec varianty front-endu linkeru"
	},
	"CMAKE_<LANG>_COMPILER_LINKER_ID": {
		"name": "CMAKE_<LANG>_COMPILER_LINKER_ID",
		"description": "Identifikační řetězec linkeru."
	},
	"CMAKE_<LANG>_COMPILER_LINKER_VERSION": {
		"name": "CMAKE_<LANG>_COMPILER_LINKER_VERSION",
		"description": "Řetězec verze linkeru."
	},
	"CMAKE_<LANG>_COMPILER_LOADED": {
		"name": "CMAKE_<LANG>_COMPILER_LOADED",
		"description": "Definuje se jako hodnota true, pokud je jazyk povolený."
	},
	"CMAKE_<LANG>_COMPILER_PREDEFINES_COMMAND": {
		"name": "CMAKE_<LANG>_COMPILER_PREDEFINES_COMMAND",
		"description": "Příkaz, jehož výstupy jsou předběžné definice kompilátoru"
	},
	"CMAKE_<LANG>_COMPILER_RANLIB": {
		"name": "CMAKE_<LANG>_COMPILER_RANLIB",
		"description": "Obálka okolo příkazu ranlib, která přidává vhodný parametr --plugin pro daný kompilátor."
	},
	"CMAKE_<LANG>_COMPILER_TARGET": {
		"name": "CMAKE_<LANG>_COMPILER_TARGET",
		"description": "Cíl pro křížovou kompilaci, pokud je podporována"
	},
	"CMAKE_<LANG>_COMPILER_VERSION": {
		"name": "CMAKE_<LANG>_COMPILER_VERSION",
		"description": "Řetězec verze kompilátoru."
	},
	"CMAKE_<LANG>_COMPILER_VERSION_INTERNAL": {
		"name": "CMAKE_<LANG>_COMPILER_VERSION_INTERNAL",
		"description": "Interní proměnná, která se může změnit"
	},
	"CMAKE_<LANG>_COMPILE_OBJECT": {
		"name": "CMAKE_<LANG>_COMPILE_OBJECT",
		"description": "Proměnná pravidla pro kompilaci jednoho souboru objektu"
	},
	"CMAKE_<LANG>_CPPCHECK": {
		"name": "CMAKE_<LANG>_CPPCHECK",
		"description": "Výchozí hodnota cílové vlastnosti <LANG>_CPPCHECK. Tato proměnná slouží k inicializaci této vlastnosti u každého cíle v době, kdy se vytváří. To se provádí jenom v případě, že <LANG> je C nebo CXX."
	},
	"CMAKE_<LANG>_CPPLINT": {
		"name": "CMAKE_<LANG>_CPPLINT",
		"description": "Výchozí hodnota cílové vlastnosti <LANG>_CPPLINT. Tato proměnná slouží k inicializaci této vlastnosti u každého cíle v době, kdy se vytváří. To se provádí jenom v případě, že <LANG> je C nebo CXX."
	},
	"CMAKE_<LANG>_CREATE_SHARED_LIBRARY": {
		"name": "CMAKE_<LANG>_CREATE_SHARED_LIBRARY",
		"description": "Proměnná pravidla pro vytvoření sdílené knihovny"
	},
	"CMAKE_<LANG>_CREATE_SHARED_MODULE": {
		"name": "CMAKE_<LANG>_CREATE_SHARED_MODULE",
		"description": "Proměnná pravidla pro vytvoření sdíleného modulu"
	},
	"CMAKE_<LANG>_CREATE_STATIC_LIBRARY": {
		"name": "CMAKE_<LANG>_CREATE_STATIC_LIBRARY",
		"description": "Proměnná pravidla pro vytvoření statické knihovny"
	},
	"CMAKE_<LANG>_EXTENSIONS": {
		"name": "CMAKE_<LANG>_EXTENSIONS",
		"description": "Varianty:"
	},
	"CMAKE_<LANG>_EXTENSIONS_DEFAULT": {
		"name": "CMAKE_<LANG>_EXTENSIONS_DEFAULT",
		"description": "Výchozí režim rozšíření kompilátoru. Používá se jako výchozí pro cílovou vlastnost <LANG>_EXTENSIONS, když není nastaveno CMAKE_<LANG>_EXTENSIONS (podle CMP0128)."
	},
	"CMAKE_<LANG>_FLAGS": {
		"name": "CMAKE_<LANG>_FLAGS",
		"description": "Příznaky jazyka pro jazyk <LANG> se používají při sestavování pro všechny konfigurace. Tyto příznaky budou předány všem vyvoláním kompilátoru. To zahrnuje volání, která řídí kompilaci, a volání, která řídí propojení."
	},
	"CMAKE_<LANG>_FLAGS_<CONFIG>": {
		"name": "CMAKE_<LANG>_FLAGS_<CONFIG>",
		"description": "Příznaky jazyka pro jazyk <LANG> používané při sestavování pro konfiguraci <CONFIG>. Tyto příznaky se předají všem vyvoláním kompilátoru v odpovídající konfiguraci. To zahrnuje volání, která řídí kompilaci, a volání, která řídí propojení."
	},
	"CMAKE_<LANG>_FLAGS_<CONFIG>_INIT": {
		"name": "CMAKE_<LANG>_FLAGS_<CONFIG>_INIT",
		"description": "Hodnota používaná k inicializaci položky mezipaměti CMAKE_<LANG>_FLAGS_ při první konfiguraci stromu sestavení pro jazyk <LANG>. Tuto proměnnou by měl nastavit soubor sady nástrojů. CMake může k této hodnotě předřadit nebo připojit obsah na základě prostředí a cílové platformy."
	},
	"CMAKE_<LANG>_FLAGS_DEBUG": {
		"name": "CMAKE_<LANG>_FLAGS_DEBUG",
		"description": "Tato proměnná je varianta Debug proměnné CMAKE_<LANG>_FLAGS_."
	},
	"CMAKE_<LANG>_FLAGS_DEBUG_INIT": {
		"name": "CMAKE_<LANG>_FLAGS_DEBUG_INIT",
		"description": "Tato proměnná je varianta Debug proměnné CMAKE_<LANG>_FLAGS_<CONFIG>_INIT."
	},
	"CMAKE_<LANG>_FLAGS_INIT": {
		"name": "CMAKE_<LANG>_FLAGS_INIT",
		"description": "Hodnota, která se používá k inicializaci položky mezipaměti CMAKE_<LANG>_FLAGS při první konfiguraci stromu sestavení pro jazyk <LANG>. Tuto proměnnou má nastavovat soubor sady nástrojů. CMake může předřazovat (přidat na začátek) nebo připojovat (na konec) obsah k hodnotě podle prostředí a cílové platformy. Například obsah proměnné prostředí xxxFLAGS bude předřazen, kde xxx bude záviset na jazyku, ale nebude nutně stejné jako <LANG> (například CXXFLAGS pro CXX, FFLAGS pro Fortran atd.). Tato hodnota je fragment řetězce příkazového řádku. Proto by mělo být více možností odděleno mezerami a možnosti s mezerami by měly být uvedeny v uvozovkách."
	},
	"CMAKE_<LANG>_FLAGS_MINSIZEREL": {
		"name": "CMAKE_<LANG>_FLAGS_MINSIZEREL",
		"description": "Tato proměnná je varianta MinSizeRel proměnné CMAKE_<LANG>_FLAGS_."
	},
	"CMAKE_<LANG>_FLAGS_MINSIZEREL_INIT": {
		"name": "CMAKE_<LANG>_FLAGS_MINSIZEREL_INIT",
		"description": "Tato proměnná je varianta MinSizeRel proměnné CMAKE_<LANG>_FLAGS_<CONFIG>_INIT."
	},
	"CMAKE_<LANG>_FLAGS_RELEASE": {
		"name": "CMAKE_<LANG>_FLAGS_RELEASE",
		"description": "Tato proměnná je varianta Release proměnné CMAKE_<LANG>_FLAGS_."
	},
	"CMAKE_<LANG>_FLAGS_RELEASE_INIT": {
		"name": "CMAKE_<LANG>_FLAGS_RELEASE_INIT",
		"description": "Tato proměnná je varianta Release proměnné CMAKE_<LANG>_FLAGS_<CONFIG>_INIT."
	},
	"CMAKE_<LANG>_FLAGS_RELWITHDEBINFO": {
		"name": "CMAKE_<LANG>_FLAGS_RELWITHDEBINFO",
		"description": "Tato proměnná je varianta RelWithDebInfo proměnné CMAKE_<LANG>_FLAGS_."
	},
	"CMAKE_<LANG>_FLAGS_RELWITHDEBINFO_INIT": {
		"name": "CMAKE_<LANG>_FLAGS_RELWITHDEBINFO_INIT",
		"description": "Tato proměnná je varianta RelWithDebInfo proměnné CMAKE_<LANG>_FLAGS_<CONFIG>_INIT."
	},
	"CMAKE_<LANG>_HOST_COMPILER": {
		"name": "CMAKE_<LANG>_HOST_COMPILER",
		"description": "Tato proměnná je k dispozici, když <LANG> je CUDA nebo HIP."
	},
	"CMAKE_<LANG>_IGNORE_EXTENSIONS": {
		"name": "CMAKE_<LANG>_IGNORE_EXTENSIONS",
		"description": "Přípony souborů, které by sestavení mělo ignorovat"
	},
	"CMAKE_<LANG>_IMPLICIT_INCLUDE_DIRECTORIES": {
		"name": "CMAKE_<LANG>_IMPLICIT_INCLUDE_DIRECTORIES",
		"description": "Adresáře, ve kterých kompilátor implicitně vyhledávává soubory hlaviček"
	},
	"CMAKE_<LANG>_IMPLICIT_LINK_DIRECTORIES": {
		"name": "CMAKE_<LANG>_IMPLICIT_LINK_DIRECTORIES",
		"description": "Implicitní cesta hledání linkeru, která byla zjištěna pro jazyk <LANG>"
	},
	"CMAKE_<LANG>_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES": {
		"name": "CMAKE_<LANG>_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES",
		"description": "Implicitní cesta hledání rozhraní linkeru, která byla zjištěna pro jazyk <LANG>"
	},
	"CMAKE_<LANG>_IMPLICIT_LINK_LIBRARIES": {
		"name": "CMAKE_<LANG>_IMPLICIT_LINK_LIBRARIES",
		"description": "Příznaky a knihovny implicitních odkazů, které byly zjištěny pro jazyk <LANG>"
	},
	"CMAKE_<LANG>_INCLUDE_WHAT_YOU_USE": {
		"name": "CMAKE_<LANG>_INCLUDE_WHAT_YOU_USE",
		"description": "Výchozí hodnota cílové vlastnosti <LANG>_INCLUDE_WHAT_YOU_USE. Tato proměnná slouží k inicializaci této vlastnosti u každého cíle v době, kdy se vytváří. To se provádí jenom v případě, že <LANG> je C nebo CXX."
	},
	"CMAKE_<LANG>_LIBRARY_ARCHITECTURE": {
		"name": "CMAKE_<LANG>_LIBRARY_ARCHITECTURE",
		"description": "Název adresáře knihovny cílové architektury, který byl zjištěn pro jazyk <LANG>"
	},
	"CMAKE_<LANG>_LINKER_LAUNCHER": {
		"name": "CMAKE_<LANG>_LINKER_LAUNCHER",
		"description": "Výchozí hodnota cílové vlastnosti <LANG>_LINKER_LAUNCHER. Tato proměnná slouží k inicializaci této vlastnosti u každého cíle, když je vytvořen. To se provádí jenom v případě, že <LANG> je C, CXX, OBJC nebo OBJCXX."
	},
	"CMAKE_<LANG>_LINKER_PREFERENCE": {
		"name": "CMAKE_<LANG>_LINKER_PREFERENCE",
		"description": "Interní proměnná, která se může změnit"
	},
	"CMAKE_<LANG>_LINKER_PREFERENCE_PROPAGATES": {
		"name": "CMAKE_<LANG>_LINKER_PREFERENCE_PROPAGATES",
		"description": "Interní proměnná, která se může změnit"
	},
	"CMAKE_<LANG>_LINKER_WRAPPER_FLAG": {
		"name": "CMAKE_<LANG>_LINKER_WRAPPER_FLAG",
		"description": "Definuje syntaxi možnosti ovladače kompilátoru pro předání možností do nástroje linker. Použije se k překladu prefixu LINKER: v možnostech připojení (viz add_link_options a target_link_options)."
	},
	"CMAKE_<LANG>_LINKER_WRAPPER_FLAG_SEP": {
		"name": "CMAKE_<LANG>_LINKER_WRAPPER_FLAG_SEP",
		"description": "Tato proměnná se používá spolu s proměnnou CMAKE_<LANG>_LINKER_WRAPPER_FLAG k formátování prefixu LINKER: v možnostech připojení (viz add_link_options a target_link_options)."
	},
	"CMAKE_<LANG>_LINK_EXECUTABLE": {
		"name": "CMAKE_<LANG>_LINK_EXECUTABLE",
		"description": "Proměnná pravidla pro propojení spustitelného souboru"
	},
	"CMAKE_<LANG>_LINK_GROUP_USING_<FEATURE>": {
		"name": "CMAKE_<LANG>_LINK_GROUP_USING_<FEATURE>",
		"description": "Tato proměnná definuje způsob propojení skupiny knihoven pro zadanou <FEATURE>, pokud je použit výraz generátoru LINK_GROUP a jazyk propojení pro cíl je <LANG>. Aby tato proměnná měla nějaký účinek, musí být přidružená proměnná CMAKE_<LANG>_LINK_GROUP_USING_<FEATURE>_SUPPORTED nastavena na true."
	},
	"CMAKE_<LANG>_LINK_GROUP_USING_<FEATURE>_SUPPORTED": {
		"name": "CMAKE_<LANG>_LINK_GROUP_USING_<FEATURE>_SUPPORTED",
		"description": "Tato proměnná určuje, zda je <FEATURE> podporována pro jazyk odkazu <LANG>. Pokud je tato proměnná true, pak musí být <FEATURE> definována pomocí CMAKE_<LANG>_LINK_GROUP_USING_ a obecnější proměnné CMAKE_LINK_GROUP_USING_<FEATURE>_SUPPORTED a CMAKE_LINK_GROUP_USING_ se nepoužívají."
	},
	"CMAKE_<LANG>_LINK_LIBRARY_<FEATURE>_ATTRIBUTES": {
		"name": "CMAKE_<LANG>_LINK_LIBRARY_<FEATURE>_ATTRIBUTES",
		"description": "Tato proměnná definuje sémantiku zadané knihovny odkazů <FEATURE> při propojování s jazykem odkazu <LANG>. Má přednost před CMAKE_LINK_LIBRARY_<FEATURE>_ATTRIBUTES, pokud je proměnná definována také pro stejnou knihovnu odkazů <FEATURE>, ale jinak má podobný účinek. Další podrobnosti viz CMAKE_LINK_LIBRARY_<FEATURE>_ATTRIBUTES."
	},
	"CMAKE_<LANG>_LINK_LIBRARY_FILE_FLAG": {
		"name": "CMAKE_<LANG>_LINK_LIBRARY_FILE_FLAG",
		"description": "Příznak závislý na jazyku, který se má použít pro připojení knihovny zadané pomocí cesty k jejímu souboru"
	},
	"CMAKE_<LANG>_LINK_LIBRARY_FLAG": {
		"name": "CMAKE_<LANG>_LINK_LIBRARY_FLAG",
		"description": "Příznak, který se má použít pro připojení knihovny do sdílené knihovny nebo spustitelného souboru"
	},
	"CMAKE_<LANG>_LINK_LIBRARY_SUFFIX": {
		"name": "CMAKE_<LANG>_LINK_LIBRARY_SUFFIX",
		"description": "Přípona závislá na jazyku pro knihovny, se kterými se propojujete"
	},
	"CMAKE_<LANG>_LINK_LIBRARY_USING_<FEATURE>": {
		"name": "CMAKE_<LANG>_LINK_LIBRARY_USING_<FEATURE>",
		"description": "Tato proměnná definuje způsob propojení knihovny nebo architektury pro zadanou <FEATURE>, pokud je použit výraz generátoru LINK_LIBRARY a jazyk propojení pro cíl je <LANG>. Aby tato proměnná měla nějaký účinek, musí být přidružená proměnná CMAKE_<LANG>_LINK_LIBRARY_USING_<FEATURE>_SUPPORTED nastavena na true."
	},
	"CMAKE_<LANG>_LINK_LIBRARY_USING_<FEATURE>_SUPPORTED": {
		"name": "CMAKE_<LANG>_LINK_LIBRARY_USING_<FEATURE>_SUPPORTED",
		"description": "Nastavte na true, pokud je <FEATURE> definovaný proměnnou CMAKE_<LANG>_LINK_LIBRARY_USING_ podporovaný pro jazyk linkeru <LANG>."
	},
	"CMAKE_<LANG>_LINK_WHAT_YOU_USE_FLAG": {
		"name": "CMAKE_<LANG>_LINK_WHAT_YOU_USE_FLAG",
		"description": "Příznak linkeru, který se má použít ke konfiguraci linkeru tak, aby se na cíl napojily všechny knihovny zadané na příkazovém řádku."
	},
	"CMAKE_<LANG>_OUTPUT_EXTENSION": {
		"name": "CMAKE_<LANG>_OUTPUT_EXTENSION",
		"description": "Rozšíření pro výstup kompilace pro jeden soubor"
	},
	"CMAKE_<LANG>_PLATFORM_ID": {
		"name": "CMAKE_<LANG>_PLATFORM_ID",
		"description": "Interní proměnná, která se může změnit"
	},
	"CMAKE_<LANG>_SIMULATE_ID": {
		"name": "CMAKE_<LANG>_SIMULATE_ID",
		"description": "Identifikační řetězec simulovaného kompilátoru"
	},
	"CMAKE_<LANG>_SIMULATE_VERSION": {
		"name": "CMAKE_<LANG>_SIMULATE_VERSION",
		"description": "Řetězec verze simulovaného kompilátoru"
	},
	"CMAKE_<LANG>_SIZEOF_DATA_PTR": {
		"name": "CMAKE_<LANG>_SIZEOF_DATA_PTR",
		"description": "Velikost typů ukazatelů na data pro jazyk <LANG>"
	},
	"CMAKE_<LANG>_SOURCE_FILE_EXTENSIONS": {
		"name": "CMAKE_<LANG>_SOURCE_FILE_EXTENSIONS",
		"description": "Rozšíření zdrojových souborů pro daný jazyk"
	},
	"CMAKE_<LANG>_STANDARD": {
		"name": "CMAKE_<LANG>_STANDARD",
		"description": "Varianty:"
	},
	"CMAKE_<LANG>_STANDARD_DEFAULT": {
		"name": "CMAKE_<LANG>_STANDARD_DEFAULT",
		"description": "Výchozí standard kompilátoru pro jazyk <LANG>. Pokud kompilátor nevyužívá princip úrovní standardu, je hodnota prázdná."
	},
	"CMAKE_<LANG>_STANDARD_INCLUDE_DIRECTORIES": {
		"name": "CMAKE_<LANG>_STANDARD_INCLUDE_DIRECTORIES",
		"description": "Adresáře souborů k zahrnutí, které se mají má použít pro každý zdrojový soubor kompilovaný pomocí kompilátoru <LANG>. Toto nastavení je určeno pro specifikaci adresářů systémových souborů k zahrnutí, kterou vyžaduje jazyk pro aktuální platformu. Tyto adresáře se zobrazí vždy na konci cesty zahrnutí, která se předává do kompilátoru."
	},
	"CMAKE_<LANG>_STANDARD_LATEST": {
		"name": "CMAKE_<LANG>_STANDARD_LATEST",
		"description": "Tato proměnná představuje minimální verzi mezi nejnovější verzí standardu pro jazyk <LANG>, kterou podporuje aktuální kompilátor, a nejnovější verzí, kterou podporuje CMake. Její hodnota bude nastavena na jednu z podporovaných hodnot příslušné cílové vlastnosti <LANG>_STANDARD; seznam podporovaných jazyků najdete v dokumentaci k této vlastnosti."
	},
	"CMAKE_<LANG>_STANDARD_LIBRARIES": {
		"name": "CMAKE_<LANG>_STANDARD_LIBRARIES",
		"description": "Knihovny připojené ke každému spustitelnému souboru a připojená sdílená knihovna pro jazyk <LANG>. Toto nastavení je určeno pro specifikaci systémových knihoven, kterou vyžaduje jazyk pro aktuální platformu."
	},
	"CMAKE_<LANG>_STANDARD_REQUIRED": {
		"name": "CMAKE_<LANG>_STANDARD_REQUIRED",
		"description": "Varianty:"
	},
	"CMAKE_<LANG>_USING_LINKER_MODE": {
		"name": "CMAKE_<LANG>_USING_LINKER_MODE",
		"description": "Určuje, jak má být interpretována hodnota proměnné CMAKE_<LANG>_USING_LINKER_. Podporované hodnoty režimu linkeru jsou:"
	},
	"CMAKE_<LANG>_USING_LINKER_<TYPE>": {
		"name": "CMAKE_<LANG>_USING_LINKER_<TYPE>",
		"description": "Tato proměnná určuje způsob zadání linkeru <TYPE> pro krok propojení, který je řízen proměnnou CMAKE_LINKER_TYPE nebo vlastností cíle LINKER_TYPE. V závislosti na hodnotě proměnné CMAKE_<LANG>_USING_LINKER_MODE může proměnná CMAKE_<LANG>_USING_LINKER_<TYPE> obsahovat příznaky kompilátoru pro krok propojení nebo příznaky, které mají být předány přímo nástroji linker."
	},
	"CMAKE_<LANG>_VISIBILITY_PRESET": {
		"name": "CMAKE_<LANG>_VISIBILITY_PRESET",
		"description": "Výchozí hodnota cílové vlastnosti <LANG>_VISIBILITY_PRESET při vytváření cíle"
	},
	"CMAKE_LIBRARY_ARCHITECTURE": {
		"name": "CMAKE_LIBRARY_ARCHITECTURE",
		"description": "Název adresáře knihovny cílové architektury, pokud byl zjištěn"
	},
	"CMAKE_LIBRARY_ARCHITECTURE_REGEX": {
		"name": "CMAKE_LIBRARY_ARCHITECTURE_REGEX",
		"description": "Regulární výraz odpovídající možný názvům adresářů knihoven cílové architektury"
	},
	"CMAKE_LIBRARY_OUTPUT_DIRECTORY": {
		"name": "CMAKE_LIBRARY_OUTPUT_DIRECTORY",
		"description": "Umístění pro všechny soubory s cílem LIBRARY při sestavení"
	},
	"CMAKE_LIBRARY_OUTPUT_DIRECTORY_<CONFIG>": {
		"name": "CMAKE_LIBRARY_OUTPUT_DIRECTORY_<CONFIG>",
		"description": "Umístění pro všechny soubory s cílem LIBRARY při sestavení pro určitou konfiguraci"
	},
	"CMAKE_LIBRARY_PATH": {
		"name": "CMAKE_LIBRARY_PATH",
		"description": "Seznam adresářů oddělených středníky, který určuje cestu hledání pro příkaz find_library. Ve výchozím nastavení je seznam prázdný, je určen k nastavení podle projektu."
	},
	"CMAKE_LIBRARY_PATH_FLAG": {
		"name": "CMAKE_LIBRARY_PATH_FLAG",
		"description": "Příznak, který se má použít k přidání cesty pro hledání knihovny do kompilátoru"
	},
	"CMAKE_LINKER_TYPE": {
		"name": "CMAKE_LINKER_TYPE",
		"description": "Určete, který linker se použije pro krok propojení."
	},
	"CMAKE_LINK_DEF_FILE_FLAG": {
		"name": "CMAKE_LINK_DEF_FILE_FLAG",
		"description": "Příznak linkeru, který se má použít pro určení souboru .def pro vytvoření knihovny dll"
	},
	"CMAKE_LINK_DEPENDS_NO_SHARED": {
		"name": "CMAKE_LINK_DEPENDS_NO_SHARED",
		"description": "Určuje, jestli se u souborů sdílených knihoven mají přeskakovat závislosti odkazů."
	},
	"CMAKE_LINK_DEPENDS_USE_LINKER": {
		"name": "CMAKE_LINK_DEPENDS_USE_LINKER",
		"description": "Pro generátory Makefile a Ninja se teď závislosti propojení v případě výběru nástrojů pro propojování generují samotným nástrojem pro propojování. Definováním této proměnné s hodnotou FALSE můžete tuto funkci deaktivovat."
	},
	"CMAKE_LINK_DIRECTORIES_BEFORE": {
		"name": "CMAKE_LINK_DIRECTORIES_BEFORE",
		"description": "Určuje, jestli se adresáře v link_directories mají ve výchozím nastavení připojit nebo předřadit."
	},
	"CMAKE_LINK_GROUP_USING_<FEATURE>": {
		"name": "CMAKE_LINK_GROUP_USING_<FEATURE>",
		"description": "Tato proměnná definuje způsob propojení skupiny knihoven pro zadanou <FEATURE>, pokud je použit generátorový výraz LINK_GROUP. Aby se tato proměnná projevila, musí být splněny obě následující podmínky:"
	},
	"CMAKE_LINK_GROUP_USING_<FEATURE>_SUPPORTED": {
		"name": "CMAKE_LINK_GROUP_USING_<FEATURE>_SUPPORTED",
		"description": "Tato proměnná určuje, zda je <FEATURE> podporována bez ohledu na jazyk odkazu. Pokud je tato proměnná true, pak musí být <FEATURE> definována pomocí CMAKE_LINK_GROUP_USING_."
	},
	"CMAKE_LINK_INTERFACE_LIBRARIES": {
		"name": "CMAKE_LINK_INTERFACE_LIBRARIES",
		"description": "Výchozí hodnota LINK_INTERFACE_LIBRARIES pro cíle"
	},
	"CMAKE_LINK_LIBRARIES_ONLY_TARGETS": {
		"name": "CMAKE_LINK_LIBRARIES_ONLY_TARGETS",
		"description": "Tuto proměnnou nastavte, pokud chcete inicializovat vlastnost LINK_LIBRARIES_ONLY_TARGETS neimportovaných cílů při jejich vytvoření. Nastavení na true umožňuje další kontrolu, že všechny položky pojmenované podle target_link_libraries, které mohou být cílovými názvy, jsou ve skutečnosti názvy existujících cílů. Podrobnosti najdete v dokumentaci k cílové vlastnosti."
	},
	"CMAKE_LINK_LIBRARY_<FEATURE>_ATTRIBUTES": {
		"name": "CMAKE_LINK_LIBRARY_<FEATURE>_ATTRIBUTES",
		"description": "Tato proměnná definuje chování zadané knihovny odkazů <FEATURE>. Určuje, jak <FEATURE> interaguje s jinými funkcemi, kdy se má <FEATURE> použít, a aspekty způsobu zpracování <FEATURE>, když CMake sestaví konečný příkazový řádek linkeru (např. odstranění duplicit)."
	},
	"CMAKE_LINK_LIBRARY_FILE_FLAG": {
		"name": "CMAKE_LINK_LIBRARY_FILE_FLAG",
		"description": "Příznak, který se má použít pro připojení knihovny zadané pomocí cesty k jejímu souboru"
	},
	"CMAKE_LINK_LIBRARY_FLAG": {
		"name": "CMAKE_LINK_LIBRARY_FLAG",
		"description": "Příznak, který se má použít pro připojení knihovny ke spustitelnému souboru"
	},
	"CMAKE_LINK_LIBRARY_SUFFIX": {
		"name": "CMAKE_LINK_LIBRARY_SUFFIX",
		"description": "Přípona pro knihovny, se kterými se propojujete"
	},
	"CMAKE_LINK_LIBRARY_USING_<FEATURE>": {
		"name": "CMAKE_LINK_LIBRARY_USING_<FEATURE>",
		"description": "Tato proměnná definuje způsob propojení knihovny nebo architektury pro zadanou <FEATURE>, pokud je použit výraz generátoru LINK_LIBRARY. Aby se tato proměnná projevila, musí být splněny obě následující podmínky:"
	},
	"CMAKE_LINK_LIBRARY_USING_<FEATURE>_SUPPORTED": {
		"name": "CMAKE_LINK_LIBRARY_USING_<FEATURE>_SUPPORTED",
		"description": "Nastaveno na TRUE, pokud je <FEATURE>, definovaná proměnnou CMAKE_LINK_LIBRARY_USING_, podporována bez ohledu na jazyk linkeru."
	},
	"CMAKE_LINK_SEARCH_END_STATIC": {
		"name": "CMAKE_LINK_SEARCH_END_STATIC",
		"description": "Zakončete propojovací řadu tak, aby se používaly statické systémové knihovny."
	},
	"CMAKE_LINK_SEARCH_START_STATIC": {
		"name": "CMAKE_LINK_SEARCH_START_STATIC",
		"description": "Předpokládejte, že linker ve výchozím nastavení hledá statické knihovny."
	},
	"CMAKE_LINK_WHAT_YOU_USE": {
		"name": "CMAKE_LINK_WHAT_YOU_USE",
		"description": "Výchozí hodnota cílové vlastnosti LINK_WHAT_YOU_USE. Tato proměnná slouží k inicializaci této vlastnosti u každého cíle v době, kdy se vytváří."
	},
	"CMAKE_LINK_WHAT_YOU_USE_CHECK": {
		"name": "CMAKE_LINK_WHAT_YOU_USE_CHECK",
		"description": "Definuje příkaz spuštěný po kroku propojování, kterým se zkontroluje využití knihoven. Tato kontrola je aktuálně definována jen na platformách ELF s hodnotou ldd -u -r."
	},
	"CMAKE_MACOSX_BUNDLE": {
		"name": "CMAKE_MACOSX_BUNDLE",
		"description": "Výchozí hodnota MACOSX_BUNDLE pro cíle"
	},
	"CMAKE_MACOSX_RPATH": {
		"name": "CMAKE_MACOSX_RPATH",
		"description": "Určuje, jestli se v systémech macOS a iOS mají používat cesty rpath."
	},
	"CMAKE_MAJOR_VERSION": {
		"name": "CMAKE_MAJOR_VERSION",
		"description": "První komponenta čísla verze v proměnné CMAKE_VERSION"
	},
	"CMAKE_MAKE_PROGRAM": {
		"name": "CMAKE_MAKE_PROGRAM",
		"description": "Nástroj, který může spouštět nativní systém sestavení. Hodnotou může být úplná cesta ke spustitelnému souboru, nebo jenom název nástroje, pokud se očekává, že bude v cestě PATH."
	},
	"CMAKE_MAP_IMPORTED_CONFIG_<CONFIG>": {
		"name": "CMAKE_MAP_IMPORTED_CONFIG_<CONFIG>",
		"description": "Výchozí hodnota MAP_IMPORTED_CONFIG_ pro cíle"
	},
	"CMAKE_MATCH_COUNT": {
		"name": "CMAKE_MATCH_COUNT",
		"description": "Počet shod s posledním regulárním výrazem"
	},
	"CMAKE_MATCH_<n>": {
		"name": "CMAKE_MATCH_<n>",
		"description": "Skupina zachycení <n> odpovídá poslednímu regulárnímu výrazu pro skupiny 0 až 9. Skupina 0 představuje úplnou shodu. Skupiny 1 až 9 jsou dílčí výrazy zachycené syntaxí ()."
	},
	"CMAKE_MAXIMUM_RECURSION_DEPTH": {
		"name": "CMAKE_MAXIMUM_RECURSION_DEPTH",
		"description": "Maximální hloubka rekurze pro skripty CMake. Má se nastavovat v příkazovém řádku s proměnnou -DCMAKE_MAXIMUM_RECURSION_DEPTH=<x> nebo v rámci souboru CMakeLists.txt pomocí projektů, které vyžadují velkou hloubku rekurze. Projekty, které nastavují tuto proměnnou, by měly uživateli poskytnout způsob, jak ji přepsat. Například:"
	},
	"CMAKE_MESSAGE_CONTEXT": {
		"name": "CMAKE_MESSAGE_CONTEXT",
		"description": "Pokud to povolí parametr příkazového řádku cmake --log-context nebo proměnná CMAKE_MESSAGE_CONTEXT_SHOW, převede příkaz zprávy seznam CMAKE_MESSAGE_CONTEXT na řetězec oddělený tečkami ohraničenými hranatými závorkami a předepnou ho na každý řádek pro zprávy úrovně protokolu NOTICE a nižší."
	},
	"CMAKE_MESSAGE_CONTEXT_SHOW": {
		"name": "CMAKE_MESSAGE_CONTEXT_SHOW",
		"description": "Nastavení této proměnné na true umožňuje zobrazení kontextu s každým řádkem protokolovaným příkazem message (postup určení samotného kontextu najdete v informacích k proměnné CMAKE_MESSAGE_CONTEXT)."
	},
	"CMAKE_MESSAGE_INDENT": {
		"name": "CMAKE_MESSAGE_INDENT",
		"description": "Příkaz message spojuje řetězce z tohoto seznamu a pro úrovně protokolů NOTICE a níže, výsledný řetězec předřadí na každý řádek zprávy."
	},
	"CMAKE_MESSAGE_LOG_LEVEL": {
		"name": "CMAKE_MESSAGE_LOG_LEVEL",
		"description": "Při nastavení tato proměnná určuje úroveň protokolování používanou příkazem zprávy. Platné hodnoty jsou stejné jako pro parametr příkazového řádku --log-level <cmake --log-level> programu cmake. Pokud je tato proměnná nastavená a parametr --log-level <cmake --log-level> je zadána možnost příkazového řádku, má přednost možnost příkazového řádku."
	},
	"CMAKE_MFC_FLAG": {
		"name": "CMAKE_MFC_FLAG",
		"description": "Použijte knihovnu MFC pro spustitelný soubor nebo knihovnu DLL."
	},
	"CMAKE_MINIMUM_REQUIRED_VERSION": {
		"name": "CMAKE_MINIMUM_REQUIRED_VERSION",
		"description": "Verze <min> CMake předaná nejnovějšímu volání příkazu cmake_minimum_required v aktuálním oboru proměnných nebo libovolném nadřazeném oboru proměnných."
	},
	"CMAKE_MINOR_VERSION": {
		"name": "CMAKE_MINOR_VERSION",
		"description": "Druhá komponenta čísla verze v proměnné CMAKE_VERSION"
	},
	"CMAKE_MODULE_LINKER_FLAGS": {
		"name": "CMAKE_MODULE_LINKER_FLAGS",
		"description": "Příznaky linkeru, které se mají použít pro vytvoření modulů"
	},
	"CMAKE_MODULE_LINKER_FLAGS_<CONFIG>": {
		"name": "CMAKE_MODULE_LINKER_FLAGS_<CONFIG>",
		"description": "Příznaky, které se mají použít při připojování modulu"
	},
	"CMAKE_MODULE_LINKER_FLAGS_<CONFIG>_INIT": {
		"name": "CMAKE_MODULE_LINKER_FLAGS_<CONFIG>_INIT",
		"description": "Hodnota používaná k inicializaci položky mezipaměti CMAKE_MODULE_LINKER_FLAGS_ při první konfiguraci stromu sestavení. Tuto proměnnou by měl nastavit soubor sady nástrojů. CMake může k této hodnotě předřadit nebo připojit obsah na základě prostředí a cílové platformy."
	},
	"CMAKE_MODULE_LINKER_FLAGS_INIT": {
		"name": "CMAKE_MODULE_LINKER_FLAGS_INIT",
		"description": "Hodnota používaná k inicializaci položky mezipaměti CMAKE_MODULE_LINKER_FLAGS při první konfiguraci stromu sestavení. Tuto proměnnou by měl nastavit soubor sady nástrojů. CMake může k této hodnotě předřadit nebo připojit obsah na základě prostředí a cílové platformy."
	},
	"CMAKE_MODULE_PATH": {
		"name": "CMAKE_MODULE_PATH",
		"description": "Seznam adresářů oddělených středníky a reprezentovaných dopřednými lomítky, který určuje cestu pro hledání modulů CMake, které se mají načíst pomocí příkazů include nebo find_package, než se provede kontrola výchozích modulů, jež jsou součástí CMake. Ve výchozím nastavení je seznam prázdný, je určen k nastavení podle projektu."
	},
	"CMAKE_MSVCIDE_RUN_PATH": {
		"name": "CMAKE_MSVCIDE_RUN_PATH",
		"description": "Další umístění PATH, která by se měla použít při provádění příkazu add_custom_command nebo add_custom_target, když se používá generátor pro Visual Studio 12 2013 (nebo vyšší). Umožňuje spouštění příkazů a používání knihoven dll, o kterých prostředí IDE nemá žádné informace."
	},
	"CMAKE_MSVC_DEBUG_INFORMATION_FORMAT": {
		"name": "CMAKE_MSVC_DEBUG_INFORMATION_FORMAT",
		"description": "Vyberte formát informací o ladění MSVC, který cílí na rozhraní MSVC ABI. Tato proměnná slouží k inicializaci vlastnosti MSVC_DEBUG_INFORMATION_FORMAT u všech cílů při jejich vytváření. Je také rozšířen voláním příkazu try_compile do testovacího projektu."
	},
	"CMAKE_MSVC_RUNTIME_LIBRARY": {
		"name": "CMAKE_MSVC_RUNTIME_LIBRARY",
		"description": "Vyberte knihovnu runtime MSVC, kterou budou používat kompilátory, které cílí na MSVC ABI. Tato proměnná slouží k inicializaci vlastnosti MSVC_RUNTIME_LIBRARY u všech cílů v době, kdy se vytvářejí. Je také šířena voláními příkazu try_compile do projektu testu."
	},
	"CMAKE_NETRC": {
		"name": "CMAKE_NETRC",
		"description": "Tato proměnná se používá k inicializaci možnosti NETRC pro soubor a souborové příkazy. Další informace viz tyto příkazy."
	},
	"CMAKE_NETRC_FILE": {
		"name": "CMAKE_NETRC_FILE",
		"description": "Tato proměnná se používá k inicializaci možnosti NETRC_FILE pro soubor a souborové příkazy. Další informace viz tyto příkazy."
	},
	"CMAKE_NINJA_OUTPUT_PATH_PREFIX": {
		"name": "CMAKE_NINJA_OUTPUT_PATH_PREFIX",
		"description": "Řekněte generátorům Ninja, aby do každé výstupní cesty v build.ninja přidaly předponu. Pokud chybí, připojí se k předponě koncové lomítko."
	},
	"CMAKE_NOT_USING_CONFIG_FLAGS": {
		"name": "CMAKE_NOT_USING_CONFIG_FLAGS",
		"description": "V případě hodnoty true přeskočit příznaky _BUILD_TYPE"
	},
	"CMAKE_NO_BUILTIN_CHRPATH": {
		"name": "CMAKE_NO_BUILTIN_CHRPATH",
		"description": "Při instalaci neopravovat cesty pro vyhledávání knihoven modulů runtime pomocí integrovaného binárního editoru"
	},
	"CMAKE_NO_SYSTEM_FROM_IMPORTED": {
		"name": "CMAKE_NO_SYSTEM_FROM_IMPORTED",
		"description": "Výchozí hodnota NO_SYSTEM_FROM_IMPORTED pro cíle"
	},
	"CMAKE_OBJCXX_EXTENSIONS": {
		"name": "CMAKE_OBJCXX_EXTENSIONS",
		"description": "Výchozí hodnota pro cílovou vlastnost OBJCXX_EXTENSIONS, pokud je nastavena při vytvoření cíle"
	},
	"CMAKE_OBJCXX_STANDARD": {
		"name": "CMAKE_OBJCXX_STANDARD",
		"description": "Výchozí hodnota pro cílovou vlastnost OBJCXX_STANDARD, pokud je nastavena při vytvoření cíle"
	},
	"CMAKE_OBJCXX_STANDARD_REQUIRED": {
		"name": "CMAKE_OBJCXX_STANDARD_REQUIRED",
		"description": "Výchozí hodnota pro cílovou vlastnost OBJCXX_STANDARD_REQUIRED, pokud je nastavena při vytvoření cíle"
	},
	"CMAKE_OBJC_EXTENSIONS": {
		"name": "CMAKE_OBJC_EXTENSIONS",
		"description": "Výchozí hodnota pro cílovou vlastnost OBJC_EXTENSIONS, pokud je nastavena při vytvoření cíle"
	},
	"CMAKE_OBJC_STANDARD": {
		"name": "CMAKE_OBJC_STANDARD",
		"description": "Výchozí hodnota pro cílovou vlastnost OBJC_STANDARD, pokud je nastavena při vytvoření cíle"
	},
	"CMAKE_OBJC_STANDARD_REQUIRED": {
		"name": "CMAKE_OBJC_STANDARD_REQUIRED",
		"description": "Výchozí hodnota pro cílovou vlastnost OBJC_STANDARD_REQUIRED, pokud je nastavena při vytvoření cíle"
	},
	"CMAKE_OBJECT_PATH_MAX": {
		"name": "CMAKE_OBJECT_PATH_MAX",
		"description": "Maximální délka úplné cesty k souboru objektu, kterou povolují nativní nástroje sestavení"
	},
	"CMAKE_OPTIMIZE_DEPENDENCIES": {
		"name": "CMAKE_OPTIMIZE_DEPENDENCIES",
		"description": "Inicializuje cílovou vlastnost OPTIMIZE_DEPENDENCIES."
	},
	"CMAKE_OSX_ARCHITECTURES": {
		"name": "CMAKE_OSX_ARCHITECTURES",
		"description": "Specifické cílové architektury pro macOS a iOS"
	},
	"CMAKE_OSX_DEPLOYMENT_TARGET": {
		"name": "CMAKE_OSX_DEPLOYMENT_TARGET",
		"description": "Zadejte minimální verzi cílové platformy (např. macOS nebo iOS), na kterou mají být cílové binární soubory nasazeny. CMake použije hodnotu této proměnné pro příznak -mmacosx-version-min nebo jeho odpovídající ekvivalenty na cílové platformě. U starších verzí Xcode, se kterými se dodává více sad SDK pro macOS, pomáhá tato proměnná také zvolit sadu SDK v případě, že není nastaveno CMAKE_OSX_SYSROOT."
	},
	"CMAKE_OSX_SYSROOT": {
		"name": "CMAKE_OSX_SYSROOT",
		"description": "Zadejte umístění nebo název sady SDK pro platformu macOS, která se má použít. CMake použije tuto hodnotu k výpočtu hodnoty příznaku -isysroot nebo jeho ekvivalentu a k tomu, aby příkazům find_* usnadnil hledání umístění souborů v sadě SDK."
	},
	"CMAKE_PARENT_LIST_FILE": {
		"name": "CMAKE_PARENT_LIST_FILE",
		"description": "Úplná cesta k souboru CMake, který zahrnoval aktuální soubor"
	},
	"CMAKE_PATCH_VERSION": {
		"name": "CMAKE_PATCH_VERSION",
		"description": "Třetí komponenta čísla verze v proměnné CMAKE_VERSION"
	},
	"CMAKE_PCH_INSTANTIATE_TEMPLATES": {
		"name": "CMAKE_PCH_INSTANTIATE_TEMPLATES",
		"description": "Tato proměnná slouží k inicializaci vlastnosti PCH_INSTANTIATE_TEMPLATES cílů při jejich vytváření."
	},
	"CMAKE_PCH_WARN_INVALID": {
		"name": "CMAKE_PCH_WARN_INVALID",
		"description": "Tato proměnná se používá k inicializaci vlastnosti PCH_WARN_INVALID cílů při jejich vytváření."
	},
	"CMAKE_PDB_OUTPUT_DIRECTORY": {
		"name": "CMAKE_PDB_OUTPUT_DIRECTORY",
		"description": "Výstupní adresář pro soubory .pdb se symbolem ladění MS, které vygeneroval linker pro cíle spustitelných souborů a sdílených knihoven"
	},
	"CMAKE_PDB_OUTPUT_DIRECTORY_<CONFIG>": {
		"name": "CMAKE_PDB_OUTPUT_DIRECTORY_<CONFIG>",
		"description": "Výstupní adresář pro soubory .pdb se symbolem ladění MS podle konfigurací, které vygeneroval linker pro cíle spustitelných souborů a sdílených knihoven"
	},
	"CMAKE_PLATFORM_NO_VERSIONED_SONAME": {
		"name": "CMAKE_PLATFORM_NO_VERSIONED_SONAME",
		"description": "Tato proměnná slouží ke globálnímu řízení toho, jestli se mají pro sdílené knihovny používat cílové vlastnosti VERSION a SOVERSION. Pokud je tato hodnota nastavená na true, přidávání informací o verzi do každého cíle sdílené knihovny je zakázané."
	},
	"CMAKE_POLICY_DEFAULT_CMP<NNNN>": {
		"name": "CMAKE_POLICY_DEFAULT_CMP<NNNN>",
		"description": "Výchozí hodnota pro zásady CMake CMP<NNNN>, pokud se jinak ponechává nenastavená"
	},
	"CMAKE_POLICY_WARNING_CMP<NNNN>": {
		"name": "CMAKE_POLICY_WARNING_CMP<NNNN>",
		"description": "Umožňuje explicitně povolit nebo zakázat upozornění, když se CMake Policy CMP<NNNN> nenastaví explicitně přes cmake_policy nebo implicitně přes cmake_minimum_required. Toto má význam jen pro zásady, které negenerují upozornění ve výchozím nastavení:"
	},
	"CMAKE_POSITION_INDEPENDENT_CODE": {
		"name": "CMAKE_POSITION_INDEPENDENT_CODE",
		"description": "Výchozí hodnota POSITION_INDEPENDENT_CODE pro cíle"
	},
	"CMAKE_PREFIX_PATH": {
		"name": "CMAKE_PREFIX_PATH",
		"description": "Středníky oddělený seznam adresářů určující prefixy instalace, ve kterých mají hledat příkazy find_package, find_program, find_library, find_file a find_path. Každý příkaz přidá příslušné podadresáře (například bin, lib nebo include), které má uvedené ve své dokumentaci."
	},
	"CMAKE_PROGRAM_PATH": {
		"name": "CMAKE_PROGRAM_PATH",
		"description": "Seznam adresářů oddělených středníky, který určuje cestu hledání pro příkaz find_program. Ve výchozím nastavení je seznam prázdný, je určen k nastavení podle projektu."
	},
	"CMAKE_PROJECT_DESCRIPTION": {
		"name": "CMAKE_PROJECT_DESCRIPTION",
		"description": "Popis projektu nejvyšší úrovně"
	},
	"CMAKE_PROJECT_HOMEPAGE_URL": {
		"name": "CMAKE_PROJECT_HOMEPAGE_URL",
		"description": "Adresa URL domovské stránky projektu nejvyšší úrovně"
	},
	"CMAKE_PROJECT_INCLUDE": {
		"name": "CMAKE_PROJECT_INCLUDE",
		"description": "Soubor jazyka CMake, který má být zahrnut jako poslední krok všech volání příkazů projektu. Je určen pro vkládání vlastního kódu do sestavení projektu bez úpravy jeho zdroje. Podrobnější informace o souborech potenciálně zahrnutých během volání projektu naleznete v části Vkládání kódu."
	},
	"CMAKE_PROJECT_INCLUDE_BEFORE": {
		"name": "CMAKE_PROJECT_INCLUDE_BEFORE",
		"description": "Soubor jazyka CMake, který má být zahrnut jako první krok všech volání příkazů projektu. Je určen pro vkládání vlastního kódu do sestavení projektu bez úpravy jeho zdroje. Podrobnější informace o souborech potenciálně zahrnutých během volání projektu naleznete v části Vkládání kódu."
	},
	"CMAKE_PROJECT_NAME": {
		"name": "CMAKE_PROJECT_NAME",
		"description": "Název projektu nejvyšší úrovně"
	},
	"CMAKE_PROJECT_<PROJECT-NAME>_INCLUDE": {
		"name": "CMAKE_PROJECT_<PROJECT-NAME>_INCLUDE",
		"description": "Soubor jazyka CMake, který má být zahrnut jako poslední krok všech volání příkazů projektu, které mají nastaven název projektu <PROJECT-NAME>. Je určen pro vkládání vlastního kódu do sestavení projektu bez úpravy jeho zdroje. Podrobnější informace o souborech potenciálně zahrnutých během volání projektu naleznete v části Vkládání kódu."
	},
	"CMAKE_PROJECT_<PROJECT-NAME>_INCLUDE_BEFORE": {
		"name": "CMAKE_PROJECT_<PROJECT-NAME>_INCLUDE_BEFORE",
		"description": "Soubor jazyka CMake, který má být zahrnut jako první krok všech volání příkazů projektu, které mají nastaven název projektu <PROJECT-NAME>. Je určen pro vkládání vlastního kódu do sestavení projektu bez úpravy jeho zdroje. Podrobnější informace o souborech potenciálně zahrnutých během volání projektu naleznete v části Vkládání kódu."
	},
	"CMAKE_PROJECT_TOP_LEVEL_INCLUDES": {
		"name": "CMAKE_PROJECT_TOP_LEVEL_INCLUDES",
		"description": "Seznam jazykových souborů CMake oddělených středníkem, které se mají zahrnout jako součást prvního volání projektu. Soubory budou zahrnuty ihned po načtení souboru s řetězcem nástrojů (pokud je zadán) a nastavení proměnných platformy, ale před povolením jakýchkoli jazyků. Proto nemusí být nastaveny proměnné specifické pro jednotlivé jazyky, včetně věcí jako CMAKE_<LANG>_COMPILER. Podrobnější informace o souborech potenciálně zahrnutých během volání projektu najdete v části Vkládání kódu."
	},
	"CMAKE_PROJECT_VERSION": {
		"name": "CMAKE_PROJECT_VERSION",
		"description": "Verze projektu nejvyšší úrovně"
	},
	"CMAKE_PROJECT_VERSION_MAJOR": {
		"name": "CMAKE_PROJECT_VERSION_MAJOR",
		"description": "Hlavní verze projektu nejvyšší úrovně"
	},
	"CMAKE_PROJECT_VERSION_MINOR": {
		"name": "CMAKE_PROJECT_VERSION_MINOR",
		"description": "Podverze projektu nejvyšší úrovně"
	},
	"CMAKE_PROJECT_VERSION_PATCH": {
		"name": "CMAKE_PROJECT_VERSION_PATCH",
		"description": "Verze opravy projektu nejvyšší úrovně"
	},
	"CMAKE_PROJECT_VERSION_TWEAK": {
		"name": "CMAKE_PROJECT_VERSION_TWEAK",
		"description": "Verze vylepšení projektu nejvyšší úrovně"
	},
	"CMAKE_RANLIB": {
		"name": "CMAKE_RANLIB",
		"description": "Název nástroj pro náhodné řazení pro statické knihovny"
	},
	"CMAKE_REQUIRE_FIND_PACKAGE_<PackageName>": {
		"name": "CMAKE_REQUIRE_FIND_PACKAGE_<PackageName>",
		"description": "Proměnná, která umožní nastavit, aby find_package volalo REQUIRED"
	},
	"CMAKE_ROOT": {
		"name": "CMAKE_ROOT",
		"description": "Instalační adresář pro spuštěný cmake"
	},
	"CMAKE_RULE_MESSAGES": {
		"name": "CMAKE_RULE_MESSAGES",
		"description": "Určete, jestli se má hlásit zpráva pro každé vytvářecí pravidlo."
	},
	"CMAKE_RUNTIME_OUTPUT_DIRECTORY": {
		"name": "CMAKE_RUNTIME_OUTPUT_DIRECTORY",
		"description": "Umístění pro všechny soubory s cílem RUNTIME při sestavení"
	},
	"CMAKE_RUNTIME_OUTPUT_DIRECTORY_<CONFIG>": {
		"name": "CMAKE_RUNTIME_OUTPUT_DIRECTORY_<CONFIG>",
		"description": "Umístění pro všechny soubory s cílem RUNTIME při sestavení pro určitou konfiguraci"
	},
	"CMAKE_SCRIPT_MODE_FILE": {
		"name": "CMAKE_SCRIPT_MODE_FILE",
		"description": "Úplná cesta k souboru skriptu cmake -P, který se právě zpracovává"
	},
	"CMAKE_SHARED_LIBRARY_ENABLE_EXPORTS": {
		"name": "CMAKE_SHARED_LIBRARY_ENABLE_EXPORTS",
		"description": "Určete, zda sdílená knihovna vygeneruje soubor importu."
	},
	"CMAKE_SHARED_LIBRARY_PREFIX": {
		"name": "CMAKE_SHARED_LIBRARY_PREFIX",
		"description": "Předpona pro sdílené knihovny, se kterými se propojujete"
	},
	"CMAKE_SHARED_LIBRARY_SUFFIX": {
		"name": "CMAKE_SHARED_LIBRARY_SUFFIX",
		"description": "Přípona pro sdílené knihovny, ke kterým nastavujete propojení"
	},
	"CMAKE_SHARED_LINKER_FLAGS": {
		"name": "CMAKE_SHARED_LINKER_FLAGS",
		"description": "Příznaky linkeru, které se mají použít pro vytvoření sdílených knihoven"
	},
	"CMAKE_SHARED_LINKER_FLAGS_<CONFIG>": {
		"name": "CMAKE_SHARED_LINKER_FLAGS_<CONFIG>",
		"description": "Příznaky, které se mají použít při připojování sdílené knihovny"
	},
	"CMAKE_SHARED_LINKER_FLAGS_<CONFIG>_INIT": {
		"name": "CMAKE_SHARED_LINKER_FLAGS_<CONFIG>_INIT",
		"description": "Hodnota používaná k inicializaci položky mezipaměti CMAKE_SHARED_LINKER_FLAGS_ při první konfiguraci stromu sestavení. Tuto proměnnou by měl nastavit soubor sady nástrojů. CMake může k této hodnotě předřadit nebo připojit obsah na základě prostředí a cílové platformy."
	},
	"CMAKE_SHARED_LINKER_FLAGS_INIT": {
		"name": "CMAKE_SHARED_LINKER_FLAGS_INIT",
		"description": "Hodnota používaná k inicializaci položky mezipaměti CMAKE_SHARED_LINKER_FLAGS při první konfiguraci stromu sestavení. Tuto proměnnou by měl nastavit soubor sady nástrojů. CMake může k této hodnotě předřadit nebo připojit obsah na základě prostředí a cílové platformy."
	},
	"CMAKE_SHARED_MODULE_PREFIX": {
		"name": "CMAKE_SHARED_MODULE_PREFIX",
		"description": "Předpona pro moduly, které lze načíst a se kterými se propojujete"
	},
	"CMAKE_SHARED_MODULE_SUFFIX": {
		"name": "CMAKE_SHARED_MODULE_SUFFIX",
		"description": "Přípona pro sdílené knihovny, ke kterým nastavujete propojení"
	},
	"CMAKE_SIZEOF_VOID_P": {
		"name": "CMAKE_SIZEOF_VOID_P",
		"description": "Velikost prázdného ukazatele"
	},
	"CMAKE_SKIP_BUILD_RPATH": {
		"name": "CMAKE_SKIP_BUILD_RPATH",
		"description": "Nezahrnovat cesty RPATH do stromu sestavení"
	},
	"CMAKE_SKIP_INSTALL_ALL_DEPENDENCY": {
		"name": "CMAKE_SKIP_INSTALL_ALL_DEPENDENCY",
		"description": "Nenastavovat závislost cíle instalace na všech cílích"
	},
	"CMAKE_SKIP_INSTALL_RPATH": {
		"name": "CMAKE_SKIP_INSTALL_RPATH",
		"description": "Nezahrnovat cesty RPATH do stromu instalace"
	},
	"CMAKE_SKIP_INSTALL_RULES": {
		"name": "CMAKE_SKIP_INSTALL_RULES",
		"description": "Určuje, jestli se má zakázat generování pravidel pro instalaci."
	},
	"CMAKE_SKIP_RPATH": {
		"name": "CMAKE_SKIP_RPATH",
		"description": "V případě hodnoty true nepřidávejte informace o cestě v režimu runtime."
	},
	"CMAKE_SKIP_TEST_ALL_DEPENDENCY": {
		"name": "CMAKE_SKIP_TEST_ALL_DEPENDENCY",
		"description": "Určete, jestli je cíl testu závislý na cíli all."
	},
	"CMAKE_SOURCE_DIR": {
		"name": "CMAKE_SOURCE_DIR",
		"description": "Cesta k nejvyšší úrovni zdrojového stromu"
	},
	"CMAKE_STAGING_PREFIX": {
		"name": "CMAKE_STAGING_PREFIX",
		"description": "Do této proměnné lze nastavit cestu instalace při křížové kompilaci. Může být užitečná, pokud cesta v CMAKE_SYSROOT je jen pro čtení, jinak by měla zůstat čistá."
	},
	"CMAKE_STATIC_LIBRARY_PREFIX": {
		"name": "CMAKE_STATIC_LIBRARY_PREFIX",
		"description": "Předpona pro statické knihovny, se kterými se propojujete"
	},
	"CMAKE_STATIC_LIBRARY_SUFFIX": {
		"name": "CMAKE_STATIC_LIBRARY_SUFFIX",
		"description": "Přípona pro statické knihovny, se kterými se propojujete"
	},
	"CMAKE_STATIC_LINKER_FLAGS": {
		"name": "CMAKE_STATIC_LINKER_FLAGS",
		"description": "Příznaky, které se mají použít k vytvoření statických knihoven. Tyto příznaky budou předány archivačnímu programu (archivátoru) při vytváření statické knihovny."
	},
	"CMAKE_STATIC_LINKER_FLAGS_<CONFIG>": {
		"name": "CMAKE_STATIC_LINKER_FLAGS_<CONFIG>",
		"description": "Příznaky, které se mají použít k vytvoření statických knihoven. Tyto příznaky budou předány archivačnímu programu (archivátoru) při vytváření statické knihovny v konfiguraci <CONFIG>."
	},
	"CMAKE_STATIC_LINKER_FLAGS_<CONFIG>_INIT": {
		"name": "CMAKE_STATIC_LINKER_FLAGS_<CONFIG>_INIT",
		"description": "Hodnota používaná k inicializaci položky mezipaměti CMAKE_STATIC_LINKER_FLAGS_ při první konfiguraci stromu sestavení. Tuto proměnnou by měl nastavit soubor sady nástrojů. CMake může k této hodnotě předřadit nebo připojit obsah na základě prostředí a cílové platformy."
	},
	"CMAKE_STATIC_LINKER_FLAGS_INIT": {
		"name": "CMAKE_STATIC_LINKER_FLAGS_INIT",
		"description": "Hodnota používaná k inicializaci položky mezipaměti CMAKE_STATIC_LINKER_FLAGS při první konfiguraci stromu sestavení. Tuto proměnnou by měl nastavit soubor sady nástrojů. CMake může k této hodnotě předřadit nebo připojit obsah na základě prostředí a cílové platformy."
	},
	"CMAKE_SUBLIME_TEXT_2_ENV_SETTINGS": {
		"name": "CMAKE_SUBLIME_TEXT_2_ENV_SETTINGS",
		"description": "Tato proměnná obsahuje seznam proměnných prostředí jako seznam tokenů se syntaxí var=hodnota."
	},
	"CMAKE_SUBLIME_TEXT_2_EXCLUDE_BUILD_TREE": {
		"name": "CMAKE_SUBLIME_TEXT_2_EXCLUDE_BUILD_TREE",
		"description": "Pokud se tato proměnná na konci nejvyšší úrovně souboru CMakeLists.txt vyhodnotí s hodnotou ON, zvláštní generátor Sublime Text 2 vyloučí strom sestavení ze .sublime-project, pokud se nachází ve zdrojovém stromu."
	},
	"CMAKE_SUPPRESS_REGENERATION": {
		"name": "CMAKE_SUPPRESS_REGENERATION",
		"description": "Pokud má CMAKE_SUPPRESS_REGENERATION hodnotu OFF, což je výchozí nastavení, pak CMake přidá zvláštní cíl, na kterém jsou všechny ostatní cíle závislé a který zkontroluje systém sestavení a volitelně znovu spustí CMake, aby se systém sestavení znovu vygeneroval, když se zdroj specifikace cíle změní."
	},
	"CMAKE_Swift_COMPILATION_MODE": {
		"name": "CMAKE_Swift_COMPILATION_MODE",
		"description": "Zadejte, jak Swift zkompiluje cíl. Tato proměnná slouží k inicializaci vlastnosti Swift_COMPILATION_MODE na cílech při jejich vytváření."
	},
	"CMAKE_Swift_LANGUAGE_VERSION": {
		"name": "CMAKE_Swift_LANGUAGE_VERSION",
		"description": "Nastavte tuto možnost na číslo jazykové verze Swift. Pokud není nastavená, bere se za platnou nejstarší starší verze, o které je známo, že je ve verzi Xcode hostitele:"
	},
	"CMAKE_Swift_MODULE_DIRECTORY": {
		"name": "CMAKE_Swift_MODULE_DIRECTORY",
		"description": "Adresář výstupu modulu pro Swift"
	},
	"CMAKE_Swift_NUM_THREADS": {
		"name": "CMAKE_Swift_NUM_THREADS",
		"description": "Počet vláken pro paralelní kompilaci pro cíle Swift"
	},
	"CMAKE_SYSROOT": {
		"name": "CMAKE_SYSROOT",
		"description": "Cesta k předání do kompilátoru v příznaku --sysroot"
	},
	"CMAKE_SYSROOT_COMPILE": {
		"name": "CMAKE_SYSROOT_COMPILE",
		"description": "Cesta k předání do kompilátoru v příznaku --sysroot při kompilaci zdrojových souborů. Je stejná jako CMAKE_SYSROOT, ale používá se jenom pro kompilaci zdrojů a ne k propojování."
	},
	"CMAKE_SYSROOT_LINK": {
		"name": "CMAKE_SYSROOT_LINK",
		"description": "Cesta k předání do kompilátoru v příznaku --sysroot při propojování. Je stejná jako CMAKE_SYSROOT, ale používá se jenom pro propojování a ne ke kompilaci zdrojů."
	},
	"CMAKE_SYSTEM": {
		"name": "CMAKE_SYSTEM",
		"description": "Složený název operačního systému, pro který se kompiluje CMake"
	},
	"CMAKE_SYSTEM_APPBUNDLE_PATH": {
		"name": "CMAKE_SYSTEM_APPBUNDLE_PATH",
		"description": "Cesta vyhledávání pro balíčky aplikací macOS, kterou používají příkazy find_program a find_package. Ve výchozím nastavení obsahuje standardní adresáře pro aktuální systém. Projekt by ji neměl upravovat, použijte pro tento účel CMAKE_APPBUNDLE_PATH."
	},
	"CMAKE_SYSTEM_FRAMEWORK_PATH": {
		"name": "CMAKE_SYSTEM_FRAMEWORK_PATH",
		"description": "Cesta vyhledávání pro architektury macOS, kterou používají příkazy find_library, find_package, find_path a find_file. Ve výchozím nastavení obsahuje standardní adresáře pro aktuální systém. Projekt by ji neměl upravovat, použijte pro tento účel CMAKE_FRAMEWORK_PATH."
	},
	"CMAKE_SYSTEM_IGNORE_PATH": {
		"name": "CMAKE_SYSTEM_IGNORE_PATH",
		"description": "Středníky oddělený seznam adresářů, které mají být ignorovány různými příkazy find...()."
	},
	"CMAKE_SYSTEM_IGNORE_PREFIX_PATH": {
		"name": "CMAKE_SYSTEM_IGNORE_PREFIX_PATH",
		"description": "Středníky oddělený seznam předpon vyhledávání, které mají být ignorovány příkazy find_program, find_library, find_file a find_path. Režim konfigurace příkazu find_package také ignoruje předpony (režim modulu není ovlivněný). Pokud místo toho chcete ignorovat konkrétní adresáře, podívejte se na CMAKE_IGNORE_NONPREFIX_VAR."
	},
	"CMAKE_SYSTEM_INCLUDE_PATH": {
		"name": "CMAKE_SYSTEM_INCLUDE_PATH",
		"description": "Středníky oddělený seznam adresářů určující cestu vyhledávání pro příkazy find_file a find_path. Ve výchozím nastavení obsahuje standardní adresáře pro aktuální systém. Projekt by ho neměl upravovat, použijte pro tento účel CMAKE_INCLUDE_PATH. Viz také proměnná CMAKE_SYSTEM_PREFIX_PATH."
	},
	"CMAKE_SYSTEM_LIBRARY_PATH": {
		"name": "CMAKE_SYSTEM_LIBRARY_PATH",
		"description": "Středníky oddělený seznam adresářů určující cestu vyhledávání pro příkaz find_library. Ve výchozím nastavení obsahuje standardní adresáře pro aktuální systém. Projekt by ho neměl upravovat, použijte pro tento účel CMAKE_LIBRARY_PATH. Viz také proměnná CMAKE_SYSTEM_PREFIX_PATH."
	},
	"CMAKE_SYSTEM_NAME": {
		"name": "CMAKE_SYSTEM_NAME",
		"description": "Název operačního systému, pro který se má sestavit CMake. Verzi operačního systému zjistíte z proměnné CMAKE_SYSTEM_VERSION."
	},
	"CMAKE_SYSTEM_PREFIX_PATH": {
		"name": "CMAKE_SYSTEM_PREFIX_PATH",
		"description": "Středníky oddělený seznam adresářů určující prefixy instalace, ve kterých mají hledat příkazy find_package, find_program, find_library, find_file a find_path. Každý příkaz přidá příslušné podadresáře (například bin, lib nebo include), které má uvedené ve své dokumentaci."
	},
	"CMAKE_SYSTEM_PROCESSOR": {
		"name": "CMAKE_SYSTEM_PROCESSOR",
		"description": "Když se neprovádí křížová kompilace, má tato proměnná stejnou hodnotu jako proměnná CMAKE_HOST_SYSTEM_PROCESSOR. V mnoha případech bude odpovídat cílové architektuře pro sestavení, ale není to zaručeno. (Například ve Windows může být hostitel AMD64 i v případě, že se používá kompilátor MSVC cl s 32bitovým cílem.)"
	},
	"CMAKE_SYSTEM_PROGRAM_PATH": {
		"name": "CMAKE_SYSTEM_PROGRAM_PATH",
		"description": "Středníky oddělený seznam adresářů určující cestu vyhledávání pro příkaz find_program. Ve výchozím nastavení obsahuje standardní adresáře pro aktuální systém. Projekt by ho neměl upravovat, použijte pro tento účel CMAKE_PROGRAM_PATH. Viz také proměnná CMAKE_SYSTEM_PREFIX_PATH."
	},
	"CMAKE_SYSTEM_VERSION": {
		"name": "CMAKE_SYSTEM_VERSION",
		"description": "Verze operačního systému, pro který se má sestavit CMake. Název operačního systému zjistíte z proměnné CMAKE_SYSTEM_NAME."
	},
	"CMAKE_TASKING_TOOLSET": {
		"name": "CMAKE_TASKING_TOOLSET",
		"description": "Vyberte sadu nástrojů Tasking, která poskytuje kompilátor."
	},
	"CMAKE_TEST_LAUNCHER": {
		"name": "CMAKE_TEST_LAUNCHER",
		"description": "Tato proměnná se používá k inicializaci vlastnosti cíle TEST_LAUNCHER u cílů spustitelných souborů při jejich vytváření. Používá se k určení spouštěče pro spouštění testů přidaných příkazem add_test, které spouštějí cíl spustitelného souboru."
	},
	"CMAKE_TLS_CAINFO": {
		"name": "CMAKE_TLS_CAINFO",
		"description": "Zadejte výchozí hodnotu pro možnosti TLS_CAINFO souborů a jejich příkazů. Ve výchozím nastavení není nastaveno."
	},
	"CMAKE_TLS_VERIFY": {
		"name": "CMAKE_TLS_VERIFY",
		"description": "Zadejte výchozí hodnotu souboru a možnosti TLS_VERIFY pro příkazy souboru. Pokud tato proměnná není nastavená, příkazy zkontrolují proměnnou prostředí CMAKE_TLS_VERIFY. Pokud není nastaveno ani jedno z toho, výchozí nastavení je Vypnuto."
	},
	"CMAKE_TLS_VERSION": {
		"name": "CMAKE_TLS_VERSION",
		"description": "Zadejte výchozí hodnotu souboru a možnosti TLS_VERSION pro příkazy souboru. Pokud tato proměnná není nastavená, příkazy zkontrolují proměnnou prostředí CMAKE_TLS_VERSION."
	},
	"CMAKE_TOOLCHAIN_FILE": {
		"name": "CMAKE_TOOLCHAIN_FILE",
		"description": "Cesta k souboru sady nástrojů dodanému do cmake"
	},
	"CMAKE_TRY_COMPILE_CONFIGURATION": {
		"name": "CMAKE_TRY_COMPILE_CONFIGURATION",
		"description": "Konfigurace sestavení, která se používá pro projekty try_compile a try_run"
	},
	"CMAKE_TRY_COMPILE_NO_PLATFORM_VARIABLES": {
		"name": "CMAKE_TRY_COMPILE_NO_PLATFORM_VARIABLES",
		"description": "Nastavte na true, aby příkaz try_compile nepropagoval do testovacího projektu žádné proměnné platformy."
	},
	"CMAKE_TRY_COMPILE_PLATFORM_VARIABLES": {
		"name": "CMAKE_TRY_COMPILE_PLATFORM_VARIABLES",
		"description": "Seznam proměnných, který signatura zdrojového souboru příkazu try_compile musí rozšířit do testovacího projektu, aby cílem byla stejná platforma jako u projektu hostitele"
	},
	"CMAKE_TRY_COMPILE_TARGET_TYPE": {
		"name": "CMAKE_TRY_COMPILE_TARGET_TYPE",
		"description": "Typ cíle vygenerovaný pro volání try_compile pomocí signatury zdrojového souboru. Platné hodnoty jsou:"
	},
	"CMAKE_TWEAK_VERSION": {
		"name": "CMAKE_TWEAK_VERSION",
		"description": "Definováno na hodnotu 0 za účelem kompatibility s kódem napsaným pro starší verze CMake, které mohly mít definované vyšší hodnoty"
	},
	"CMAKE_UNITY_BUILD": {
		"name": "CMAKE_UNITY_BUILD",
		"description": "Tato proměnná se používá k inicializaci vlastnosti UNITY_BUILD cílů při jejich vytváření. Nastavení proměnné na hodnotu true povolí dávkovou kompilaci více zdrojů v rámci každého cíle. Tato funkce se označuje jako sestavení Unity nebo Jumbo."
	},
	"CMAKE_UNITY_BUILD_BATCH_SIZE": {
		"name": "CMAKE_UNITY_BUILD_BATCH_SIZE",
		"description": "Tato proměnná se používá k inicializaci vlastnosti UNITY_BUILD_BATCH_SIZE cílů při jejich vytváření. Určuje výchozí horní limit počtu zdrojových souborů, které mohou být kombinovány v jakémkoliv zdrojovém souboru unity v případě, že jsou pro cíl povolena sestavení unity."
	},
	"CMAKE_UNITY_BUILD_UNIQUE_ID": {
		"name": "CMAKE_UNITY_BUILD_UNIQUE_ID",
		"description": "Tato proměnná slouží k inicializaci vlastnosti UNITY_BUILD_UNIQUE_ID cílů ve chvíli, kdy se vytvářejí. Určuje název jedinečného identifikátoru vygenerovaného pro jednotlivé soubory v sestavení Unity."
	},
	"CMAKE_USER_MAKE_RULES_OVERRIDE": {
		"name": "CMAKE_USER_MAKE_RULES_OVERRIDE",
		"description": "Umožňuje zadat soubor CMake, který přepíše informace o platformě."
	},
	"CMAKE_USER_MAKE_RULES_OVERRIDE_<LANG>": {
		"name": "CMAKE_USER_MAKE_RULES_OVERRIDE_<LANG>",
		"description": "Umožňuje zadat soubor CMake, který přepíše informace o platformě pro jazyk <LANG>."
	},
	"CMAKE_USE_RELATIVE_PATHS": {
		"name": "CMAKE_USE_RELATIVE_PATHS",
		"description": "Tato proměnná nemá žádný účinek. Částečně implementovaný efekt, který měla v předchozích vydaných verzích, už ve verzi CMake 3.4 není."
	},
	"CMAKE_VERBOSE_MAKEFILE": {
		"name": "CMAKE_VERBOSE_MAKEFILE",
		"description": "Umožňuje povolit podrobný výstup z buildů Makefile."
	},
	"CMAKE_VERIFY_INTERFACE_HEADER_SETS": {
		"name": "CMAKE_VERIFY_INTERFACE_HEADER_SETS",
		"description": "Tato proměnná se používá k inicializaci vlastnosti VERIFY_INTERFACE_HEADER_SETS cílů při jejich vytváření. Její nastavení na true umožňuje ověřování sad záhlaví."
	},
	"CMAKE_VERSION": {
		"name": "CMAKE_VERSION",
		"description": "Řetězec verze CMake jako tři nezáporné celočíselné komponenty oddělené . a pravděpodobně následované - a dalšími informacemi. První dvě komponenty představují úroveň funkce a třetí komponenta představuje úroveň opravy chyby nebo datum vývoje."
	},
	"CMAKE_VISIBILITY_INLINES_HIDDEN": {
		"name": "CMAKE_VISIBILITY_INLINES_HIDDEN",
		"description": "Výchozí hodnota pro cílovou vlastnost VISIBILITY_INLINES_HIDDEN při vytvoření cíle"
	},
	"CMAKE_VS_DEBUGGER_COMMAND": {
		"name": "CMAKE_VS_DEBUGGER_COMMAND",
		"description": "Tato proměnná slouží k inicializaci vlastnosti VS_DEBUGGER_COMMAND u každého cíle při jeho vytvoření. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_VS_DEBUGGER_COMMAND_ARGUMENTS": {
		"name": "CMAKE_VS_DEBUGGER_COMMAND_ARGUMENTS",
		"description": "Tato proměnná slouží k inicializaci vlastnosti VS_DEBUGGER_COMMAND_ARGUMENTS u každého cíle při jeho vytvoření. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_VS_DEBUGGER_ENVIRONMENT": {
		"name": "CMAKE_VS_DEBUGGER_ENVIRONMENT",
		"description": "Tato proměnná slouží k inicializaci vlastnosti VS_DEBUGGER_ENVIRONMENT u každého cíle při jeho vytvoření. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_VS_DEBUGGER_WORKING_DIRECTORY": {
		"name": "CMAKE_VS_DEBUGGER_WORKING_DIRECTORY",
		"description": "Tato proměnná slouží k inicializaci vlastnosti VS_DEBUGGER_WORKING_DIRECTORY u každého cíle při jeho vytvoření. Další informace najdete v popisu této vlastnosti cílů."
	},
	"CMAKE_VS_DEVENV_COMMAND": {
		"name": "CMAKE_VS_DEVENV_COMMAND",
		"description": "Generátory pro Visual Studio 12 2013 a novější nastaví tuto proměnnou na příkaz devenv.com nainstalovaný s odpovídající verzí sady Visual Studio. Počítejte s tím, že tato proměnná může být v edicích Visual Studio Express prázdná, protože ty tento nástroj neobsahují."
	},
	"CMAKE_VS_GLOBALS": {
		"name": "CMAKE_VS_GLOBALS",
		"description": "Seznam záznamů Klíč=Hodnota, které se mají nastavit pro každý cíl jako cílové vlastnosti VS_GLOBAL_ se záznamem proměnná=Klíč a hodnotou Hodnota."
	},
	"CMAKE_VS_INCLUDE_INSTALL_TO_DEFAULT_BUILD": {
		"name": "CMAKE_VS_INCLUDE_INSTALL_TO_DEFAULT_BUILD",
		"description": "Umožňuje zahrnout cíl INSTALL do výchozího sestavení."
	},
	"CMAKE_VS_INCLUDE_PACKAGE_TO_DEFAULT_BUILD": {
		"name": "CMAKE_VS_INCLUDE_PACKAGE_TO_DEFAULT_BUILD",
		"description": "Umožňuje zahrnout cíl PACKAGE do výchozího sestavení."
	},
	"CMAKE_VS_INTEL_Fortran_PROJECT_VERSION": {
		"name": "CMAKE_VS_INTEL_Fortran_PROJECT_VERSION",
		"description": "Při generování pro Visual Studio 12 2013 nebo novější s nainstalovaným modulem plug-in Intel Fortran toto nastavení určuje verzi formátu souboru projektu .vfproj. Je určené pro interní použití nástroji CMake a neměl by ho používat kód projektu."
	},
	"CMAKE_VS_JUST_MY_CODE_DEBUGGING": {
		"name": "CMAKE_VS_JUST_MY_CODE_DEBUGGING",
		"description": "Povolí možnost Pouze můj kód s ladicím programem Visual Studio."
	},
	"CMAKE_VS_MSBUILD_COMMAND": {
		"name": "CMAKE_VS_MSBUILD_COMMAND",
		"description": "Generátory pro Visual Studio 12 2013 a vyšší nastavily tuto proměnnou na příkaz MSBuild.exe nainstalovaný s odpovídající verzí Visual Studio."
	},
	"CMAKE_VS_NO_COMPILE_BATCHING": {
		"name": "CMAKE_VS_NO_COMPILE_BATCHING",
		"description": "Při použití generátorů Visual Studio vypněte dávkování kompilace."
	},
	"CMAKE_VS_NsightTegra_VERSION": {
		"name": "CMAKE_VS_NsightTegra_VERSION",
		"description": "Při použití generátoru sady Visual Studio s proměnnou CMAKE_SYSTEM_NAME nastavenou na hodnotu Android tato proměnná obsahuje číslo verze nainstalovaného prostředí NVIDIA Nsight Tegra Visual Studio Edition."
	},
	"CMAKE_VS_NUGET_PACKAGE_RESTORE": {
		"name": "CMAKE_VS_NUGET_PACKAGE_RESTORE",
		"description": "Při použití generátoru Visual Studio tato proměnná mezipaměti řídí, jestli se msbuild má automaticky pokoušet obnovit balíčky NuGet před sestavením. Balíčky NuGet je možné definovat pomocí vlastnosti VS_PACKAGE_REFERENCES v cíli. Pokud nejsou definovány žádné odkazy na balíček, toto nastavení neprovede žádnou akci."
	},
	"CMAKE_VS_PLATFORM_NAME": {
		"name": "CMAKE_VS_PLATFORM_NAME",
		"description": "Název cílové platformy sady Visual Studio, který používá aktuální generátor"
	},
	"CMAKE_VS_PLATFORM_NAME_DEFAULT": {
		"name": "CMAKE_VS_PLATFORM_NAME_DEFAULT",
		"description": "Výchozí hodnota pro název cílové platformy sady Visual Studio pro aktuální generátor bez toho, aby se brala v úvahu hodnota proměnné CMAKE_GENERATOR_PLATFORM. Pro generátory Visual Studio pro VS 2017 a nižší je to vždy Win32. Pro VS 2019 a vyšší se vychází z hostitelské platformy."
	},
	"CMAKE_VS_PLATFORM_TOOLSET": {
		"name": "CMAKE_VS_PLATFORM_TOOLSET",
		"description": "Název sady nástrojů platformy sady Visual Studio"
	},
	"CMAKE_VS_PLATFORM_TOOLSET_CUDA": {
		"name": "CMAKE_VS_PLATFORM_TOOLSET_CUDA",
		"description": "Verze sady nástrojů NVIDIA CUDA, jejíž sada nástrojů sady Visual Studio se má použít"
	},
	"CMAKE_VS_PLATFORM_TOOLSET_CUDA_CUSTOM_DIR": {
		"name": "CMAKE_VS_PLATFORM_TOOLSET_CUDA_CUSTOM_DIR",
		"description": "Cesta k samostatné sadě nástrojů NVIDIA CUDA (např. extrahované z instalačního programu)"
	},
	"CMAKE_VS_PLATFORM_TOOLSET_FORTRAN": {
		"name": "CMAKE_VS_PLATFORM_TOOLSET_FORTRAN",
		"description": "Kompilátor Fortran, který se má používat v projektech sady Visual Studio"
	},
	"CMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE": {
		"name": "CMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE",
		"description": "Preferovaná architektura nástrojů sady Visual Studio"
	},
	"CMAKE_VS_PLATFORM_TOOLSET_VERSION": {
		"name": "CMAKE_VS_PLATFORM_TOOLSET_VERSION",
		"description": "Verze sady nástrojů platformy sady Visual Studio"
	},
	"CMAKE_VS_SDK_EXCLUDE_DIRECTORIES": {
		"name": "CMAKE_VS_SDK_EXCLUDE_DIRECTORIES",
		"description": "Tato proměnná umožňuje potlačit výchozí vyloučené adresáře sady Visual Studio."
	},
	"CMAKE_VS_SDK_EXECUTABLE_DIRECTORIES": {
		"name": "CMAKE_VS_SDK_EXECUTABLE_DIRECTORIES",
		"description": "Tato proměnná umožňuje potlačit výchozí adresáře spustitelných souborů sady Visual Studio."
	},
	"CMAKE_VS_SDK_INCLUDE_DIRECTORIES": {
		"name": "CMAKE_VS_SDK_INCLUDE_DIRECTORIES",
		"description": "Tato proměnná umožňuje potlačit výchozí adresáře zahrnutí sady Visual Studio."
	},
	"CMAKE_VS_SDK_LIBRARY_DIRECTORIES": {
		"name": "CMAKE_VS_SDK_LIBRARY_DIRECTORIES",
		"description": "Tato proměnná umožňuje potlačit výchozí adresáře knihoven sady Visual Studio."
	},
	"CMAKE_VS_SDK_LIBRARY_WINRT_DIRECTORIES": {
		"name": "CMAKE_VS_SDK_LIBRARY_WINRT_DIRECTORIES",
		"description": "Tato proměnná umožňuje potlačit výchozí adresáře WinRT knihoven sady Visual Studio."
	},
	"CMAKE_VS_SDK_REFERENCE_DIRECTORIES": {
		"name": "CMAKE_VS_SDK_REFERENCE_DIRECTORIES",
		"description": "Tato proměnná umožňuje potlačit výchozí adresáře odkazů sady Visual Studio."
	},
	"CMAKE_VS_SDK_SOURCE_DIRECTORIES": {
		"name": "CMAKE_VS_SDK_SOURCE_DIRECTORIES",
		"description": "Tato proměnná umožňuje potlačit výchozí adresáře zdrojů sady Visual Studio."
	},
	"CMAKE_VS_TARGET_FRAMEWORK_IDENTIFIER": {
		"name": "CMAKE_VS_TARGET_FRAMEWORK_IDENTIFIER",
		"description": "Identifikátor cílové architektury sady Visual Studio"
	},
	"CMAKE_VS_TARGET_FRAMEWORK_TARGETS_VERSION": {
		"name": "CMAKE_VS_TARGET_FRAMEWORK_TARGETS_VERSION",
		"description": "Verze cílů cílové architektury sady Visual Studio"
	},
	"CMAKE_VS_TARGET_FRAMEWORK_VERSION": {
		"name": "CMAKE_VS_TARGET_FRAMEWORK_VERSION",
		"description": "Verze cílové architektury sady Visual Studio"
	},
	"CMAKE_VS_USE_DEBUG_LIBRARIES": {
		"name": "CMAKE_VS_USE_DEBUG_LIBRARIES",
		"description": "Indikuje pro generátory sady Visual Studio, které konfigurace se považují za konfigurace ladění. To řídí nastavení UseDebugLibraries v každé konfiguraci souboru .vcxproj."
	},
	"CMAKE_VS_VERSION_BUILD_NUMBER": {
		"name": "CMAKE_VS_VERSION_BUILD_NUMBER",
		"description": "Verze Visual Studia."
	},
	"CMAKE_VS_WINDOWS_TARGET_PLATFORM_MIN_VERSION": {
		"name": "CMAKE_VS_WINDOWS_TARGET_PLATFORM_MIN_VERSION",
		"description": "Řekněte generátorům Visual Studio, aby používaly danou minimální verzi cílové platformy Windows."
	},
	"CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION": {
		"name": "CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION",
		"description": "Verze cílové platformy Windows sady Visual Studio"
	},
	"CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION_MAXIMUM": {
		"name": "CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION_MAXIMUM",
		"description": "Přepíše maximální verzi sady Windows 10 SDK pro sadu VS 2015 a novější."
	},
	"CMAKE_VS_WINRT_BY_DEFAULT": {
		"name": "CMAKE_VS_WINRT_BY_DEFAULT",
		"description": "Informuje generátory Visual Studio pro VS 2010 a vyšší, že cílová platforma umožňuje ve výchozím nastavení kompilaci WinRT a musí být výslovně zakázána, pokud je vynechaný parametr /ZW nebo proměnná VS_WINRT_COMPONENT (oproti jejímu povolení, když je některá z těchto možností k dispozici)."
	},
	"CMAKE_WARN_DEPRECATED": {
		"name": "CMAKE_WARN_DEPRECATED",
		"description": "Určuje, jestli se mají vydávat upozornění pro zastaralé funkce."
	},
	"CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION": {
		"name": "CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION",
		"description": "Požádá skript cmake_install.cmake, aby upozornil pokaždé, když se zjistí soubor s absolutním umístěním INSTALL DESTINATION (DESTINACE INSTALACE)."
	},
	"CMAKE_WATCOM_RUNTIME_LIBRARY": {
		"name": "CMAKE_WATCOM_RUNTIME_LIBRARY",
		"description": "Vyberte knihovnu runtime Watcom, kterou budou používat kompilátory, které cílí na Watcom ABI. Tato proměnná slouží k inicializaci vlastnostWATCOM_RUNTIME_LIBRARY u všech cílů v době, kdy se vytvářejí. Je také šířena voláními příkazu try_compile do projektu testu."
	},
	"CMAKE_WIN32_EXECUTABLE": {
		"name": "CMAKE_WIN32_EXECUTABLE",
		"description": "Výchozí hodnota pro vlastnost WIN32_EXECUTABLE cílů"
	},
	"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS": {
		"name": "CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS",
		"description": "Výchozí hodnota pro cílovou vlastnost WINDOWS_EXPORT_ALL_SYMBOLS. Tato proměnná slouží k inicializaci vlastnosti na každém cíli při jeho vytvoření."
	},
	"CMAKE_XCODE_ATTRIBUTE_<an-attribute>": {
		"name": "CMAKE_XCODE_ATTRIBUTE_<an-attribute>",
		"description": "Nastavte cílové atributy pro Xcode přímo."
	},
	"CMAKE_XCODE_BUILD_SYSTEM": {
		"name": "CMAKE_XCODE_BUILD_SYSTEM",
		"description": "Výběr sestavovacího systému Xcode"
	},
	"CMAKE_XCODE_GENERATE_SCHEME": {
		"name": "CMAKE_XCODE_GENERATE_SCHEME",
		"description": "Pokud je možnost povolena, vygeneruje generátor Xcode soubory schématu. Jsou užitečné pro vyvolání akcí analyzování, archivace, sestavení pro testování a testování z příkazového řádku."
	},
	"CMAKE_XCODE_GENERATE_TOP_LEVEL_PROJECT_ONLY": {
		"name": "CMAKE_XCODE_GENERATE_TOP_LEVEL_PROJECT_ONLY",
		"description": "Pokud je možnost povolena, vygeneruje generátor Xcode jenom jeden soubor projektu Xcode pro první příkaz project() shora namísto generování souboru pro každý příkaz project()."
	},
	"CMAKE_XCODE_LINK_BUILD_PHASE_MODE": {
		"name": "CMAKE_XCODE_LINK_BUILD_PHASE_MODE",
		"description": "Tato proměnná slouží k inicializaci vlastnosti XCODE_LINK_BUILD_PHASE_MODE v cílech. Má vliv na metody, které generátor Xcode používá k propojení různých druhů knihoven. Její výchozí hodnota je NONE."
	},
	"CMAKE_XCODE_PLATFORM_TOOLSET": {
		"name": "CMAKE_XCODE_PLATFORM_TOOLSET",
		"description": "Výběr kompilátoru Xcode"
	},
	"CMAKE_XCODE_SCHEME_ADDRESS_SANITIZER": {
		"name": "CMAKE_XCODE_SCHEME_ADDRESS_SANITIZER",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky povolit sanitizér adres."
	},
	"CMAKE_XCODE_SCHEME_ADDRESS_SANITIZER_USE_AFTER_RETURN": {
		"name": "CMAKE_XCODE_SCHEME_ADDRESS_SANITIZER_USE_AFTER_RETURN",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky povolit detekce použití zásobníku po návratu."
	},
	"CMAKE_XCODE_SCHEME_DEBUG_DOCUMENT_VERSIONING": {
		"name": "CMAKE_XCODE_SCHEME_DEBUG_DOCUMENT_VERSIONING",
		"description": "Určuje, jestli se má povolit možnost Povolit ladění, když se v oddíle Možnosti vygenerovaného schématu Xcode používá prohlížeč verzí dokumentu."
	},
	"CMAKE_XCODE_SCHEME_DISABLE_MAIN_THREAD_CHECKER": {
		"name": "CMAKE_XCODE_SCHEME_DISABLE_MAIN_THREAD_CHECKER",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu Diagnostics zakázat Main Thread Checker."
	},
	"CMAKE_XCODE_SCHEME_DYNAMIC_LIBRARY_LOADS": {
		"name": "CMAKE_XCODE_SCHEME_DYNAMIC_LIBRARY_LOADS",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky povolit načítání dynamických knihoven."
	},
	"CMAKE_XCODE_SCHEME_DYNAMIC_LINKER_API_USAGE": {
		"name": "CMAKE_XCODE_SCHEME_DYNAMIC_LINKER_API_USAGE",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky povolit dynamické použití rozhraní API linkeru."
	},
	"CMAKE_XCODE_SCHEME_ENABLE_GPU_API_VALIDATION": {
		"name": "CMAKE_XCODE_SCHEME_ENABLE_GPU_API_VALIDATION",
		"description": "Hodnota vlastnosti pro Metal: Ověření rozhraní API v části Možnosti vygenerovaného schématu Xcode."
	},
	"CMAKE_XCODE_SCHEME_ENABLE_GPU_FRAME_CAPTURE_MODE": {
		"name": "CMAKE_XCODE_SCHEME_ENABLE_GPU_FRAME_CAPTURE_MODE",
		"description": "Hodnota vlastnosti pro zachytávání snímků GPU v části Možnosti vygenerovaného schématu Xcode. Příklady hodnot jsou Metal a Disabled."
	},
	"CMAKE_XCODE_SCHEME_ENABLE_GPU_SHADER_VALIDATION": {
		"name": "CMAKE_XCODE_SCHEME_ENABLE_GPU_SHADER_VALIDATION",
		"description": "Hodnota vlastnosti pro Metal: Ověření shaderu v části Možnosti vygenerovaného schématu Xcode."
	},
	"CMAKE_XCODE_SCHEME_ENVIRONMENT": {
		"name": "CMAKE_XCODE_SCHEME_ENVIRONMENT",
		"description": "Zadejte proměnné prostředí, které by se měly přidat do části Argument vygenerovaného schématu Xcode."
	},
	"CMAKE_XCODE_SCHEME_GUARD_MALLOC": {
		"name": "CMAKE_XCODE_SCHEME_GUARD_MALLOC",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky povolit možnost Guard Malloc."
	},
	"CMAKE_XCODE_SCHEME_LAUNCH_CONFIGURATION": {
		"name": "CMAKE_XCODE_SCHEME_LAUNCH_CONFIGURATION",
		"description": "Nastavte konfiguraci sestavení tak, aby se spustil cíl."
	},
	"CMAKE_XCODE_SCHEME_LAUNCH_MODE": {
		"name": "CMAKE_XCODE_SCHEME_LAUNCH_MODE",
		"description": "Hodnota vlastnosti Launch v oddílu Informace vygenerovaného schématu Xcode."
	},
	"CMAKE_XCODE_SCHEME_MAIN_THREAD_CHECKER_STOP": {
		"name": "CMAKE_XCODE_SCHEME_MAIN_THREAD_CHECKER_STOP",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu Diagnostics u Main Thread Checkeru povolit možnost Pause při potížích."
	},
	"CMAKE_XCODE_SCHEME_MALLOC_GUARD_EDGES": {
		"name": "CMAKE_XCODE_SCHEME_MALLOC_GUARD_EDGES",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky povolit možnost Malloc Guard Edges."
	},
	"CMAKE_XCODE_SCHEME_MALLOC_SCRIBBLE": {
		"name": "CMAKE_XCODE_SCHEME_MALLOC_SCRIBBLE",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky povolit možnost Malloc Scribble."
	},
	"CMAKE_XCODE_SCHEME_MALLOC_STACK": {
		"name": "CMAKE_XCODE_SCHEME_MALLOC_STACK",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky povolit zásobník funkce Malloc."
	},
	"CMAKE_XCODE_SCHEME_THREAD_SANITIZER": {
		"name": "CMAKE_XCODE_SCHEME_THREAD_SANITIZER",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky povolit sanitizér vláken."
	},
	"CMAKE_XCODE_SCHEME_THREAD_SANITIZER_STOP": {
		"name": "CMAKE_XCODE_SCHEME_THREAD_SANITIZER_STOP",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky u Thread Sanitizeru povolit možnost pozastavení při potížích."
	},
	"CMAKE_XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER": {
		"name": "CMAKE_XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky povolit Undefined Behavior Sanitizer."
	},
	"CMAKE_XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER_STOP": {
		"name": "CMAKE_XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER_STOP",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky u Undefined Behavior Sanitizeru povolit možnost pozastavení při potížích."
	},
	"CMAKE_XCODE_SCHEME_WORKING_DIRECTORY": {
		"name": "CMAKE_XCODE_SCHEME_WORKING_DIRECTORY",
		"description": "Umožňuje zadat pracovní adresář akcí spuštění a profilu ve vygenerovaném schématu Xcode."
	},
	"CMAKE_XCODE_SCHEME_ZOMBIE_OBJECTS": {
		"name": "CMAKE_XCODE_SCHEME_ZOMBIE_OBJECTS",
		"description": "Určuje, jestli se mají ve vygenerovaném schématu Xcode v oddílu diagnostiky povolit zombie objekty."
	},
	"CMAKE_XCODE_XCCONFIG": {
		"name": "CMAKE_XCODE_XCCONFIG",
		"description": "Pokud je tato možnost nastavená, generátor Xcode zaregistruje zadaný soubor jako globální soubor XCConfig. Pro soubory XCConfig na cílové úrovni se podívejte na XCODE_XCCONFIG cílovou vlastnost."
	},
	"CPACK_ABSOLUTE_DESTINATION_FILES": {
		"name": "CPACK_ABSOLUTE_DESTINATION_FILES",
		"description": "Seznam souborů, které se nainstalovaly pomocí cesty ABSOLUTE DESTINATION"
	},
	"CPACK_COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY": {
		"name": "CPACK_COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY",
		"description": "Logický přepínač pro zahrnutí nebo vyloučení adresáře nejvyšší úrovně (v případě komponent)"
	},
	"CPACK_CUSTOM_INSTALL_VARIABLES": {
		"name": "CPACK_CUSTOM_INSTALL_VARIABLES",
		"description": "Proměnné CPack (nastavené například pomocí skriptů cpack -D, CPackConfig.cmake nebo CPACK_PROJECT_CONFIG_FILE) nejsou přímo viditelné v instalačních skriptech. Místo toho můžete předávat seznam párů varName=value v proměnné CPACK_CUSTOM_INSTALL_VARIABLES. Při instalaci bude mít každá položka v seznamu za následek nastavení proměnné se zadaným názvem (varName) na danou hodnotu. Parametr = lze pro prázdnou hodnotu vynechat."
	},
	"CPACK_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION": {
		"name": "CPACK_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION",
		"description": "Požádá CPack, aby skončil s chybou, jakmile se zjistí soubor s absolutním umístěním INSTALL DESTINATION (DESTINACE INSTALACE)."
	},
	"CPACK_INCLUDE_TOPLEVEL_DIRECTORY": {
		"name": "CPACK_INCLUDE_TOPLEVEL_DIRECTORY",
		"description": "Logický přepínač pro zahrnutí nebo vyloučení adresáře nejvyšší úrovně"
	},
	"CPACK_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS": {
		"name": "CPACK_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS",
		"description": "Výchozí oprávnění pro adresáře implicitně vytvořené během balíčkování"
	},
	"CPACK_PACKAGING_INSTALL_PREFIX": {
		"name": "CPACK_PACKAGING_INSTALL_PREFIX",
		"description": "Předpona použitá v balíčku sestavení"
	},
	"CPACK_SET_DESTDIR": {
		"name": "CPACK_SET_DESTDIR",
		"description": "Logický přepínač, aby CPack používal při balení mechanismus DESTDIR"
	},
	"CPACK_WARN_ON_ABSOLUTE_INSTALL_DESTINATION": {
		"name": "CPACK_WARN_ON_ABSOLUTE_INSTALL_DESTINATION",
		"description": "Požádá CPack, aby upozornil pokaždé, když se zjistí soubor s absolutním umístěním INSTALL DESTINATION (DESTINACE INSTALACE)."
	},
	"CTEST_BINARY_DIRECTORY": {
		"name": "CTEST_BINARY_DIRECTORY",
		"description": "Umožňuje zadat nastavení BuildDirectory CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_BUILD_COMMAND": {
		"name": "CTEST_BUILD_COMMAND",
		"description": "Umožňuje zadat nastavení MakeCommand CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_BUILD_NAME": {
		"name": "CTEST_BUILD_NAME",
		"description": "Umožňuje zadat nastavení BuildName CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_BZR_COMMAND": {
		"name": "CTEST_BZR_COMMAND",
		"description": "Umožňuje zadat nastavení BZRCommand CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_BZR_UPDATE_OPTIONS": {
		"name": "CTEST_BZR_UPDATE_OPTIONS",
		"description": "Umožňuje zadat nastavení BZRUpdateOptions CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_CHANGE_ID": {
		"name": "CTEST_CHANGE_ID",
		"description": "Umožňuje zadat nastavení ChangeId CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_CHECKOUT_COMMAND": {
		"name": "CTEST_CHECKOUT_COMMAND",
		"description": "Řekne příkazu ctest_start, jak rezervovat nebo inicializovat zdrojový adresář ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_CONFIGURATION_TYPE": {
		"name": "CTEST_CONFIGURATION_TYPE",
		"description": "Umožňuje zadat nastavení DefaultCTestConfigurationType CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_CONFIGURE_COMMAND": {
		"name": "CTEST_CONFIGURE_COMMAND",
		"description": "Umožňuje zadat nastavení ConfigureCommand CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_COVERAGE_COMMAND": {
		"name": "CTEST_COVERAGE_COMMAND",
		"description": "Umožňuje zadat nastavení CoverageCommand CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_COVERAGE_EXTRA_FLAGS": {
		"name": "CTEST_COVERAGE_EXTRA_FLAGS",
		"description": "Umožňuje zadat nastavení CoverageExtraFlags CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_CURL_OPTIONS": {
		"name": "CTEST_CURL_OPTIONS",
		"description": "Umožňuje zadat nastavení CurlOptions CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_CUSTOM_COVERAGE_EXCLUDE": {
		"name": "CTEST_CUSTOM_COVERAGE_EXCLUDE",
		"description": "Seznam regulárních výrazů, které budou použity k vyloučení souborů podle jejich cesty z výstupu pokrytí příkazem ctest_coverage"
	},
	"CTEST_CUSTOM_ERROR_EXCEPTION": {
		"name": "CTEST_CUSTOM_ERROR_EXCEPTION",
		"description": "Seznam regulárních výrazů, které se použijí ve výstupech sestavení příkazem ctest_build k vyloučení při zjišťování chybových zpráv."
	},
	"CTEST_CUSTOM_ERROR_MATCH": {
		"name": "CTEST_CUSTOM_ERROR_MATCH",
		"description": "Seznam regulárních výrazů, které budou použity k zjišťování chybových zpráv ve výstupech sestavení příkazem ctest_build."
	},
	"CTEST_CUSTOM_ERROR_POST_CONTEXT": {
		"name": "CTEST_CUSTOM_ERROR_POST_CONTEXT",
		"description": "Počet řádků, které mají být zahrnuty jako kontext, které následují za chybovou zprávou, příkazem ctest_build. Výchozí hodnota je 10."
	},
	"CTEST_CUSTOM_ERROR_PRE_CONTEXT": {
		"name": "CTEST_CUSTOM_ERROR_PRE_CONTEXT",
		"description": "Počet řádků, které mají být zahrnuty jako kontext, které předcházejí chybové zprávě, příkazem ctest_build. Výchozí hodnota je 10."
	},
	"CTEST_CUSTOM_MAXIMUM_FAILED_TEST_OUTPUT_SIZE": {
		"name": "CTEST_CUSTOM_MAXIMUM_FAILED_TEST_OUTPUT_SIZE",
		"description": "Při ukládání výstupu neúspěšného testu se jedná o maximální velikost v bajtech, která bude shromážděna příkazem ctest_test. Výchozí hodnota je 307200 (300 KiB). Možné režimy zkracování najdete v CTEST_CUSTOM_TEST_OUTPUT_TRUNCATION."
	},
	"CTEST_CUSTOM_MAXIMUM_NUMBER_OF_ERRORS": {
		"name": "CTEST_CUSTOM_MAXIMUM_NUMBER_OF_ERRORS",
		"description": "Maximální počet chyb v jediném kroku sestavení, který bude rozpoznán. Po nich příkaz ctest_test zkrátí výstup. Výchozí hodnota je 50."
	},
	"CTEST_CUSTOM_MAXIMUM_NUMBER_OF_WARNINGS": {
		"name": "CTEST_CUSTOM_MAXIMUM_NUMBER_OF_WARNINGS",
		"description": "Maximální počet upozornění v jediném kroku sestavení, který bude rozpoznán. Po nich příkaz ctest_test zkrátí výstup. Výchozí hodnota je 50."
	},
	"CTEST_CUSTOM_MAXIMUM_PASSED_TEST_OUTPUT_SIZE": {
		"name": "CTEST_CUSTOM_MAXIMUM_PASSED_TEST_OUTPUT_SIZE",
		"description": "Při ukládání výstupu úspěšného testu se jedná o maximální velikost v bajtech, která bude shromážděna příkazem ctest_test. Výchozí hodnota je 1024 (1 KiB). Možné režimy zkracování najdete v CTEST_CUSTOM_TEST_OUTPUT_TRUNCATION."
	},
	"CTEST_CUSTOM_MEMCHECK_IGNORE": {
		"name": "CTEST_CUSTOM_MEMCHECK_IGNORE",
		"description": "Seznam regulárních výrazů, které budou použity k vyloučení testů během příkazu ctest_memcheck"
	},
	"CTEST_CUSTOM_POST_MEMCHECK": {
		"name": "CTEST_CUSTOM_POST_MEMCHECK",
		"description": "Seznam příkazů ke spuštění na konci příkazu ctest_memcheck"
	},
	"CTEST_CUSTOM_POST_TEST": {
		"name": "CTEST_CUSTOM_POST_TEST",
		"description": "Seznam příkazů ke spuštění na konci příkazu ctest_test"
	},
	"CTEST_CUSTOM_PRE_MEMCHECK": {
		"name": "CTEST_CUSTOM_PRE_MEMCHECK",
		"description": "Seznam příkazů ke spuštění na začátku příkazu ctest_memcheck"
	},
	"CTEST_CUSTOM_PRE_TEST": {
		"name": "CTEST_CUSTOM_PRE_TEST",
		"description": "Seznam příkazů ke spuštění na začátku příkazu ctest_test"
	},
	"CTEST_CUSTOM_TESTS_IGNORE": {
		"name": "CTEST_CUSTOM_TESTS_IGNORE",
		"description": "Seznam názvů testů, které mají být vyloučeny ze sady testů spuštěných příkazem ctest_test."
	},
	"CTEST_CUSTOM_TEST_OUTPUT_TRUNCATION": {
		"name": "CTEST_CUSTOM_TEST_OUTPUT_TRUNCATION",
		"description": "Nastavení režimu zkracování výstupu testu v případě, že je pomocí proměnných CTEST_CUSTOM_MAXIMUM_PASSED_TEST_OUTPUT_SIZE nebo CTEST_CUSTOM_MAXIMUM_FAILED_TEST_OUTPUT_SIZE nakonfigurována maximální velikost. Ve výchozím nastavení se konec výstupu zkrátí. Další možné hodnoty jsou střed a začátek."
	},
	"CTEST_CUSTOM_WARNING_EXCEPTION": {
		"name": "CTEST_CUSTOM_WARNING_EXCEPTION",
		"description": "Seznam regulárních výrazů, které budou použity k vyloučení při zjišťování upozornění ve výstupech sestavení příkazem ctest_build"
	},
	"CTEST_CUSTOM_WARNING_MATCH": {
		"name": "CTEST_CUSTOM_WARNING_MATCH",
		"description": "Seznam regulárních výrazů, které budou použity k zjišťování upozornění ve výstupech sestavení příkazem ctest_build"
	},
	"CTEST_CVS_CHECKOUT": {
		"name": "CTEST_CVS_CHECKOUT",
		"description": "Zastaralé. Místo toho použijte CTEST_CHECKOUT_COMMAND."
	},
	"CTEST_CVS_COMMAND": {
		"name": "CTEST_CVS_COMMAND",
		"description": "Umožňuje zadat nastavení CVSCommand CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_CVS_UPDATE_OPTIONS": {
		"name": "CTEST_CVS_UPDATE_OPTIONS",
		"description": "Umožňuje zadat nastavení CVSUpdateOptions CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_DROP_LOCATION": {
		"name": "CTEST_DROP_LOCATION",
		"description": "Umožňuje zadat nastavení DropLocation CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_DROP_METHOD": {
		"name": "CTEST_DROP_METHOD",
		"description": "Umožňuje zadat nastavení DropMethod CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_DROP_SITE": {
		"name": "CTEST_DROP_SITE",
		"description": "Umožňuje zadat nastavení DropSite CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_DROP_SITE_CDASH": {
		"name": "CTEST_DROP_SITE_CDASH",
		"description": "Umožňuje zadat nastavení IsCDash CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_DROP_SITE_PASSWORD": {
		"name": "CTEST_DROP_SITE_PASSWORD",
		"description": "Umožňuje zadat nastavení DropSitePassword CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_DROP_SITE_USER": {
		"name": "CTEST_DROP_SITE_USER",
		"description": "Umožňuje zadat nastavení DropSiteUser CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_EXTRA_COVERAGE_GLOB": {
		"name": "CTEST_EXTRA_COVERAGE_GLOB",
		"description": "Seznam regulárních výrazů, které budou použity k nalezení souborů, které by měly být pokryty, příkazem ctest_coverage"
	},
	"CTEST_GIT_COMMAND": {
		"name": "CTEST_GIT_COMMAND",
		"description": "Umožňuje zadat nastavení GITCommand CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_GIT_INIT_SUBMODULES": {
		"name": "CTEST_GIT_INIT_SUBMODULES",
		"description": "Umožňuje zadat nastavení GITInitSubmodules CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_GIT_UPDATE_CUSTOM": {
		"name": "CTEST_GIT_UPDATE_CUSTOM",
		"description": "Umožňuje zadat nastavení GITUpdateCustom CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_GIT_UPDATE_OPTIONS": {
		"name": "CTEST_GIT_UPDATE_OPTIONS",
		"description": "Umožňuje zadat nastavení GITUpdateOptions CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_HG_COMMAND": {
		"name": "CTEST_HG_COMMAND",
		"description": "Umožňuje zadat nastavení HGCommand CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_HG_UPDATE_OPTIONS": {
		"name": "CTEST_HG_UPDATE_OPTIONS",
		"description": "Umožňuje zadat nastavení HGUpdateOptions CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_LABELS_FOR_SUBPROJECTS": {
		"name": "CTEST_LABELS_FOR_SUBPROJECTS",
		"description": "Umožňuje zadat nastavení LabelsForSubprojects CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_MEMORYCHECK_COMMAND": {
		"name": "CTEST_MEMORYCHECK_COMMAND",
		"description": "Umožňuje zadat nastavení MemoryCheckCommand CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_MEMORYCHECK_COMMAND_OPTIONS": {
		"name": "CTEST_MEMORYCHECK_COMMAND_OPTIONS",
		"description": "Umožňuje zadat nastavení MemoryCheckCommandOptions CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_MEMORYCHECK_SANITIZER_OPTIONS": {
		"name": "CTEST_MEMORYCHECK_SANITIZER_OPTIONS",
		"description": "Umožňuje zadat nastavení MemoryCheckSanitizerOptions CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_MEMORYCHECK_SUPPRESSIONS_FILE": {
		"name": "CTEST_MEMORYCHECK_SUPPRESSIONS_FILE",
		"description": "Umožňuje zadat nastavení MemoryCheckSuppressionFile CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_MEMORYCHECK_TYPE": {
		"name": "CTEST_MEMORYCHECK_TYPE",
		"description": "Umožňuje zadat nastavení MemoryCheckType CTestu ve skriptu klienta řídicího panelu ctest. Platné hodnoty jsou Valgrind, Purify, BoundsChecker, DrMemory, CudaSanitizer, ThreadSanitizer, AddressSanitizer, LeakSanitizer, MemorySanitizer a UndefinedBehaviorSanitizer."
	},
	"CTEST_NIGHTLY_START_TIME": {
		"name": "CTEST_NIGHTLY_START_TIME",
		"description": "Umožňuje zadat nastavení NightlyStartTime CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_P4_CLIENT": {
		"name": "CTEST_P4_CLIENT",
		"description": "Umožňuje zadat nastavení P4Client CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_P4_COMMAND": {
		"name": "CTEST_P4_COMMAND",
		"description": "Umožňuje zadat nastavení P4Command CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_P4_OPTIONS": {
		"name": "CTEST_P4_OPTIONS",
		"description": "Umožňuje zadat nastavení P4Options CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_P4_UPDATE_OPTIONS": {
		"name": "CTEST_P4_UPDATE_OPTIONS",
		"description": "Umožňuje zadat nastavení P4UpdateOptions CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_RESOURCE_SPEC_FILE": {
		"name": "CTEST_RESOURCE_SPEC_FILE",
		"description": "Umožňuje zadat nastavení ResourceSpecFile CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_RUN_CURRENT_SCRIPT": {
		"name": "CTEST_RUN_CURRENT_SCRIPT",
		"description": "Nastavení na 0 zabraňuje, aby byl znovu spuštěn příkaz ctest, když dosáhne konce skriptu spuštěného voláním ctest -S."
	},
	"CTEST_SCP_COMMAND": {
		"name": "CTEST_SCP_COMMAND",
		"description": "Starší možnost. Nepoužívá se."
	},
	"CTEST_SCRIPT_DIRECTORY": {
		"name": "CTEST_SCRIPT_DIRECTORY",
		"description": "Adresář obsahující skript CTest na nejvyšší úrovni. Koncept je podobný jako u CMAKE_SOURCE_DIR."
	},
	"CTEST_SITE": {
		"name": "CTEST_SITE",
		"description": "Umožňuje zadat nastavení Site CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_SOURCE_DIRECTORY": {
		"name": "CTEST_SOURCE_DIRECTORY",
		"description": "Umožňuje zadat nastavení SourceDirectory CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_SUBMIT_INACTIVITY_TIMEOUT": {
		"name": "CTEST_SUBMIT_INACTIVITY_TIMEOUT",
		"description": "Umožňuje zadat nastavení SubmitInactivityTimeout CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_SUBMIT_URL": {
		"name": "CTEST_SUBMIT_URL",
		"description": "Umožňuje zadat nastavení SubmitURL CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_SVN_COMMAND": {
		"name": "CTEST_SVN_COMMAND",
		"description": "Umožňuje zadat nastavení SVNCommand CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_SVN_OPTIONS": {
		"name": "CTEST_SVN_OPTIONS",
		"description": "Umožňuje zadat nastavení SVNOptions CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_SVN_UPDATE_OPTIONS": {
		"name": "CTEST_SVN_UPDATE_OPTIONS",
		"description": "Umožňuje zadat nastavení SVNUpdateOptions CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_TEST_LOAD": {
		"name": "CTEST_TEST_LOAD",
		"description": "Umožňuje zadat nastavení TestLoad v testovacím kroku CTestu skriptu klienta řídicího panelu ctest. Nastaví výchozí hodnotu pro možnost TEST_LOAD příkazu ctest_test."
	},
	"CTEST_TEST_TIMEOUT": {
		"name": "CTEST_TEST_TIMEOUT",
		"description": "Umožňuje zadat nastavení TimeOut CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_TLS_VERIFY": {
		"name": "CTEST_TLS_VERIFY",
		"description": "Nastavení CTest TLSVerify zadejte ve skriptu klienta řídicího panelu ctest nebo v kódu CMakeLists.txt projektu před začleněním modulu CTest. Hodnota je logická hodnota, která určuje, jestli se má při odesílání do řídicího panelu prostřednictvím adres URL https:// ověřovat certifikát serveru."
	},
	"CTEST_TLS_VERSION": {
		"name": "CTEST_TLS_VERSION",
		"description": "Nastavení CTest TLSVersion zadejte ve skriptu klienta řídicího panelu ctest nebo v kódu CMakeLists.txt projektu před začleněním modulu CTest. Hodnota je minimální verze protokolu TLS povolená při odesílání do řídicího panelu přes adresy URL https://."
	},
	"CTEST_TRIGGER_SITE": {
		"name": "CTEST_TRIGGER_SITE",
		"description": "Starší možnost. Nepoužívá se."
	},
	"CTEST_UPDATE_COMMAND": {
		"name": "CTEST_UPDATE_COMMAND",
		"description": "Umožňuje zadat nastavení UpdateCommand CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_UPDATE_OPTIONS": {
		"name": "CTEST_UPDATE_OPTIONS",
		"description": "Umožňuje zadat nastavení UpdateOptions CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_UPDATE_VERSION_ONLY": {
		"name": "CTEST_UPDATE_VERSION_ONLY",
		"description": "Umožňuje zadat nastavení UpdateVersionOnly CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_UPDATE_VERSION_OVERRIDE": {
		"name": "CTEST_UPDATE_VERSION_OVERRIDE",
		"description": "Umožňuje zadat nastavení UpdateVersionOverride CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CTEST_USE_LAUNCHERS": {
		"name": "CTEST_USE_LAUNCHERS",
		"description": "Umožňuje zadat nastavení UseLaunchers CTestu ve skriptu klienta řídicího panelu ctest."
	},
	"CYGWIN": {
		"name": "CYGWIN",
		"description": "Hodnota true pro Cygwin"
	},
	"ENV": {
		"name": "ENV",
		"description": "Operátor pro čtení proměnných prostředí"
	},
	"EXECUTABLE_OUTPUT_PATH": {
		"name": "EXECUTABLE_OUTPUT_PATH",
		"description": "Stará proměnná umístění spustitelného souboru"
	},
	"GHSMULTI": {
		"name": "GHSMULTI",
		"description": "1, pokud se používá generátor MULTI od Green Hills."
	},
	"IOS": {
		"name": "IOS",
		"description": "Nastavte na hodnotu 1, pokud je cílovým systémem (CMAKE_SYSTEM_NAME) iOS."
	},
	"LIBRARY_OUTPUT_PATH": {
		"name": "LIBRARY_OUTPUT_PATH",
		"description": "Stará proměnná umístění knihovny"
	},
	"LINUX": {
		"name": "LINUX",
		"description": "Pokud je cílovým systémem Linux, nastavte hodnotu true."
	},
	"MINGW": {
		"name": "MINGW",
		"description": "Nastavte na hodnotu true, pokud je povolený alespoň jeden jazyk s kompilátorem, který cílí na GNU ABI ve Windows (MinGW)."
	},
	"MSVC": {
		"name": "MSVC",
		"description": "Nastavte na hodnotu True, pokud je kompilátor nějakou verzí Microsoft Visual C++ nebo jiného kompilátoru simulujícího syntaxi příkazového řádku Visual C++ cl."
	},
	"MSVC10": {
		"name": "MSVC10",
		"description": "Nedoporučuje se. Použijte radši proměnnou MSVC_VERSION."
	},
	"MSVC11": {
		"name": "MSVC11",
		"description": "Nedoporučuje se. Použijte radši proměnnou MSVC_VERSION."
	},
	"MSVC12": {
		"name": "MSVC12",
		"description": "Nedoporučuje se. Použijte radši proměnnou MSVC_VERSION."
	},
	"MSVC14": {
		"name": "MSVC14",
		"description": "Nedoporučuje se. Použijte radši proměnnou MSVC_VERSION."
	},
	"MSVC60": {
		"name": "MSVC60",
		"description": "Nedoporučuje se. Použijte radši proměnnou MSVC_VERSION."
	},
	"MSVC70": {
		"name": "MSVC70",
		"description": "Nedoporučuje se. Použijte radši proměnnou MSVC_VERSION."
	},
	"MSVC71": {
		"name": "MSVC71",
		"description": "Nedoporučuje se. Použijte radši proměnnou MSVC_VERSION."
	},
	"MSVC80": {
		"name": "MSVC80",
		"description": "Nedoporučuje se. Použijte radši proměnnou MSVC_VERSION."
	},
	"MSVC90": {
		"name": "MSVC90",
		"description": "Nedoporučuje se. Použijte radši proměnnou MSVC_VERSION."
	},
	"MSVC_IDE": {
		"name": "MSVC_IDE",
		"description": "Je true, pokud se používá rozhraní IDE Microsoft Visual C++."
	},
	"MSVC_TOOLSET_VERSION": {
		"name": "MSVC_TOOLSET_VERSION",
		"description": "Verze používané sady nástrojů Microsoft Visual C/C++, pokud se nějaká používá. Pokud se používá jako MSVC, tato proměnná je nastavena na základě verze kompilátoru, jak ji stanovuje proměnná MSVC_VERSION."
	},
	"MSVC_VERSION": {
		"name": "MSVC_VERSION",
		"description": "Verze používané aplikace Microsoft Visual C/C++, pokud se nějaká používá. Pokud se používá kompilátor simulující Visual C++, je tato proměnná nastavena na verzi simulované sady nástrojů, jak ji stanovuje definice preprocesoru _MSC_VER."
	},
	"MSYS": {
		"name": "MSYS",
		"description": "Má hodnotu true při použití generátoru MSYS Makefiles."
	},
	"<PackageName>_ROOT": {
		"name": "<PackageName>_ROOT",
		"description": "Volání do find_package (<PackageName>) bude hledat v předponách určených proměnnou CMake <PackageName>_ROOT, kde <PackageName> je název daný volání find_package (je nutné dodržet velikost písmen) a _ROOT je literál. Například find_package(Foo) bude vyhledávat předpony zadané v proměnné CMake Foo_ROOT (pokud je nastavená). Viz zásada CMP0074."
	},
	"<PROJECT-NAME>_BINARY_DIR": {
		"name": "<PROJECT-NAME>_BINARY_DIR",
		"description": "Binární adresář nejvyšší úrovně pro jmenovaný projekt"
	},
	"<PROJECT-NAME>_DESCRIPTION": {
		"name": "<PROJECT-NAME>_DESCRIPTION",
		"description": "Hodnota zadaná pro možnost DESCRIPTION posledního volání příkazu projektu s názvem projektu <PROJECT-NAME>, pokud existuje."
	},
	"<PROJECT-NAME>_HOMEPAGE_URL": {
		"name": "<PROJECT-NAME>_HOMEPAGE_URL",
		"description": "Hodnota zadaná pro možnost HOMEPAGE_URL posledního volání příkazu projektu s názvem projektu <PROJECT-NAME>, pokud existuje."
	},
	"<PROJECT-NAME>_IS_TOP_LEVEL": {
		"name": "<PROJECT-NAME>_IS_TOP_LEVEL",
		"description": "Logická proměnná označující, jestli byl pojmenovaný projekt volán v souboru CMakeLists.txt nejvyšší úrovně."
	},
	"<PROJECT-NAME>_SOURCE_DIR": {
		"name": "<PROJECT-NAME>_SOURCE_DIR",
		"description": "Zdrojový adresář nejvyšší úrovně pro jmenovaný projekt"
	},
	"<PROJECT-NAME>_VERSION": {
		"name": "<PROJECT-NAME>_VERSION",
		"description": "Hodnota zadaná pro možnost VERSION posledního volání příkazu projektu s názvem projektu <PROJECT-NAME>, pokud existuje."
	},
	"<PROJECT-NAME>_VERSION_MAJOR": {
		"name": "<PROJECT-NAME>_VERSION_MAJOR",
		"description": "První komponenta čísla verze proměnné <PROJECT-NAME>_VERSION nastavená příkazem projektu"
	},
	"<PROJECT-NAME>_VERSION_MINOR": {
		"name": "<PROJECT-NAME>_VERSION_MINOR",
		"description": "Druhá komponenta čísla verze proměnné <PROJECT-NAME>_VERSION nastavená příkazem projektu"
	},
	"<PROJECT-NAME>_VERSION_PATCH": {
		"name": "<PROJECT-NAME>_VERSION_PATCH",
		"description": "Třetí komponenta čísla verze proměnné <PROJECT-NAME>_VERSION nastavená příkazem projektu"
	},
	"<PROJECT-NAME>_VERSION_TWEAK": {
		"name": "<PROJECT-NAME>_VERSION_TWEAK",
		"description": "Čtvrtá komponenta čísla verze proměnné <PROJECT-NAME>_VERSION nastavená příkazem projektu"
	},
	"PROJECT_BINARY_DIR": {
		"name": "PROJECT_BINARY_DIR",
		"description": "Úplná cesta k adresáři sestavení pro projekt"
	},
	"PROJECT_DESCRIPTION": {
		"name": "PROJECT_DESCRIPTION",
		"description": "Krátký popis projektu daný příkazu projektu"
	},
	"PROJECT_HOMEPAGE_URL": {
		"name": "PROJECT_HOMEPAGE_URL",
		"description": "Adresa URL domovské stránky projektu"
	},
	"PROJECT_IS_TOP_LEVEL": {
		"name": "PROJECT_IS_TOP_LEVEL",
		"description": "Logická proměnná označující, jestli poslední volaný příkaz projektu v aktuálním nebo vyšším oboru byl v souboru CMakeLists.txt nejvyšší úrovně."
	},
	"PROJECT_NAME": {
		"name": "PROJECT_NAME",
		"description": "Název projektu zadaný do příkazu projektu"
	},
	"PROJECT_SOURCE_DIR": {
		"name": "PROJECT_SOURCE_DIR",
		"description": "Toto je zdrojový adresář posledního volání příkazu projektu vytvořeného v aktuálním oboru adresáře nebo v jednom z jeho nadřazených objektů. Poznámka: Není ovlivněn voláními do projektu vytvořenými v oboru podřízeného adresáře (tj. v rámci volání do add_subdirectory z aktuálního oboru)."
	},
	"PROJECT_VERSION": {
		"name": "PROJECT_VERSION",
		"description": "Hodnota zadaná pro možnost VERSION posledního volání příkazu projektu, pokud existuje."
	},
	"PROJECT_VERSION_MAJOR": {
		"name": "PROJECT_VERSION_MAJOR",
		"description": "První komponenta čísla verze proměnné PROJECT_VERSION nastavená příkazem projektu"
	},
	"PROJECT_VERSION_MINOR": {
		"name": "PROJECT_VERSION_MINOR",
		"description": "Druhá komponenta čísla verze proměnné PROJECT_VERSION nastavená příkazem projektu"
	},
	"PROJECT_VERSION_PATCH": {
		"name": "PROJECT_VERSION_PATCH",
		"description": "Třetí komponenta čísla verze proměnné PROJECT_VERSION nastavená příkazem projektu"
	},
	"PROJECT_VERSION_TWEAK": {
		"name": "PROJECT_VERSION_TWEAK",
		"description": "Čtvrtá komponenta čísla verze proměnné PROJECT_VERSION nastavená příkazem projektu"
	},
	"UNIX": {
		"name": "UNIX",
		"description": "Nastavte na hodnotu True, pokud cílovým systémem je UNIX nebo na způsob UNIXu (např. APPLE a CYGWIN). Pokud jsou potřeba konkrétnější znalosti o cílovém systému, měl by se zadat dotaz na proměnnou CMAKE_SYSTEM_NAME."
	},
	"WIN32": {
		"name": "WIN32",
		"description": "Když je cílovým systémem Windows, včetně Win64, nastavte tuto možnost na True."
	},
	"WINCE": {
		"name": "WINCE",
		"description": "True, když je proměnná CMAKE_SYSTEM_NAME nastavená na WindowsCE"
	},
	"WINDOWS_PHONE": {
		"name": "WINDOWS_PHONE",
		"description": "True, když je proměnná CMAKE_SYSTEM_NAME nastavená na WindowsPhone"
	},
	"WINDOWS_STORE": {
		"name": "WINDOWS_STORE",
		"description": "True, když je proměnná CMAKE_SYSTEM_NAME nastavená na WindowsStore"
	},
	"XCODE": {
		"name": "XCODE",
		"description": "True, když se používá generátor Xcode"
	},
	"XCODE_VERSION": {
		"name": "XCODE_VERSION",
		"description": "Verze Xcode (jen generátor Xcode)"
	},
	"ADVANCED": {
		"name": "ADVANCED",
		"description": "Zadejte hodnotu True, pokud má být položka ve výchozím nastavení v GUI skrytá."
	},
	"HELPSTRING": {
		"name": "HELPSTRING",
		"description": "Nápověda k položce v rozhraních GUI"
	},
	"MODIFIED": {
		"name": "MODIFIED",
		"description": "Vlastnost vnitřní správy. Nenastavujte nebo nenačítejte ji."
	},
	"STRINGS": {
		"name": "STRINGS",
		"description": "Zobrazí výčet možných vstupních hodnot STRING (ŘETĚZEC) pro výběr grafického uživatelského rozhraní."
	},
	"TYPE": {
		"name": "TYPE",
		"description": "Typ widgetu pro záznam v rozhraních GUI"
	},
	"VALUE": {
		"name": "VALUE",
		"description": "Hodnota položky mezipaměti"
	},
	"ADDITIONAL_CLEAN_FILES": {
		"name": "ADDITIONAL_CLEAN_FILES",
		"description": "Středníky oddělený seznam souborů nebo adresářů, který bude odebrán jako součást globálního cíle čištění. Je vhodný pro určení generovaných souborů nebo adresářů, které jsou používány více cíli nebo samotným nástrojem CMake, nebo které jsou generovány způsobem, který nelze zachytit jako výstupy nebo vedlejší produkty vlastních příkazů."
	},
	"ADDITIONAL_MAKE_CLEAN_FILES": {
		"name": "ADDITIONAL_MAKE_CLEAN_FILES",
		"description": "Další soubory k odebrání během fáze čištění"
	},
	"BINARY_DIR": {
		"name": "BINARY_DIR",
		"description": "Tato vlastnost adresáře jen pro čtení hlásí absolutní cestu k binárnímu adresáři odpovídajícímu zdroji, ve kterém se přečte."
	},
	"BUILDSYSTEM_TARGETS": {
		"name": "BUILDSYSTEM_TARGETS",
		"description": "Tato vlastnost adresáře jen pro čtení obsahuje středníky oddělený seznam cílů sestavovacího systému přidaných do adresáře voláními příkazů add_library, add_executable a add_custom_target. Seznam nezahrnuje žádné importované cíle nebo cíle aliasu, ale zahrnuje knihovny rozhraní. Každá položka v seznamu je logický název cíle vhodný pro předání do parametru TARGET příkazu get_property."
	},
	"CACHE_VARIABLES": {
		"name": "CACHE_VARIABLES",
		"description": "Seznam proměnných mezipaměti dostupných v aktuálním adresáři"
	},
	"CLEAN_NO_CUSTOM": {
		"name": "CLEAN_NO_CUSTOM",
		"description": "Nastavením na hodnotu true můžete určit, že generátory Makefile nemají odebírat výstupy vlastních příkazů pro tento adresář během operace čištění. Toto nastavení se u jiných generátorů ignoruje, protože ho není možné implementovat."
	},
	"CMAKE_CONFIGURE_DEPENDS": {
		"name": "CMAKE_CONFIGURE_DEPENDS",
		"description": "Oznamte nástroji CMake další vstupní soubory pro proces konfigurace. Pokud se změní nějaký uvedený soubor, sestavovací systém znovu spustí CMake, aby se soubor překonfiguroval a znovu generoval sestavovací systém."
	},
	"COMPILE_DEFINITIONS": {
		"name": "COMPILE_DEFINITIONS",
		"description": "Definice preprocesoru pro kompilování zdrojů adresáře"
	},
	"COMPILE_DEFINITIONS_<CONFIG>": {
		"name": "COMPILE_DEFINITIONS_<CONFIG>",
		"description": "Ignorováno. Viz zásada CMP0043 pro CMake."
	},
	"COMPILE_OPTIONS": {
		"name": "COMPILE_OPTIONS",
		"description": "Seznam možností, které mají být předány kompilátoru"
	},
	"DEFINITIONS": {
		"name": "DEFINITIONS",
		"description": "Pouze z důvodů kompatibility s CMake 2.4. Místo toho použijte COMPILE_DEFINITIONS."
	},
	"EXCLUDE_FROM_ALL": {
		"name": "EXCLUDE_FROM_ALL",
		"description": "Nastavte tuto vlastnost adresáře na hodnotu true v podadresáři, aby se vyloučily jeho cíle z cíle „všechny“ jeho nadřazených prvků. Pokud jsou vyloučené, spuštění například v nadřazeném adresáři ve výchozím nastavení nevytvoří cíle v podadresáři. Toto nemá vliv na cíl „všechny“ samotného podadresáře. Spuštění například uvnitř podadresáře i tak vytvoří jeho cíle."
	},
	"IMPLICIT_DEPENDS_INCLUDE_TRANSFORM": {
		"name": "IMPLICIT_DEPENDS_INCLUDE_TRANSFORM",
		"description": "Umožňuje zadat transformace řádku #include pro závislosti v adresáři."
	},
	"IMPORTED_TARGETS": {
		"name": "IMPORTED_TARGETS",
		"description": "Tato vlastnost adresáře jen pro čtení obsahuje středníky oddělený seznam importovaných cílů přidaných do adresáře voláními příkazů add_library a add_executable. Každá položka v seznamu je logický název cíle vhodný pro předání do možnosti TARGET příkazu get_property při volání ve stejném adresáři."
	},
	"INCLUDE_DIRECTORIES": {
		"name": "INCLUDE_DIRECTORIES",
		"description": "Seznam adresářů pro hledání souborů zahrnutí preprocesoru"
	},
	"INCLUDE_REGULAR_EXPRESSION": {
		"name": "INCLUDE_REGULAR_EXPRESSION",
		"description": "Umožňuje zahrnout regulární výraz pro skenování souborů."
	},
	"INTERPROCEDURAL_OPTIMIZATION": {
		"name": "INTERPROCEDURAL_OPTIMIZATION",
		"description": "Tato vlastnost adresáře již neexistuje."
	},
	"INTERPROCEDURAL_OPTIMIZATION_<CONFIG>": {
		"name": "INTERPROCEDURAL_OPTIMIZATION_<CONFIG>",
		"description": "Tato vlastnost adresáře již neexistuje."
	},
	"LABELS": {
		"name": "LABELS",
		"description": "Zadejte seznam textových popisků přidružených k adresáři a všem jeho podadresářům. Toto odpovídá nastavení cílové vlastnosti LABELS (POPISKY) a vlastnosti testu LABELS u všech cílů a testů v aktuálním adresáři a podadresářích. Poznámka: Aby spouštěcí programy rozšířily popisky na cíle, musí být povolené."
	},
	"LINK_DIRECTORIES": {
		"name": "LINK_DIRECTORIES",
		"description": "Seznam vyhledávacích adresářů propojovacího programu (linkeru)"
	},
	"LINK_OPTIONS": {
		"name": "LINK_OPTIONS",
		"description": "Seznam možností, které se mají použít pro krok propojení sdílené knihovny, modulu a spustitelného souboru jako cílů i pro krok propojení zařízení"
	},
	"LISTFILE_STACK": {
		"name": "LISTFILE_STACK",
		"description": "Aktuální zásobník zpracovávaných souborů seznamů"
	},
	"MACROS": {
		"name": "MACROS",
		"description": "Seznam příkazů makra dostupný v aktuálním adresáři"
	},
	"PARENT_DIRECTORY": {
		"name": "PARENT_DIRECTORY",
		"description": "Zdrojový adresář, který přidal aktuální podadresář"
	},
	"RULE_LAUNCH_COMPILE": {
		"name": "RULE_LAUNCH_COMPILE",
		"description": "Umožňuje zadat spouštěč pro pravidla kompilace."
	},
	"RULE_LAUNCH_CUSTOM": {
		"name": "RULE_LAUNCH_CUSTOM",
		"description": "Umožňuje zadat spouštěč pro vlastní pravidla."
	},
	"RULE_LAUNCH_LINK": {
		"name": "RULE_LAUNCH_LINK",
		"description": "Umožňuje zadat spouštěč pro pravidla odkazů."
	},
	"SOURCE_DIR": {
		"name": "SOURCE_DIR",
		"description": "Tato vlastnost adresáře jen pro čtení hlásí absolutní cestu ke zdrojovému adresáři, ve kterém se přečte."
	},
	"SUBDIRECTORIES": {
		"name": "SUBDIRECTORIES",
		"description": "Tato vlastnost adresáře jen pro čtení obsahuje středníky oddělený seznam podadresářů doposud zpracovaných příkazy add_subdirectory nebo subdirs. Každá položka je absolutní cesta ke zdrojovému adresáři (obsahujícímu soubor CMakeLists.txt). Toto je vhodné předat do parametru DIRECTORY (ADRESÁŘ) příkazu get_property."
	},
	"SYSTEM": {
		"name": "SYSTEM",
		"description": "Tato vlastnost adresáře slouží k inicializaci cílové vlastnosti SYSTEM pro neimportované cíle vytvořené v tomto adresáři. Nastaví se na hodnotu true příkazy add_subdirectory a FetchContent_Declare, pokud je možnost SYSTEM uvedená jako argument těchto příkazů."
	},
	"TESTS": {
		"name": "TESTS",
		"description": "Seznam testů"
	},
	"TEST_INCLUDE_FILE": {
		"name": "TEST_INCLUDE_FILE",
		"description": "Zastaralé. Místo toho použijte TEST_INCLUDE_FILES."
	},
	"TEST_INCLUDE_FILES": {
		"name": "TEST_INCLUDE_FILES",
		"description": "Seznam souborů cmake, které budou zahrnuty, když se spustí ctest"
	},
	"VARIABLES": {
		"name": "VARIABLES",
		"description": "Seznam proměnných definovaných v aktuálním adresáři"
	},
	"VS_GLOBAL_SECTION_POST_<section>": {
		"name": "VS_GLOBAL_SECTION_POST_<section>",
		"description": "Zadejte globální oddíl postSolution v sadě Visual Studio."
	},
	"VS_GLOBAL_SECTION_PRE_<section>": {
		"name": "VS_GLOBAL_SECTION_PRE_<section>",
		"description": "Zadejte globální oddíl preSolution v sadě Visual Studio."
	},
	"VS_STARTUP_PROJECT": {
		"name": "VS_STARTUP_PROJECT",
		"description": "Zadejte výchozí spouštěný projekt v řešení sady Visual Studio."
	},
	"ALLOW_DUPLICATE_CUSTOM_TARGETS": {
		"name": "ALLOW_DUPLICATE_CUSTOM_TARGETS",
		"description": "Povolí vytváření duplicitních vlastních cílů."
	},
	"AUTOGEN_SOURCE_GROUP": {
		"name": "AUTOGEN_SOURCE_GROUP",
		"description": "Název source_group pro soubory generované funkcemi AUTOMOC, AUTORCC a AUTOUIC"
	},
	"AUTOGEN_TARGETS_FOLDER": {
		"name": "AUTOGEN_TARGETS_FOLDER",
		"description": "Název parametru FOLDER pro cíle *_autogen, které CMake automaticky přidává pro cíle s povolenou možností AUTOMOC"
	},
	"AUTOMOC_SOURCE_GROUP": {
		"name": "AUTOMOC_SOURCE_GROUP",
		"description": "Název source_group pro vygenerované soubory AUTOMOC"
	},
	"AUTOMOC_TARGETS_FOLDER": {
		"name": "AUTOMOC_TARGETS_FOLDER",
		"description": "Název parametru FOLDER pro cíle *_autogen, které CMake automaticky přidává pro cíle s povolenou možností AUTOMOC"
	},
	"AUTORCC_SOURCE_GROUP": {
		"name": "AUTORCC_SOURCE_GROUP",
		"description": "Název source_group pro soubory generované autorcc"
	},
	"AUTOUIC_SOURCE_GROUP": {
		"name": "AUTOUIC_SOURCE_GROUP",
		"description": "Název source_group pro soubory generované funkcí AUTOUIC"
	},
	"CMAKE_CUDA_KNOWN_FEATURES": {
		"name": "CMAKE_CUDA_KNOWN_FEATURES",
		"description": "Seznam funkcí jazyka CUDA známých v této verzi nástroje CMake"
	},
	"CMAKE_CXX_KNOWN_FEATURES": {
		"name": "CMAKE_CXX_KNOWN_FEATURES",
		"description": "Seznam funkcí jazyka C++ známých v této verzi nástroje CMake"
	},
	"CMAKE_C_KNOWN_FEATURES": {
		"name": "CMAKE_C_KNOWN_FEATURES",
		"description": "Seznam funkcí jazyka C známých v této verzi nástroje CMake"
	},
	"CMAKE_HIP_KNOWN_FEATURES": {
		"name": "CMAKE_HIP_KNOWN_FEATURES",
		"description": "Seznam funkcí HIP známých v této verzi nástroje CMake"
	},
	"CMAKE_ROLE": {
		"name": "CMAKE_ROLE",
		"description": "Sděluje, v jakém režimu je aktuální spuštěný skript. Může mít jednu z několika hodnot:"
	},
	"DEBUG_CONFIGURATIONS": {
		"name": "DEBUG_CONFIGURATIONS",
		"description": "Umožňuje zadat, které konfigurace jsou pro ladění."
	},
	"DISABLED_FEATURES": {
		"name": "DISABLED_FEATURES",
		"description": "Seznam funkcí, které jsou zakázané během doby, kdy je CMake spuštěný"
	},
	"ECLIPSE_EXTRA_CPROJECT_CONTENTS": {
		"name": "ECLIPSE_EXTRA_CPROJECT_CONTENTS",
		"description": "Další obsah, který má být vložen do vygenerovaného souboru cproject Eclipse"
	},
	"ECLIPSE_EXTRA_NATURES": {
		"name": "ECLIPSE_EXTRA_NATURES",
		"description": "Seznam přirozených hodnot, které se mají přidat do vygenerovaného souboru projektu Eclipse"
	},
	"ENABLED_FEATURES": {
		"name": "ENABLED_FEATURES",
		"description": "Seznam funkcí, které jsou povolené během doby, kdy je CMake spuštěný"
	},
	"ENABLED_LANGUAGES": {
		"name": "ENABLED_LANGUAGES",
		"description": "Vlastnost jen pro čtení, která obsahuje seznam aktuálně povolených jazyků"
	},
	"FIND_LIBRARY_USE_LIB32_PATHS": {
		"name": "FIND_LIBRARY_USE_LIB32_PATHS",
		"description": "Určuje, jestli by měl příkaz find_library automaticky hledat v adresářích lib32."
	},
	"FIND_LIBRARY_USE_LIB64_PATHS": {
		"name": "FIND_LIBRARY_USE_LIB64_PATHS",
		"description": "Určuje, jestli by měl příkaz find_library automaticky hledat v adresářích lib64."
	},
	"FIND_LIBRARY_USE_LIBX32_PATHS": {
		"name": "FIND_LIBRARY_USE_LIBX32_PATHS",
		"description": "Určuje, jestli by měl příkaz find_library automaticky hledat v adresářích libx32."
	},
	"FIND_LIBRARY_USE_OPENBSD_VERSIONING": {
		"name": "FIND_LIBRARY_USE_OPENBSD_VERSIONING",
		"description": "Určuje, jestli by měl příkaz find_library vyhledat sdílené knihovny ve stylu OpenBSD."
	},
	"GENERATOR_IS_MULTI_CONFIG": {
		"name": "GENERATOR_IS_MULTI_CONFIG",
		"description": "Vlastnost jen pro čtení, která je pravdivá u generátorů s více konfiguracemi"
	},
	"GLOBAL_DEPENDS_DEBUG_MODE": {
		"name": "GLOBAL_DEPENDS_DEBUG_MODE",
		"description": "Umožňuje povolit režim ladění globálního cílového grafu závislosti."
	},
	"GLOBAL_DEPENDS_NO_CYCLES": {
		"name": "GLOBAL_DEPENDS_NO_CYCLES",
		"description": "Umožňuje zakázat cykly globálního cílového grafu závislosti."
	},
	"INSTALL_PARALLEL": {
		"name": "INSTALL_PARALLEL",
		"description": "Povolí možnost paralelní instalace pro generátor Ninja."
	},
	"IN_TRY_COMPILE": {
		"name": "IN_TRY_COMPILE",
		"description": "Vlastnost jen pro čtení, která má hodnotu true při konfiguraci s pokusem o kompilaci"
	},
	"JOB_POOLS": {
		"name": "JOB_POOLS",
		"description": "Pouze Ninja: seznam dostupných fondů"
	},
	"PACKAGES_FOUND": {
		"name": "PACKAGES_FOUND",
		"description": "Seznam balíčků, které se našly během doby, kdy byl CMake spuštěný"
	},
	"PACKAGES_NOT_FOUND": {
		"name": "PACKAGES_NOT_FOUND",
		"description": "Seznam balíčků, které se nenašly během doby, kdy byl CMake spuštěný"
	},
	"PREDEFINED_TARGETS_FOLDER": {
		"name": "PREDEFINED_TARGETS_FOLDER",
		"description": "Název FOLDER (SLOŽKY) pro cíle, které jsou automaticky přidávány nástroji CMake"
	},
	"PROPAGATE_TOP_LEVEL_INCLUDES_TO_TRY_COMPILE": {
		"name": "PROPAGATE_TOP_LEVEL_INCLUDES_TO_TRY_COMPILE",
		"description": "Když je tato globální vlastnost nastavená na true, proměnná CMAKE_PROJECT_TOP_LEVEL_INCLUDES se rozšíří do volání try_compile, která používají podpis celého projektu. Na volání podpisu zdrojového souboru nemá tato vlastnost vliv. Vlastnost PROPAGATE_TOP_LEVEL_INCLUDES_TO_TRY_COMPILE je ve výchozím nastavení nenastavená."
	},
	"REPORT_UNDEFINED_PROPERTIES": {
		"name": "REPORT_UNDEFINED_PROPERTIES",
		"description": "Pokud je možnost nastavená, budou se všechny nedefinované vlastnosti hlásit do tohoto souboru."
	},
	"RULE_MESSAGES": {
		"name": "RULE_MESSAGES",
		"description": "Určete, jestli se má hlásit zpráva pro každé vytvářecí pravidlo."
	},
	"TARGET_ARCHIVES_MAY_BE_SHARED_LIBS": {
		"name": "TARGET_ARCHIVES_MAY_BE_SHARED_LIBS",
		"description": "Umožňuje nastavit, jestli je možné pojmenovat sdílené knihovny jako archivy."
	},
	"TARGET_MESSAGES": {
		"name": "TARGET_MESSAGES",
		"description": "Umožňuje zadat, jestli se má hlásit dokončení každého cíle."
	},
	"TARGET_SUPPORTS_SHARED_LIBS": {
		"name": "TARGET_SUPPORTS_SHARED_LIBS",
		"description": "Podporuje cílová platforma sdílené knihovny."
	},
	"USE_FOLDERS": {
		"name": "USE_FOLDERS",
		"description": "Určuje, jestli se má použít cílová vlastnost FOLDER k uspořádání cílů do složek. Chování určuje hodnota USE_FOLDERS na konci souboru CMakeLists.txt nejvyšší úrovně."
	},
	"XCODE_EMIT_EFFECTIVE_PLATFORM_NAME": {
		"name": "XCODE_EMIT_EFFECTIVE_PLATFORM_NAME",
		"description": "Řídit generování EFFECTIVE_PLATFORM_NAME generátorem Xcode"
	},
	"CPACK_DESKTOP_SHORTCUTS": {
		"name": "CPACK_DESKTOP_SHORTCUTS",
		"description": "Určuje seznam názvů zástupců, které mají být vytvořeny na ploše pro tento soubor."
	},
	"CPACK_NEVER_OVERWRITE": {
		"name": "CPACK_NEVER_OVERWRITE",
		"description": "Vytvoří žádost, aby se tento soubor nepřepisoval při instalaci nebo přeinstalaci."
	},
	"CPACK_PERMANENT": {
		"name": "CPACK_PERMANENT",
		"description": "Vytvoří žádost, aby se tento soubor neodebíral při odinstalaci."
	},
	"CPACK_STARTUP_SHORTCUTS": {
		"name": "CPACK_STARTUP_SHORTCUTS",
		"description": "Určuje seznam názvů zástupců, které mají být vytvořeny ve složce Po spuštění pro tento soubor."
	},
	"CPACK_START_MENU_SHORTCUTS": {
		"name": "CPACK_START_MENU_SHORTCUTS",
		"description": "Určuje seznam názvů zástupců, které mají být vytvořeny v nabídce Start pro tento soubor."
	},
	"CPACK_WIX_ACL": {
		"name": "CPACK_WIX_ACL",
		"description": "Určuje přístupová oprávnění k souborům nebo adresářům nainstalovaným instalační službou WiX."
	},
	"ABSTRACT": {
		"name": "ABSTRACT",
		"description": "Určuje, jestli tento zdrojový soubor je abstraktní třída."
	},
	"AUTORCC_OPTIONS": {
		"name": "AUTORCC_OPTIONS",
		"description": "Další možnosti pro rcc při použití AUTORCC"
	},
	"AUTOUIC_OPTIONS": {
		"name": "AUTOUIC_OPTIONS",
		"description": "Další možnosti pro uic při použití AUTOUIC"
	},
	"COMPILE_FLAGS": {
		"name": "COMPILE_FLAGS",
		"description": "Další příznaky, které se mají přidat při kompilaci tohoto zdrojového souboru"
	},
	"CXX_SCAN_FOR_MODULES": {
		"name": "CXX_SCAN_FOR_MODULES",
		"description": "CXX_SCAN_FOR_MODULES je logická hodnota určující, jestli CMake vyhledá ve zdroji závislosti modulu C++. Nastavení pro celý cíl najdete také v CXX_SCAN_FOR_MODULES."
	},
	"EXTERNAL_OBJECT": {
		"name": "EXTERNAL_OBJECT",
		"description": "Pokud je možnost nastavená na hodnotu true, pak jde o soubor objektu."
	},
	"Fortran_FORMAT": {
		"name": "Fortran_FORMAT",
		"description": "Nastavením hodnoty FIXED nebo FREE můžete určit rozložení zdroje v jazyce Fortran."
	},
	"Fortran_PREPROCESS": {
		"name": "Fortran_PREPROCESS",
		"description": "Řídí, jestli má být zdrojový soubor Fortran bezpodmínečně předzpracován."
	},
	"GENERATED": {
		"name": "GENERATED",
		"description": "Je tento zdrojový soubor vygenerovaný jako součást sestavení nebo procesu CMake."
	},
	"HEADER_FILE_ONLY": {
		"name": "HEADER_FILE_ONLY",
		"description": "Je tento zdrojový soubor jenom soubor hlavičky."
	},
	"KEEP_EXTENSION": {
		"name": "KEEP_EXTENSION",
		"description": "Umožňuje nastavit, aby výstupní soubor měl stejnou příponu jako zdrojový soubor."
	},
	"LANGUAGE": {
		"name": "LANGUAGE",
		"description": "Zadejte programovací jazyk, ve kterém je napsaný zdrojový soubor."
	},
	"LOCATION": {
		"name": "LOCATION",
		"description": "Úplná cesta ke zdrojovému souboru"
	},
	"MACOSX_PACKAGE_LOCATION": {
		"name": "MACOSX_PACKAGE_LOCATION",
		"description": "Umožňuje umístit zdrojový soubor uvnitř balíčku aplikace (MACOSX_BUNDLE), balíčku Foundation Core (BUNDLE) nebo balíčku architektury (FRAMEWORK). Platí pro macOS a iOS."
	},
	"OBJECT_DEPENDS": {
		"name": "OBJECT_DEPENDS",
		"description": "Další soubory, na kterých závisí zkompilovaný soubor objektu"
	},
	"OBJECT_OUTPUTS": {
		"name": "OBJECT_OUTPUTS",
		"description": "Další výstupy pro pravidlo generátorů Ninja nebo Makefile"
	},
	"SKIP_AUTOGEN": {
		"name": "SKIP_AUTOGEN",
		"description": "Umožňuje vyloučit zdrojový soubor ze zpracování AUTOMOC, AUTOUIC a AUTORCC (pro projekty Qt)."
	},
	"SKIP_AUTOMOC": {
		"name": "SKIP_AUTOMOC",
		"description": "Umožňuje vyloučit zdrojový soubor ze zpracování AUTOMOC (pro projekty Qt)."
	},
	"SKIP_AUTORCC": {
		"name": "SKIP_AUTORCC",
		"description": "Umožňuje vyloučit zdrojový soubor ze zpracování AUTORCC (pro projekty Qt)."
	},
	"SKIP_AUTOUIC": {
		"name": "SKIP_AUTOUIC",
		"description": "Umožňuje vyloučit zdrojový soubor ze zpracování AUTOUIC (pro projekty Qt)."
	},
	"SKIP_LINTING": {
		"name": "SKIP_LINTING",
		"description": "Tato vlastnost umožňuje vyloučit konkrétní zdrojový soubor z procesu lintování. Proces lintování zahrnuje spouštění nástrojů, jako jsou <LANG>_CPPLINT, <LANG>_CLANG_TIDY, <LANG>_CPPCHECK a <LANG>_INCLUDE_WHAT_YOU_USE na zdrojových souborech, a také kompilaci souborů hlaviček v rámci VERIFY_INTERFACE_HEADER_SETS. Nastavením SKIP_LINTING na zdrojovém souboru se uvedené nástroje pro lintování pro daný soubor nespustí."
	},
	"SKIP_PRECOMPILE_HEADERS": {
		"name": "SKIP_PRECOMPILE_HEADERS",
		"description": "Určuje, jestli tento zdrojový soubor funkce PRECOMPILE_HEADERS vynechává."
	},
	"SKIP_UNITY_BUILD_INCLUSION": {
		"name": "SKIP_UNITY_BUILD_INCLUSION",
		"description": "Nastavení této vlastnosti na hodnotu true zajišťuje, že sestavení unity vynechají zdrojový soubor v případě, že jeho přidružený cíl má vlastnost UNITY_BUILD nastavenou na hodnotu true. Zdrojový soubor se místo toho zkompiluje samostatně stejným způsobem jako se zakázanými sestaveními unity."
	},
	"Swift_DEPENDENCIES_FILE": {
		"name": "Swift_DEPENDENCIES_FILE",
		"description": "Tato vlastnost nastavuje cestu pro soubor závislosti Swift (swiftdeps) pro zdroj. Pokud není zadaná, bude výchozí <OBJECT>.swiftdeps."
	},
	"Swift_DIAGNOSTICS_FILE": {
		"name": "Swift_DIAGNOSTICS_FILE",
		"description": "Tato vlastnost řídí, kde je serializována diagnostika Swift."
	},
	"SYMBOLIC": {
		"name": "SYMBOLIC",
		"description": "Je to jen název pro pravidlo."
	},
	"UNITY_GROUP": {
		"name": "UNITY_GROUP",
		"description": "Tato vlastnost řídí, kterého bloku bude zdroj součástí, když je vlastnost UNITY_BUILD_MODE nastavená na hodnotu GROUP (SKUPINA)."
	},
	"VS_COPY_TO_OUT_DIR": {
		"name": "VS_COPY_TO_OUT_DIR",
		"description": "Nastaví značku <CopyToOutputDirectory> pro zdrojový soubor v souboru projektu sady Visual Studio. Platné hodnoty jsou Never, Always a PreserveNewest."
	},
	"VS_CSHARP_<tagname>": {
		"name": "VS_CSHARP_<tagname>",
		"description": "Konfigurace specifická pro konkrétní zdrojový soubor sady Visual Studio a CSharp"
	},
	"VS_DEPLOYMENT_CONTENT": {
		"name": "VS_DEPLOYMENT_CONTENT",
		"description": "Umožňuje označit zdrojový soubor jako obsah pro nasazení s aplikací pro Windows Phone nebo Windows Store, když se sestaví pomocí generátorů <cmake-generators(7)> sady Visual Studio. Hodnota musí být 1 nebo 0 a může používat výrazy generátoru <cmake-generator-expressions(7)> při rozhodování na základě konfigurace sestavení. Položka zdrojového souboru .vcxproj bude označena DeploymentContent nebo ExcludedFromBuild pro hodnoty 1 a 0 v uvedeném pořadí."
	},
	"VS_DEPLOYMENT_LOCATION": {
		"name": "VS_DEPLOYMENT_LOCATION",
		"description": "Určuje umístění nasazení pro zdrojový soubor obsahu u aplikace pro Windows Phone nebo Windows Store, když se sestaví pomocí generátorů <cmake-generators(7)> sady Visual Studio. Tato vlastnost je použitelná jenom při použití možnosti VS_DEPLOYMENT_CONTENT. Hodnota představuje relativní cestu k balíčku aplikace a platí pro všechny konfigurace."
	},
	"VS_INCLUDE_IN_VSIX": {
		"name": "VS_INCLUDE_IN_VSIX",
		"description": "Logická vlastnost, která určuje, jestli se soubor má zahrnout do balíčku rozšíření VSIX (Visual Studio Integration Extension). Je potřebná při vývoji rozšíření sady Visual Studio."
	},
	"VS_RESOURCE_GENERATOR": {
		"name": "VS_RESOURCE_GENERATOR",
		"description": "Tato vlastnost umožňuje zadat generátor prostředků, který se použije pro tento soubor. Pokud se nenastaví, výchozí možností je PublicResXFileCodeGenerator."
	},
	"VS_SETTINGS": {
		"name": "VS_SETTINGS",
		"description": "Nastaví metadata kterékoli položky v souboru."
	},
	"VS_SHADER_DISABLE_OPTIMIZATIONS": {
		"name": "VS_SHADER_DISABLE_OPTIMIZATIONS",
		"description": "Zakažte optimalizace kompilátoru pro zdrojový soubor .hlsl. Tím se do příkazového řádku přidá příznak -Od pro nástroj FxCompiler. Pokud chcete optimalizace kompilátoru zakázat, zadejte pro tuto vlastnost hodnotu true."
	},
	"VS_SHADER_ENABLE_DEBUG": {
		"name": "VS_SHADER_ENABLE_DEBUG",
		"description": "Povolte informace pro ladění pro zdrojový soubor .hlsl. Tím se do příkazového řádku přidá příznak -Zi pro nástroj FxCompiler. Pokud chcete pro zkompilovaný shader generovat informace o ladění, zadejte pro tuto vlastnost hodnotu true."
	},
	"VS_SHADER_ENTRYPOINT": {
		"name": "VS_SHADER_ENTRYPOINT",
		"description": "Určuje název vstupního bodu pro shader zdrojového souboru .hlsl."
	},
	"VS_SHADER_FLAGS": {
		"name": "VS_SHADER_FLAGS",
		"description": "Umožňuje nastavit další příznaky shaderu sady Visual Studio zdrojového souboru .hlsl."
	},
	"VS_SHADER_MODEL": {
		"name": "VS_SHADER_MODEL",
		"description": "Určuje model shaderu zdrojového souboru .hlsl. Některé typy shaderů se dají použít jen s novějšími modely shaderů."
	},
	"VS_SHADER_OBJECT_FILE_NAME": {
		"name": "VS_SHADER_OBJECT_FILE_NAME",
		"description": "Určuje název souboru zkompilovaného souboru objektu shaderu pro zdrojový soubor .hlsl. Tato možnost přidá do příkazového řádku nástroje FxCompuler příznak -Fo."
	},
	"VS_SHADER_OUTPUT_HEADER_FILE": {
		"name": "VS_SHADER_OUTPUT_HEADER_FILE",
		"description": "Nastavte název souboru pro výstupní soubor hlaviček, který obsahuje objektový kód zdrojového souboru .hlsl."
	},
	"VS_SHADER_TYPE": {
		"name": "VS_SHADER_TYPE",
		"description": "Umožňuje nastavit typ shaderu sady Visual Studio zdrojového souboru .hlsl."
	},
	"VS_SHADER_VARIABLE_NAME": {
		"name": "VS_SHADER_VARIABLE_NAME",
		"description": "Nastavte název proměnné v souboru hlaviček, který obsahuje objektový kód zdrojového souboru .hlsl."
	},
	"VS_TOOL_OVERRIDE": {
		"name": "VS_TOOL_OVERRIDE",
		"description": "Přepište výchozí nástroj Visual Studio, který se použije pro zdrojový soubor, novým nástrojem, který se nezakládá na příponě souboru."
	},
	"VS_XAML_TYPE": {
		"name": "VS_XAML_TYPE",
		"description": "Označte zdrojový soubor XAML (Extensible Application Markup Language) jako jiný typ, než je výchozí typ Stránka. Nejběžnější použití by bylo nastavit výchozí soubor App.xaml na ApplicationDefinition."
	},
	"WRAP_EXCLUDE": {
		"name": "WRAP_EXCLUDE",
		"description": "Vyloučit tento zdrojový soubor ze všech technik balení kódu"
	},
	"XCODE_EXPLICIT_FILE_TYPE": {
		"name": "XCODE_EXPLICIT_FILE_TYPE",
		"description": "Nastavte atribut Xcode explicitFileType v jeho odkazu na zdrojový soubor. CMake vypočítá výchozí hodnotu podle přípony souboru, ale pomocí této vlastnosti je možné určit hodnotu explicitně."
	},
	"XCODE_FILE_ATTRIBUTES": {
		"name": "XCODE_FILE_ATTRIBUTES",
		"description": "Přidejte hodnoty do nastavení Xcode ATTRIBUTES v jeho odkazu na zdrojový soubor. Kromě jiného se tato možnost dá použít k nastavení role v souboru .mig:"
	},
	"XCODE_LAST_KNOWN_FILE_TYPE": {
		"name": "XCODE_LAST_KNOWN_FILE_TYPE",
		"description": "Nastavte atribut Xcode lastKnownFileType v jeho odkazu na zdrojový soubor. CMake vypočítá výchozí hodnotu podle přípony souboru, ale pomocí této vlastnosti je možné určit hodnotu explicitně."
	},
	"ATTACHED_FILES": {
		"name": "ATTACHED_FILES",
		"description": "Připojí seznam souborů pro odeslání na řídicí panel."
	},
	"ATTACHED_FILES_ON_FAIL": {
		"name": "ATTACHED_FILES_ON_FAIL",
		"description": "Připojí seznam souborů pro odeslání na řídicí panel v případě neúspěšného testu."
	},
	"COST": {
		"name": "COST",
		"description": "Tato vlastnost popisuje náklady testu. Pokud je povoleno paralelní testování, testy v sadě testů budou spuštěny v sestupném pořadí podle nákladů. Projekty mohou explicitně definovat náklady testu nastavením této vlastnosti na hodnotu s pohyblivou desetinnou čárkou."
	},
	"DEPENDS": {
		"name": "DEPENDS",
		"description": "Určuje, že tento test by se měl provést pouze po zadaném seznamu testů."
	},
	"DISABLED": {
		"name": "DISABLED",
		"description": "Pokud je možnost nastavená na hodnotu True, test bude přeskočen a jeho stav bude Nespuštěno. Test ve stavu DISABLED (ZAKÁZÁNO) se nebude počítat do celkového počtu testů a jeho stav dokončení se bude hlásit do CDash jako Zakázáno."
	},
	"ENVIRONMENT": {
		"name": "ENVIRONMENT",
		"description": "Umožňuje zadat proměnné prostředí, které by měly být definovány pro spuštění testu."
	},
	"ENVIRONMENT_MODIFICATION": {
		"name": "ENVIRONMENT_MODIFICATION",
		"description": "Zadejte proměnné prostředí, které by se měly upravit pro spuštění testu. Poznámka: Operace prováděné touto vlastností se provádějí až po zavedení vlastnosti ENVIRONMENT."
	},
	"FAIL_REGULAR_EXPRESSION": {
		"name": "FAIL_REGULAR_EXPRESSION",
		"description": "Pokud se výstup testu (stdout nebo stderr) shoduje s tímto regulárním výrazem, test se nezdaří, a to bez ohledu na ukončovací kód procesu. Testy, které překročí časový limit určený parametrem TIMEOUT, selžou bez ohledu na FAIL_REGULAR_EXPRESSION. Při jakémkoli selhání testu s nenulovým návratovým kódem nebo selhání testu na úrovni systému, včetně chyb segmentace, přerušení signálu nebo chyb haldy, test selže, i když regulární výraz neodpovídá."
	},
	"FIXTURES_CLEANUP": {
		"name": "FIXTURES_CLEANUP",
		"description": "Určuje seznam testovacích přípravků, u kterých se má test považovat za čisticí test. Názvy těchto testovacích přípravků se liší od názvů testovacích případů a nemusí být nijak podobné názvům testů, které jsou k nim přidružené."
	},
	"FIXTURES_REQUIRED": {
		"name": "FIXTURES_REQUIRED",
		"description": "Určuje seznam testovacích přípravků, které test vyžaduje. V názvech testovacích přípravků se rozlišují malá a velká písmena a nemusí být nijak podobné názvům testů."
	},
	"FIXTURES_SETUP": {
		"name": "FIXTURES_SETUP",
		"description": "Určuje seznam testovacích přípravků, u kterých se má test považovat za nastavovací test. Názvy těchto testovacích přípravků se liší od názvů testovacích případů a nemusí být nijak podobné názvům testů, které jsou k nim přidružené."
	},
	"GENERATED_RESOURCE_SPEC_FILE": {
		"name": "GENERATED_RESOURCE_SPEC_FILE",
		"description": "Cesta k dynamicky generovanému souboru specifikace prostředku <ctest-resource-dynamically-generated-spec-file> vygenerovaný tímto testem."
	},
	"MEASUREMENT": {
		"name": "MEASUREMENT",
		"description": "Umožňuje určit měření a hodnotu CDASH, které se mají hlásit pro test."
	},
	"PASS_REGULAR_EXPRESSION": {
		"name": "PASS_REGULAR_EXPRESSION",
		"description": "Výstup testu (stdout nebo stderr) se musí shodovat s tímto regulárním výrazem, aby byl test úspěšný. Ukončovací kód procesu je ignorován. Testy, které překročí časový limit určený parametrem TIMEOUT, selžou bez ohledu na PASS_REGULAR_EXPRESSION. Selhání testu na úrovni systému, včetně chyb segmentace, přerušení signálu nebo chyb haldy, může vést k selhání testu, a to i v případě shody s PASS_REGULAR_EXPRESSION."
	},
	"PROCESSORS": {
		"name": "PROCESSORS",
		"description": "Nastavením této možnosti určíte, kolik slotů procesů tento test vyžaduje. Pokud není možnost nastavená, je výchozí hodnota 1 procesor."
	},
	"PROCESSOR_AFFINITY": {
		"name": "PROCESSOR_AFFINITY",
		"description": "Když je nastavená na hodnotu true, požádá CTest, aby spustil testovací proces se spřažením procesorů pro pevnou sadu procesorů. Pokud je možnost povolená a podporovaná pro aktuální platformu, zvolí CTest sadu procesorů, které umístí do masky spřažení procesorů při spouštění testovacího procesu. Počet procesorů v sadě je určený vlastností testu PROCESSORS nebo počtem procesorů dostupných CTestu, podle toho, co je menší. Sada zvolených procesorů bude oddělená od procesorů přiřazených jiným souběžně spuštěným testům, které mají také povolenou vlastnost PROCESSOR_AFFINITY."
	},
	"REQUIRED_FILES": {
		"name": "REQUIRED_FILES",
		"description": "Seznam souborů potřebných ke spuštění testu. Názvy souborů jsou relativní k testovacímu WORKING_DIRECTORY, pokud není zadána absolutní cesta."
	},
	"RESOURCE_GROUPS": {
		"name": "RESOURCE_GROUPS",
		"description": "Zadejte prostředky požadované testem seskupené způsobem, který je pro test smysluplný. Další informace o tom, jak se tato vlastnost integruje do funkce přidělování prostředků CTest, najdete v <ctest-resource-allocation> přidělování prostředků."
	},
	"RESOURCE_LOCK": {
		"name": "RESOURCE_LOCK",
		"description": "Umožňuje zadat seznam prostředků, které jsou tímto testem zamknuté."
	},
	"RUN_SERIAL": {
		"name": "RUN_SERIAL",
		"description": "Nespouštějte tento test souběžně s žádným jiným testem."
	},
	"SKIP_REGULAR_EXPRESSION": {
		"name": "SKIP_REGULAR_EXPRESSION",
		"description": "Pokud se výstup testu (stderr nebo stdout) shoduje s tímto regulárním výrazem, bude test bez ohledu na ukončovací kód procesu označen jako přeskočený. Testy, které překročí časový limit určený parametrem TIMEOUT, selžou bez ohledu na SKIP_REGULAR_EXPRESSION. Selhání testu na úrovni systému, včetně chyb segmentace, přerušení signálu nebo chyb haldy, může vést k selhání testu, a to i v případě shody regulárního výrazu."
	},
	"SKIP_RETURN_CODE": {
		"name": "SKIP_RETURN_CODE",
		"description": "Návratový kód k označení testu jako přeskočeného"
	},
	"TIMEOUT": {
		"name": "TIMEOUT",
		"description": "Počet sekund povolený pro tento test"
	},
	"TIMEOUT_AFTER_MATCH": {
		"name": "TIMEOUT_AFTER_MATCH",
		"description": "Umožňuje změnit časový limit testu po zjištění odpovídajícího řádku v jeho výstupu."
	},
	"TIMEOUT_SIGNAL_GRACE_PERIOD": {
		"name": "TIMEOUT_SIGNAL_GRACE_PERIOD",
		"description": "Pokud je nastavená vlastnost testu TIMEOUT_SIGNAL_NAME, určuje tato vlastnost počet sekund, po které se má čekat na ukončení testovacího procesu po odeslání vlastního signálu. Jinak tato vlastnost nemá žádný význam."
	},
	"TIMEOUT_SIGNAL_NAME": {
		"name": "TIMEOUT_SIGNAL_NAME",
		"description": "Zadejte vlastní signál, který se odešle do testovacího procesu při dosažení časového limitu. Tato možnost je dostupná jenom na platformách podporujících signály POSIX. Není k dispozici ve Windows."
	},
	"WILL_FAIL": {
		"name": "WILL_FAIL",
		"description": "Pokud je true, invertuje kritéria úspěšnosti/neúspěšnosti testu. Testy, pro které je WILL_FAIL true, budou neúspěšné s návratovým kódem 0 a úspěšné s nenulovým návratovým kódem. Testy, které překročí časový limit určený parametrem TIMEOUT, selžou bez ohledu na WILL_FAIL. Selhání testu na úrovni systému, včetně chyb segmentace, přerušení signálu nebo chyb haldy, může vést k selhání testu, a to i v případě, že WILL_FAIL je true."
	},
	"WORKING_DIRECTORY": {
		"name": "WORKING_DIRECTORY",
		"description": "Adresář, ze kterého se zavolá spustitelný soubor testu"
	},
	"AIX_EXPORT_ALL_SYMBOLS": {
		"name": "AIX_EXPORT_ALL_SYMBOLS",
		"description": "V systému AIX CMake automaticky exportuje všechny symboly ze sdílených knihoven a ze spustitelných souborů s nastavenou cílovou vlastností ENABLE_EXPORTS. Když explicitně vypnete tuto logickou vlastnost, ve výchozím nastavení se potlačí toto chování a neexportují se žádné symboly. V tomto případě se očekává, že projekt použije jiné prostředky k exportu některých symbolů."
	},
	"ALIASED_TARGET": {
		"name": "ALIASED_TARGET",
		"description": "Název cíle, pro který se jako alias používá tento cíl"
	},
	"ALIAS_GLOBAL": {
		"name": "ALIAS_GLOBAL",
		"description": "Vlastnost jen pro čtení, která označuje, jestli je cíl ALIAS globálně viditelný"
	},
	"ANDROID_ANT_ADDITIONAL_OPTIONS": {
		"name": "ANDROID_ANT_ADDITIONAL_OPTIONS",
		"description": "Umožňuje nastavit další možnosti pro sestavovací systém Android Ant. Jde o řetězcovou hodnotu obsahující všechny možnosti příkazového řádku pro sestavení Ant. Tato vlastnost se inicializuje hodnotou proměnné CMAKE_ANDROID_ANT_ADDITIONAL_OPTIONS, pokud je nastavená při vytváření cíle."
	},
	"ANDROID_API": {
		"name": "ANDROID_API",
		"description": "Když se provádí křížová kompilace pro Android pomocí NVIDIA Nsight Tegra Visual Studio Edition, nastavuje tato vlastnost verzi cílového rozhraní API pro Android (například 15). Číslo verze musí být celé kladné číslo v desítkové soustavě. Tato vlastnost se inicializuje hodnotou proměnné CMAKE_ANDROID_API, pokud je nastavená při vytváření cíle."
	},
	"ANDROID_API_MIN": {
		"name": "ANDROID_API_MIN",
		"description": "Umožňuje nastavit minimální verzi rozhraní API pro Android (například 9). Číslo verze musí být celé kladné číslo v desítkové soustavě. Tato vlastnost se inicializuje hodnotou proměnné CMAKE_ANDROID_API_MIN, pokud je nastavená při vytváření cíle. Pomocí této verze rozhraní API se sestavuje nativní kód."
	},
	"ANDROID_ARCH": {
		"name": "ANDROID_ARCH",
		"description": "Když se provádí křížová kompilace pro Android pomocí NVIDIA Nsight Tegra Visual Studio Edition, nastavuje tato vlastnost cílovou architekturu Androidu."
	},
	"ANDROID_ASSETS_DIRECTORIES": {
		"name": "ANDROID_ASSETS_DIRECTORIES",
		"description": "Umožňuje nastavit adresář prostředků pro Android, který se má zkopírovat do hlavní složky s prostředky před sestavením. Jde o řetězcovou vlastnost obsahující cesty k adresářům oddělené středníky. Tato vlastnost se inicializuje hodnotou proměnné CMAKE_ANDROID_ASSETS_DIRECTORIES, pokud je nastavená při vytváření cíle."
	},
	"ANDROID_GUI": {
		"name": "ANDROID_GUI",
		"description": "Když se provádí křížová kompilace pro Android pomocí NVIDIA Nsight Tegra Visual Studio Edition, tato vlastnost určuje, jestli se má sestavit spustitelný soubor jako balíček aplikace pro Android."
	},
	"ANDROID_JAR_DEPENDENCIES": {
		"name": "ANDROID_JAR_DEPENDENCIES",
		"description": "Umožňuje nastavit vlastnost pro Android, která určuje závislosti souborů JAR. Jde o vlastnost s řetězcovou hodnotou. Tuto vlastnost inicializuje hodnota proměnné CMAKE_ANDROID_JAR_DEPENDENCIES, pokud je nastavená při vytváření cíle."
	},
	"ANDROID_JAR_DIRECTORIES": {
		"name": "ANDROID_JAR_DIRECTORIES",
		"description": "Umožňuje nastavit vlastnost pro Android, která určuje adresáře, ve kterých se mají hledat knihovny JAR."
	},
	"ANDROID_JAVA_SOURCE_DIR": {
		"name": "ANDROID_JAVA_SOURCE_DIR",
		"description": "Umožňuje nastavit vlastnost pro Android, která definuje kořenové adresáře se zdrojovým kódem v Javě. Jde o řetězcovou vlastnost obsahující cesty k adresářům oddělené středníky. Tato vlastnost se inicializuje hodnotou proměnné CMAKE_ANDROID_JAVA_SOURCE_DIR, pokud je nastavená při vytváření cíle."
	},
	"ANDROID_NATIVE_LIB_DEPENDENCIES": {
		"name": "ANDROID_NATIVE_LIB_DEPENDENCIES",
		"description": "Umožňuje nastavit vlastnost pro Android, která určuje závislosti souborů .so. Jde o řetězcovou vlastnost."
	},
	"ANDROID_NATIVE_LIB_DIRECTORIES": {
		"name": "ANDROID_NATIVE_LIB_DIRECTORIES",
		"description": "Umožňuje nastavit vlastnost pro Android, která určuje adresáře, ve kterých se mají hledat knihovny .so."
	},
	"ANDROID_PROCESS_MAX": {
		"name": "ANDROID_PROCESS_MAX",
		"description": "Umožňuje nastavit vlastnost pro Android, která definuje maximální počet paralelních procesů kompilátoru NDK (například 4). Tato vlastnost se inicializuje hodnotou proměnné CMAKE_ANDROID_PROCESS_MAX, pokud je nastavená při vytváření cíle."
	},
	"ANDROID_PROGUARD": {
		"name": "ANDROID_PROGUARD",
		"description": "Pokud je tato vlastnost nastavená na hodnotu true, může nástroj ProGuard zmenšovat, optimalizovat a obfuskovat kód odebíráním nepoužívaného kódu a přejmenováváním tříd, polí a metod se sémanticky nejasnými názvy. Tato vlastnost se inicializuje hodnotou proměnné CMAKE_ANDROID_PROGUARD, pokud je nastavená při vytváření cíle."
	},
	"ANDROID_PROGUARD_CONFIG_PATH": {
		"name": "ANDROID_PROGUARD_CONFIG_PATH",
		"description": "Umožňuje nastavit vlastnost pro Android, která určuje umístění konfiguračního souboru ProGuard. Pokud chcete použít výchozí umístění, nechejte hodnotu prázdnou. Jde o řetězcovou vlastnost obsahující cestu ke konfiguračnímu souboru ProGuard. Tuto vlastnost inicializuje hodnota proměnné CMAKE_ANDROID_PROGUARD_CONFIG_PATH, pokud je nastavená při vytváření cíle."
	},
	"ANDROID_SECURE_PROPS_PATH": {
		"name": "ANDROID_SECURE_PROPS_PATH",
		"description": "Umožňuje nastavit vlastnost pro Android, která uvádí umístěná souboru zabezpečených vlastností. Jde o řetězcovou vlastnost obsahující cestu k souboru. Tuto vlastnost inicializuje hodnota proměnné CMAKE_ANDROID_SECURE_PROPS_PATH, pokud je nastavená při vytváření cíle."
	},
	"ANDROID_SKIP_ANT_STEP": {
		"name": "ANDROID_SKIP_ANT_STEP",
		"description": "Umožňuje nastavit vlastnost pro Android, která definuje, jestli se má nebo nemá přeskočit krok sestavení Ant. Jde o logickou hodnotu inicializovanou hodnotou proměnné CMAKE_ANDROID_SKIP_ANT_STEP, pokud je nastavená při vytváření cíle."
	},
	"ANDROID_STL_TYPE": {
		"name": "ANDROID_STL_TYPE",
		"description": "Když se provádí křížová kompilace pro Android pomocí NVIDIA Nsight Tegra Visual Studio Edition, tato vlastnost určuje typ podpory STL pro projekt. Jde o řetězcovou vlastnost, kterou je možné nastavit na jednu z následujících hodnot:"
	},
	"ARCHIVE_OUTPUT_DIRECTORY": {
		"name": "ARCHIVE_OUTPUT_DIRECTORY",
		"description": "Výstupní adresář, ve kterém se mají sestavit cílové soubory XXX"
	},
	"ARCHIVE_OUTPUT_DIRECTORY_<CONFIG>": {
		"name": "ARCHIVE_OUTPUT_DIRECTORY_<CONFIG>",
		"description": "Výstupní podadresář pro jednotlivé konfigurace pro cílové soubory typu ARCHIVE"
	},
	"ARCHIVE_OUTPUT_NAME": {
		"name": "ARCHIVE_OUTPUT_NAME",
		"description": "Název výstupu pro cílové soubory XXX"
	},
	"ARCHIVE_OUTPUT_NAME_<CONFIG>": {
		"name": "ARCHIVE_OUTPUT_NAME_<CONFIG>",
		"description": "Název výstupu pro jednotlivé konfigurace pro cílové soubory typu ARCHIVE"
	},
	"AUTOGEN_BETTER_GRAPH_MULTI_CONFIG": {
		"name": "AUTOGEN_BETTER_GRAPH_MULTI_CONFIG",
		"description": "AUTOGEN_BETTER_GRAPH_MULTI_CONFIG je logická vlastnost, kterou lze v cíli nastavit tak, aby měla lepší graf závislostí pro generátory s více konfiguracemi. Když se tato vlastnost povolí, CMake vygeneruje více cílů pro jednotlivé konfigurace. Graf závislostí tak bude pro generátory s více konfiguracemi přesnější a předejde se některým opětovným kompilacím."
	},
	"AUTOGEN_BUILD_DIR": {
		"name": "AUTOGEN_BUILD_DIR",
		"description": "Adresář, kde AUTOMOC, AUTOUIC a AUTORCC generují soubory pro cíl"
	},
	"AUTOGEN_COMMAND_LINE_LENGTH_MAX": {
		"name": "AUTOGEN_COMMAND_LINE_LENGTH_MAX",
		"description": "Omezení délky příkazového řádku pro cíle autogen, tj. moc nebo uic, které aktivuje použití souborů odpovědí v systému Windows namísto předávání všech argumentů na příkazovém řádku."
	},
	"AUTOGEN_ORIGIN_DEPENDS": {
		"name": "AUTOGEN_ORIGIN_DEPENDS",
		"description": "Přepínač pro předávání závislostí cíle původu příslušnému cíli <ORIGIN>_autogen"
	},
	"AUTOGEN_PARALLEL": {
		"name": "AUTOGEN_PARALLEL",
		"description": "Počet paralelních procesů moc nebo uic, které se mají spustit při použití možností AUTOMOC a AUTOUIC"
	},
	"AUTOGEN_TARGET_DEPENDS": {
		"name": "AUTOGEN_TARGET_DEPENDS",
		"description": "Další závislosti na cíli odpovídajícího cíle <ORIGIN>_autogen"
	},
	"AUTOGEN_USE_SYSTEM_INCLUDE": {
		"name": "AUTOGEN_USE_SYSTEM_INCLUDE",
		"description": "AUTOGEN_USE_SYSTEM_INCLUDE je logická vlastnost, která se dá nastavit v cíli, aby bylo zřejmé, že by se měl do cíle přidat adresář zahrnutí cíle automatického generování jako systémový adresář pro zahrnutí nebo normální adresář pro zahrnutí."
	},
	"AUTOMOC": {
		"name": "AUTOMOC",
		"description": "Určuje, jestli se má cíl zpracovat pomocí funkce auto-moc (pro projekty Qt)."
	},
	"AUTOMOC_COMPILER_PREDEFINES": {
		"name": "AUTOMOC_COMPILER_PREDEFINES",
		"description": "Logická hodnota, kterou AUTOMOC používá k určení, jestli by se měl generovat soubor předběžných definic kompilátoru moc_predefs.h"
	},
	"AUTOMOC_DEPEND_FILTERS": {
		"name": "AUTOMOC_DEPEND_FILTERS",
		"description": "Definice filtrů, které AUTOMOC používá k extrahování názvů souborů ze zdrojového souboru, které jsou registrované jako další závislosti pro soubor moc zdrojového souboru"
	},
	"AUTOMOC_EXECUTABLE": {
		"name": "AUTOMOC_EXECUTABLE",
		"description": "AUTOMOC_EXECUTABLE je cesta k souboru, která odkazuje na spustitelný soubor moc, který se má použít pro soubory s povolenou funkcí AUTOMOC. Nastavení této vlastnosti způsobí, že CMake přeskočí automatické zjišťování binárního souboru moc i testů logičnosti, které se obvykle spouští, aby bylo zajištěno, že je binární soubor k dispozici a funguje podle očekávání."
	},
	"AUTOMOC_MACRO_NAMES": {
		"name": "AUTOMOC_MACRO_NAMES",
		"description": "Středníky oddělený seznam názvů maker, který AUTOMOC používá k určení, jestli moc musí zpracovat soubor C++."
	},
	"AUTOMOC_MOC_OPTIONS": {
		"name": "AUTOMOC_MOC_OPTIONS",
		"description": "Další možnosti pro moc při použití AUTOMOC"
	},
	"AUTOMOC_PATH_PREFIX": {
		"name": "AUTOMOC_PATH_PREFIX",
		"description": "Pokud je tato vlastnost zapnutá, CMake vygeneruje předponový parametr cesty -p pro funkci moc na cílech Qt s povolenou funkcí AUTOMOC."
	},
	"AUTORCC": {
		"name": "AUTORCC",
		"description": "Určuje, jestli se má cíl zpracovat pomocí funkce auto-rcc (pro projekty Qt)."
	},
	"AUTORCC_EXECUTABLE": {
		"name": "AUTORCC_EXECUTABLE",
		"description": "AUTORCC_EXECUTABLE je cesta k souboru, která odkazuje na spustitelný soubor rcc, který se má použít pro soubory s povolenou funkcí AUTORCC. Nastavení této vlastnosti způsobí, že CMake přeskočí automatické zjišťování binárního souboru rcc i testů logičnosti, které se obvykle spouští, aby bylo zajištěno, že je binární soubor k dispozici a funguje podle očekávání."
	},
	"AUTOUIC": {
		"name": "AUTOUIC",
		"description": "Určuje, jestli se má cíl zpracovat pomocí funkce auto-uic (pro projekty Qt)."
	},
	"AUTOUIC_EXECUTABLE": {
		"name": "AUTOUIC_EXECUTABLE",
		"description": "AUTOUIC_EXECUTABLE je cesta k souboru, která odkazuje na spustitelný soubor uic, který se má použít pro soubory s povolenou funkcí AUTOUIC. Nastavení této vlastnosti způsobí, že CMake přeskočí automatické zjišťování binárního souboru uic i testů logičnosti, které se obvykle spouští, aby bylo zajištěno, že je binární soubor k dispozici a funguje podle očekávání."
	},
	"AUTOUIC_SEARCH_PATHS": {
		"name": "AUTOUIC_SEARCH_PATHS",
		"description": "Seznam cest pro vyhledávání, které AUTOUIC používá k hledání zahrnutých souborů .ui"
	},
	"BUILD_RPATH": {
		"name": "BUILD_RPATH",
		"description": "Středníky oddělený seznam určující položky cesty modulu runtime (RPATH), které se mají přidat do binárních souborů propojených ve stromu sestavení (pro platformy, které to podporují). Ve výchozím nastavení CMake nastaví cestu modulu runtime binárních souborů ve stromu sestavení tak, aby obsahovala cesty hledání, o kterých ví, že jsou potřeba k nalezení sdílených knihoven, které propojují. Projekty mohou nastavit BUILD_RPATH a zadat další cesty hledání."
	},
	"BUILD_RPATH_USE_ORIGIN": {
		"name": "BUILD_RPATH_USE_ORIGIN",
		"description": "Určuje, jestli se mají použít relativní cesty pro parametr RPATH sestavení."
	},
	"BUILD_WITH_INSTALL_NAME_DIR": {
		"name": "BUILD_WITH_INSTALL_NAME_DIR",
		"description": "BUILD_WITH_INSTALL_NAME_DIR je logická hodnota určující, jestli install_name cíle v macOS ve stromu sestavení používá adresář určený vlastností INSTALL_NAME_DIR. Toto nastavení platí jenom pro cíle v macOS."
	},
	"BUILD_WITH_INSTALL_RPATH": {
		"name": "BUILD_WITH_INSTALL_RPATH",
		"description": "BUILD_WITH_INSTALL_RPATH je logická hodnota určující, jestli se má cíl ve stromu sestavení propojit s cestou INSTALL_RPATH. Toto nastavení má přednost před nastavením SKIP_BUILD_RPATH a umožňuje vyhnout se před instalací opakovanému propojení."
	},
	"BUNDLE": {
		"name": "BUNDLE",
		"description": "Tento cíl je CFBundle v macOS."
	},
	"BUNDLE_EXTENSION": {
		"name": "BUNDLE_EXTENSION",
		"description": "Přípona souboru, která se má použít k pojmenování cílů typu BUNDLE, FRAMEWORK nebo MACOSX_BUNDLE v systémech macOS a iOS"
	},
	"COMMON_LANGUAGE_RUNTIME": {
		"name": "COMMON_LANGUAGE_RUNTIME",
		"description": "Nastavením této cílové vlastnosti nakonfigurujete cíl na sestavení s podporou C++/CLI."
	},
	"COMPATIBLE_INTERFACE_BOOL": {
		"name": "COMPATIBLE_INTERFACE_BOOL",
		"description": "Vlastnosti, které musí být kompatibilní se svým rozhraním propojení"
	},
	"COMPATIBLE_INTERFACE_NUMBER_MAX": {
		"name": "COMPATIBLE_INTERFACE_NUMBER_MAX",
		"description": "Vlastnosti, u kterých se použije maximální hodnota z propojovacího rozhraní"
	},
	"COMPATIBLE_INTERFACE_NUMBER_MIN": {
		"name": "COMPATIBLE_INTERFACE_NUMBER_MIN",
		"description": "Vlastnosti, u kterých se použije minimální hodnota z propojovacího rozhraní."
	},
	"COMPATIBLE_INTERFACE_STRING": {
		"name": "COMPATIBLE_INTERFACE_STRING",
		"description": "Vlastnosti, které musí mít kompatibilní řetězec se svým rozhraním propojení"
	},
	"COMPILE_FEATURES": {
		"name": "COMPILE_FEATURES",
		"description": "Funkce kompilátoru povolené pro tento cíl"
	},
	"COMPILE_PDB_NAME": {
		"name": "COMPILE_PDB_NAME",
		"description": "Výstupní název pro soubor .pdb symbolu ladění MS vygenerovaný kompilátorem při sestavování zdrojových souborů"
	},
	"COMPILE_PDB_NAME_<CONFIG>": {
		"name": "COMPILE_PDB_NAME_<CONFIG>",
		"description": "Výstupní název podle konfigurace pro soubor .pdb symbolu ladění MS vygenerovaný kompilátorem při sestavování zdrojových souborů"
	},
	"COMPILE_PDB_OUTPUT_DIRECTORY": {
		"name": "COMPILE_PDB_OUTPUT_DIRECTORY",
		"description": "Výstupní adresář pro soubor .pdb symbolu ladění MS vygenerovaný kompilátorem při sestavování zdrojových souborů"
	},
	"COMPILE_PDB_OUTPUT_DIRECTORY_<CONFIG>": {
		"name": "COMPILE_PDB_OUTPUT_DIRECTORY_<CONFIG>",
		"description": "Výstupní adresář podle konfigurace pro soubor .pdb symbolu ladění MS vygenerovaný kompilátorem při sestavování zdrojových souborů"
	},
	"COMPILE_WARNING_AS_ERROR": {
		"name": "COMPILE_WARNING_AS_ERROR",
		"description": "Určete, jestli se mají upozornění při kompilaci zpracovávat jako chyby. Pokud je tato možnost povolená, přidá se příznak pro zpracování upozornění při kompilaci jako chyby. Pokud je na příkazovém řádku cmake zadána možnost cmake --compile-no-warning-as-error, bude tato vlastnost ignorována."
	},
	"<CONFIG>_OUTPUT_NAME": {
		"name": "<CONFIG>_OUTPUT_NAME",
		"description": "Starý základní název cílového souboru podle konfigurace. Místo toho použijte OUTPUT_NAME_."
	},
	"<CONFIG>_POSTFIX": {
		"name": "<CONFIG>_POSTFIX",
		"description": "Přípona k připojení za název cílového souboru pro konfiguraci <CONFIG>"
	},
	"CROSSCOMPILING_EMULATOR": {
		"name": "CROSSCOMPILING_EMULATOR",
		"description": "Použije daný emulátor ke spouštění spustitelných souborů vytvořených při křížovém kompilování. Tento příkaz se přidá jako předpona k příkazům add_test, add_custom_command a add_custom_target pro sestavené cílové spustitelné soubory systému."
	},
	"CUDA_ARCHITECTURES": {
		"name": "CUDA_ARCHITECTURES",
		"description": "Seznam architektur, pro které se má generovat kód zařízení"
	},
	"CUDA_CUBIN_COMPILATION": {
		"name": "CUDA_CUBIN_COMPILATION",
		"description": "Zkompilujte zdroje CUDA do souborů .cubin namísto souborů .obj v knihovnách objektů."
	},
	"CUDA_EXTENSIONS": {
		"name": "CUDA_EXTENSIONS",
		"description": "Logická hodnota určující, jestli se vyžadují rozšíření specifická pro kompilátor"
	},
	"CUDA_FATBIN_COMPILATION": {
		"name": "CUDA_FATBIN_COMPILATION",
		"description": "Zkompilujte zdroje CUDA do souborů .fatbin namísto souborů .obj v knihovnách objektů."
	},
	"CUDA_OPTIX_COMPILATION": {
		"name": "CUDA_OPTIX_COMPILATION",
		"description": "Zkompiluje zdroje CUDA do souborů .optixir namísto souborů .obj v knihovnách objektů."
	},
	"CUDA_PTX_COMPILATION": {
		"name": "CUDA_PTX_COMPILATION",
		"description": "Zkompiluje zdroje CUDA do souborů .ptx namísto souborů .obj v knihovnách objektů."
	},
	"CUDA_RESOLVE_DEVICE_SYMBOLS": {
		"name": "CUDA_RESOLVE_DEVICE_SYMBOLS",
		"description": "Jenom CUDA: Povolí propojení zařízení pro konkrétní cíl knihovny v případě potřeby."
	},
	"CUDA_RUNTIME_LIBRARY": {
		"name": "CUDA_RUNTIME_LIBRARY",
		"description": "Umožňuje vybrat knihovnu runtime CUDA pro použití kompilátory, které cílí na jazyk CUDA."
	},
	"CUDA_SEPARABLE_COMPILATION": {
		"name": "CUDA_SEPARABLE_COMPILATION",
		"description": "Jenom CUDA: Povolí oddělenou kompilaci kódu zařízení."
	},
	"CUDA_STANDARD": {
		"name": "CUDA_STANDARD",
		"description": "Standard CUDA/C++, jehož funkce se vyžadují k sestavení tohoto cíle"
	},
	"CUDA_STANDARD_REQUIRED": {
		"name": "CUDA_STANDARD_REQUIRED",
		"description": "Logická hodnota popisující, jestli je hodnota CUDA_STANDARD požadavek"
	},
	"CXX_EXTENSIONS": {
		"name": "CXX_EXTENSIONS",
		"description": "Logická hodnota určující, jestli se vyžadují rozšíření specifická pro kompilátor"
	},
	"CXX_MODULE_DIRS": {
		"name": "CXX_MODULE_DIRS",
		"description": "Středníky oddělený seznam základních adresářů výchozí sady modulů C++ cíle (tj. sada souborů s názvem a typem CXX_MODULES). Vlastnost podporuje výrazy generátoru <cmake-generator-expressions(7)>."
	},
	"CXX_MODULE_DIRS_<NAME>": {
		"name": "CXX_MODULE_DIRS_<NAME>",
		"description": "Středníky oddělený seznam základních adresářů sady modulů <NAME> C++, který má nastavený typ CXX_MODULES. Vlastnost podporuje výrazy generátoru <cmake-generator-expressions(7)>."
	},
	"CXX_MODULE_SET": {
		"name": "CXX_MODULE_SET",
		"description": "Středníky oddělený seznam souborů ve výchozí sadě modulů C++ cíle (tj. sada souborů s názvem a typem CXX_MODULES). Pokud jsou některé cesty relativní, počítají se relativně ke zdrojovému adresáři cíle. Vlastnost podporuje výrazy generátoru <cmake-generator-expressions(7)>."
	},
	"CXX_MODULE_SETS": {
		"name": "CXX_MODULE_SETS",
		"description": "Seznam sad modulů PRIVATE a PUBLIC C++ cíle jen pro čtení (tj. všechny sady souborů s typem CXX_MODULES). Soubory uvedené v těchto sadách souborů jsou pro účely integrace integrovaného vývojového prostředí považovány za zdrojové soubory."
	},
	"CXX_MODULE_SET_<NAME>": {
		"name": "CXX_MODULE_SET_<NAME>",
		"description": "Středníky oddělený seznam souborů v sadě modulů <NAME> C++, který má nastavený typ CXX_MODULES. Pokud jsou některé cesty relativní, počítají se relativně ke zdrojovému adresáři cíle. Vlastnost podporuje výrazy generátoru <cmake-generator-expressions(7)>."
	},
	"CXX_MODULE_STD": {
		"name": "CXX_MODULE_STD",
		"description": "CXX_MODULE_STD je logická hodnota určující, jestli cíl může používat import std, jeho zdroje C++, nebo ne."
	},
	"CXX_STANDARD": {
		"name": "CXX_STANDARD",
		"description": "Standard C++, jehož funkce se vyžadují k sestavení tohoto cíle"
	},
	"CXX_STANDARD_REQUIRED": {
		"name": "CXX_STANDARD_REQUIRED",
		"description": "Logická hodnota popisující, jestli je hodnota CXX_STANDARD požadavek"
	},
	"C_EXTENSIONS": {
		"name": "C_EXTENSIONS",
		"description": "Logická hodnota určující, jestli se vyžadují rozšíření specifická pro kompilátor"
	},
	"C_STANDARD": {
		"name": "C_STANDARD",
		"description": "Standard jazyka C, jehož funkce jsou potřebné k sestavení tohoto cíle"
	},
	"C_STANDARD_REQUIRED": {
		"name": "C_STANDARD_REQUIRED",
		"description": "Logická hodnota popisující, jestli se vyžaduje hodnota C_STANDARD"
	},
	"DEBUG_POSTFIX": {
		"name": "DEBUG_POSTFIX",
		"description": "Viz cílová vlastnost <CONFIG>_POSTFIX."
	},
	"DEFINE_SYMBOL": {
		"name": "DEFINE_SYMBOL",
		"description": "Definuje symbol při kompilaci zdrojů tohoto cíle."
	},
	"DEPLOYMENT_ADDITIONAL_FILES": {
		"name": "DEPLOYMENT_ADDITIONAL_FILES",
		"description": "Umožňuje nastavit AdditionalFiles projektu WinCE v hodnotě DeploymentTool v souborech .vcproj vygenerovaných generátory sady Visual Studio. To je užitečné, když chcete ladit kód na vzdáleném zařízení WinCE. Zadejte další soubory, které budou zkopírovány do zařízení. Příklad:"
	},
	"DEPLOYMENT_REMOTE_DIRECTORY": {
		"name": "DEPLOYMENT_REMOTE_DIRECTORY",
		"description": "Umožňuje nastavit RemoteDirectory projektu WinCE v hodnotách DeploymentTool a RemoteExecutable v nástroji DebugerTool v souborech .vcproj vygenerovaných generátory sady Visual Studio. To je užitečné, když chcete ladit kód na vzdáleném zařízení WinCE. Příklad:"
	},
	"DEPRECATION": {
		"name": "DEPRECATION",
		"description": "Zpráva o zastaralosti od vývojáře importovaného cíle"
	},
	"DISABLE_PRECOMPILE_HEADERS": {
		"name": "DISABLE_PRECOMPILE_HEADERS",
		"description": "Zakáže předkompilaci souborů hlaviček určených vlastností PRECOMPILE_HEADERS."
	},
	"DLL_NAME_WITH_SOVERSION": {
		"name": "DLL_NAME_WITH_SOVERSION",
		"description": "Tato vlastnost určuje, jestli se cílová vlastnost SOVERSION přidá do názvu souboru vygenerovaných názvů souborů DLL pro platformu Windows, která je vybrána při nastavení proměnné WIN32."
	},
	"DOTNET_SDK": {
		"name": "DOTNET_SDK",
		"description": "Zadejte sadu .NET SDK pro projekty jazyka C#. Příklad: Microsoft.NET.Sdk."
	},
	"DOTNET_TARGET_FRAMEWORK": {
		"name": "DOTNET_TARGET_FRAMEWORK",
		"description": "Zadejte cílovou architekturu .NET."
	},
	"DOTNET_TARGET_FRAMEWORK_VERSION": {
		"name": "DOTNET_TARGET_FRAMEWORK_VERSION",
		"description": "Zadejte verzi cílové architektury .NET."
	},
	"EchoString": {
		"name": "EchoString",
		"description": "Zpráva, která se má zobrazit, když se sestaví cíl"
	},
	"ENABLE_EXPORTS": {
		"name": "ENABLE_EXPORTS",
		"description": "Určete, jestli spustitelný soubor nebo sdílená knihovna exportuje symboly."
	},
	"EXCLUDE_FROM_DEFAULT_BUILD": {
		"name": "EXCLUDE_FROM_DEFAULT_BUILD",
		"description": "Umožňuje vyloučit cíl z operace Sestavit řešení."
	},
	"EXCLUDE_FROM_DEFAULT_BUILD_<CONFIG>": {
		"name": "EXCLUDE_FROM_DEFAULT_BUILD_<CONFIG>",
		"description": "Verze vyloučení cíle podle konfigurace z operace Sestavit řešení"
	},
	"EXPORT_COMPILE_COMMANDS": {
		"name": "EXPORT_COMPILE_COMMANDS",
		"description": "Povolit nebo zakázat výstup příkazů kompilace během generování pro cíl"
	},
	"EXPORT_FIND_PACKAGE_NAME": {
		"name": "EXPORT_FIND_PACKAGE_NAME",
		"description": "Určuje název balíčku přidružený k cíli závislosti při exportu volání find_dependency v instalaci nebo exportu. Dá se použít k přiřazení názvu balíčku k balíčku, který je sestaven nástrojem CMake a exportován, nebo k přepsání balíčku ve volání find_package, které vytvořilo cíl."
	},
	"EXPORT_NAME": {
		"name": "EXPORT_NAME",
		"description": "Exportovaný název pro cílové soubory"
	},
	"EXPORT_NO_SYSTEM": {
		"name": "EXPORT_NO_SYSTEM",
		"description": "Tato vlastnost má vliv na chování příkazů pro instalaci a export při instalaci nebo exportu cíle. Když je hodnota EXPORT_NO_SYSTEM nastavená na true, vygenerují tyto příkazy importovaný cíl s vlastností SYSTEM nastavenou na false."
	},
	"EXPORT_PROPERTIES": {
		"name": "EXPORT_PROPERTIES",
		"description": "Zobrazí seznam dalších vlastností k exportu pro cíl."
	},
	"FOLDER": {
		"name": "FOLDER",
		"description": "U integrovaných vývojových prostředí, která prezentují cíle pomocí hierarchie složek, tato vlastnost určuje název složky, do které se má cíl umístit. Pokud chcete vnořit složky, použijte hodnoty FOLDER, například grafické uživatelské rozhraní nebo dialogy, se znaky oddělujícími úrovně složek. Cíle bez vlastnosti FOLDER se zobrazí jako entity nejvyšší úrovně. Cíle se stejnou hodnotou vlastnosti FOLDER se zobrazí ve stejné složce jako na stejné úrovni."
	},
	"Fortran_BUILDING_INSTRINSIC_MODULES": {
		"name": "Fortran_BUILDING_INSTRINSIC_MODULES",
		"description": "Dá preprocesoru CMake Fortran informaci, že cíl sestavuje vnitřní funkce Fortranu pro sestavení kompilátoru Fortranu."
	},
	"Fortran_MODULE_DIRECTORY": {
		"name": "Fortran_MODULE_DIRECTORY",
		"description": "Umožňuje zadat výstupní adresář pro moduly Fortran poskytnuté cílem."
	},
	"FRAMEWORK": {
		"name": "FRAMEWORK",
		"description": "Umožňuje sestavit SHARED (SDÍLENOU) nebo STATIC (STATICKOU) knihovnu jako sadu architektury v macOS a iOS."
	},
	"FRAMEWORK_MULTI_CONFIG_POSTFIX_<CONFIG>": {
		"name": "FRAMEWORK_MULTI_CONFIG_POSTFIX_<CONFIG>",
		"description": "Přípona, která se má připojit k názvu souboru architektury pro konfiguraci <CONFIG> při použití generátoru s více konfiguracemi (například Xcode a Ninja Multi-Config)."
	},
	"FRAMEWORK_VERSION": {
		"name": "FRAMEWORK_VERSION",
		"description": "Verze architektury vytvořené pomocí cílové vlastnosti FRAMEWORK (například A)"
	},
	"GENERATOR_FILE_NAME": {
		"name": "GENERATOR_FILE_NAME",
		"description": "Soubor generátoru pro tento cíl"
	},
	"GHS_INTEGRITY_APP": {
		"name": "GHS_INTEGRITY_APP",
		"description": "Logická hodnota ZAPNOUT/VYPNOUT, která určuje, jestli má být cíl spustitelného souboru považován za aplikaci integrity"
	},
	"GHS_NO_SOURCE_GROUP_FILE": {
		"name": "GHS_NO_SOURCE_GROUP_FILE",
		"description": "Logická hodnota ZAPNOUT/VYPNOUT, která určuje, jestli soubor projektu pro cíl by měl být jeden jediný soubor nebo více souborů"
	},
	"GNUtoMS": {
		"name": "GNUtoMS",
		"description": "Umožňuje převést knihovnu importu GNU (.dll.a) na formát MS (.lib)."
	},
	"HAS_CXX": {
		"name": "HAS_CXX",
		"description": "Umožňuje propojit cíl pomocí nástroje linker C++ (zastaralé)."
	},
	"HEADER_DIRS": {
		"name": "HEADER_DIRS",
		"description": "Středníky oddělený seznam základních adresářů výchozí sady hlaviček cíle (tj. sada souborů s názvem a typem HEADERS). Vlastnost podporuje výrazy generátoru <cmake-generator-expressions(7)>."
	},
	"HEADER_DIRS_<NAME>": {
		"name": "HEADER_DIRS_<NAME>",
		"description": "Středníky oddělený seznam základních adresářů sady hlaviček <NAME> cíle, která má nastavený typ HEADERS. Vlastnost podporuje výrazy generátoru <cmake-generator-expressions(7)>."
	},
	"HEADER_SET": {
		"name": "HEADER_SET",
		"description": "Středníky oddělený seznam souborů ve výchozí sadě hlaviček cíle (tj. sada souborů s názvem a typem HEADERS). Pokud jsou některé cesty relativní, počítají se relativně ke zdrojovému adresáři cíle. Vlastnost podporuje výrazy generátoru <cmake-generator-expressions(7)>."
	},
	"HEADER_SETS": {
		"name": "HEADER_SETS",
		"description": "Seznam sad hlaviček PRIVATE a PUBLIC cíle jen pro čtení (tj. všechny sady souborů s typem HEADERS). Soubory uvedené v těchto sadách souborů jsou pro účely integrace integrovaného vývojového prostředí považovány za zdrojové soubory. Soubory mají také vlastnost HEADER_FILE_ONLY nastavenou na hodnotu TRUE."
	},
	"HEADER_SET_<NAME>": {
		"name": "HEADER_SET_<NAME>",
		"description": "Středníky oddělený seznam souborů v sadě hlaviček <NAME> cíle, která má nastavený typ HEADERS. Pokud jsou některé cesty relativní, počítají se relativně ke zdrojovému adresáři cíle. Vlastnost podporuje výrazy generátoru <cmake-generator-expressions(7)>."
	},
	"HIP_ARCHITECTURES": {
		"name": "HIP_ARCHITECTURES",
		"description": "Seznam architektur GPU, pro které se má vygenerovat kód zařízení. Názvy architektury se interpretují na základě CMAKE_HIP_PLATFORM."
	},
	"HIP_EXTENSIONS": {
		"name": "HIP_EXTENSIONS",
		"description": "Logická hodnota určující, jestli se vyžadují rozšíření specifická pro kompilátor"
	},
	"HIP_STANDARD": {
		"name": "HIP_STANDARD",
		"description": "Standard HIP/C++ požádal o vytvoření tohoto cíle."
	},
	"HIP_STANDARD_REQUIRED": {
		"name": "HIP_STANDARD_REQUIRED",
		"description": "Logická hodnota popisující, jestli se vyžaduje hodnota HIP_STANDARD"
	},
	"IMPORTED": {
		"name": "IMPORTED",
		"description": "Označení jen pro čtení, jestli je cíl IMPORTED (IMPORTOVANÝ)"
	},
	"IMPORTED_COMMON_LANGUAGE_RUNTIME": {
		"name": "IMPORTED_COMMON_LANGUAGE_RUNTIME",
		"description": "Vlastnost, která definuje, jestli cíl používá C++/CLI"
	},
	"IMPORTED_CONFIGURATIONS": {
		"name": "IMPORTED_CONFIGURATIONS",
		"description": "Konfigurace zadané pro importovaný cíl."
	},
	"IMPORTED_CXX_MODULES_COMPILE_DEFINITIONS": {
		"name": "IMPORTED_CXX_MODULES_COMPILE_DEFINITIONS",
		"description": "Definice preprocesoru pro kompilaci zdrojů modulu C++ cíle IMPORTED."
	},
	"IMPORTED_CXX_MODULES_COMPILE_FEATURES": {
		"name": "IMPORTED_CXX_MODULES_COMPILE_FEATURES",
		"description": "Funkce kompilátoru povolené pro moduly C++ tohoto cíle IMPORTED."
	},
	"IMPORTED_CXX_MODULES_COMPILE_OPTIONS": {
		"name": "IMPORTED_CXX_MODULES_COMPILE_OPTIONS",
		"description": "Seznam možností, které se mají předat kompilátoru pro moduly C++ tohoto cíle IMPORTED."
	},
	"IMPORTED_CXX_MODULES_INCLUDE_DIRECTORIES": {
		"name": "IMPORTED_CXX_MODULES_INCLUDE_DIRECTORIES",
		"description": "Seznam preprocesorů zahrnuje adresáře pro vyhledávání souborů při kompilaci modulů C++ pro cíle IMPORTED."
	},
	"IMPORTED_CXX_MODULES_LINK_LIBRARIES": {
		"name": "IMPORTED_CXX_MODULES_LINK_LIBRARIES",
		"description": "Seznam přímých závislostí, které se mají použít pro požadavky na použití pro moduly C++ v cílových modulech C++."
	},
	"IMPORTED_GLOBAL": {
		"name": "IMPORTED_GLOBAL",
		"description": "Označení, jestli IMPORTED (IMPORTOVANÝ) cíl je globálně viditelný"
	},
	"IMPORTED_IMPLIB": {
		"name": "IMPORTED_IMPLIB",
		"description": "Úplná cesta ke knihovně importu pro IMPORTED (IMPORTOVANÝ) cíl"
	},
	"IMPORTED_IMPLIB_<CONFIG>": {
		"name": "IMPORTED_IMPLIB_<CONFIG>",
		"description": "Verze vlastnosti IMPORTED_IMPLIB specifická pro konfiguraci <CONFIG>"
	},
	"IMPORTED_LIBNAME": {
		"name": "IMPORTED_LIBNAME",
		"description": "Umožňuje zadat název knihovny propojení pro importovanou knihovnu rozhraní."
	},
	"IMPORTED_LIBNAME_<CONFIG>": {
		"name": "IMPORTED_LIBNAME_<CONFIG>",
		"description": "Verze vlastnosti IMPORTED_LIBNAME specifická pro konfiguraci <CONFIG>"
	},
	"IMPORTED_LINK_DEPENDENT_LIBRARIES": {
		"name": "IMPORTED_LINK_DEPENDENT_LIBRARIES",
		"description": "Závislé sdílené knihovny importované sdílené knihovny"
	},
	"IMPORTED_LINK_DEPENDENT_LIBRARIES_<CONFIG>": {
		"name": "IMPORTED_LINK_DEPENDENT_LIBRARIES_<CONFIG>",
		"description": "Verze vlastnosti IMPORTED_LINK_DEPENDENT_LIBRARIES specifická pro konfiguraci <CONFIG>"
	},
	"IMPORTED_LINK_INTERFACE_LANGUAGES": {
		"name": "IMPORTED_LINK_INTERFACE_LANGUAGES",
		"description": "Jazyky zkompilované do IMPORTED (IMPORTOVANÉ) statické knihovny"
	},
	"IMPORTED_LINK_INTERFACE_LANGUAGES_<CONFIG>": {
		"name": "IMPORTED_LINK_INTERFACE_LANGUAGES_<CONFIG>",
		"description": "Verze vlastnosti IMPORTED__LINK_INTERFACE_LANGUAGES specifická pro konfiguraci <CONFIG>"
	},
	"IMPORTED_LINK_INTERFACE_LIBRARIES": {
		"name": "IMPORTED_LINK_INTERFACE_LIBRARIES",
		"description": "Rozhraní přenosného propojení IMPORTED (IMPORTOVANÉHO) cíle"
	},
	"IMPORTED_LINK_INTERFACE_LIBRARIES_<CONFIG>": {
		"name": "IMPORTED_LINK_INTERFACE_LIBRARIES_<CONFIG>",
		"description": "Verze vlastnosti IMPORTED_LINK_INTERFACE_LIBRARIES specifická pro konfiguraci <CONFIG>"
	},
	"IMPORTED_LINK_INTERFACE_MULTIPLICITY": {
		"name": "IMPORTED_LINK_INTERFACE_MULTIPLICITY",
		"description": "Počet opakování pro cykly IMPORTED (IMPORTOVANÝCH) statických knihoven"
	},
	"IMPORTED_LINK_INTERFACE_MULTIPLICITY_<CONFIG>": {
		"name": "IMPORTED_LINK_INTERFACE_MULTIPLICITY_<CONFIG>",
		"description": "Verze vlastnosti IMPORTED_LINK_INTERFACE_MULTIPLICITY specifická pro konfiguraci <CONFIG>"
	},
	"IMPORTED_LOCATION": {
		"name": "IMPORTED_LOCATION",
		"description": "Úplná cesta k hlavnímu souboru na disku pro IMPORTED (IMPORTOVANÝ) cíl"
	},
	"IMPORTED_LOCATION_<CONFIG>": {
		"name": "IMPORTED_LOCATION_<CONFIG>",
		"description": "Verze vlastnosti IMPORTED_LOCATION specifická pro konfiguraci <CONFIG>"
	},
	"IMPORTED_NO_SONAME": {
		"name": "IMPORTED_NO_SONAME",
		"description": "Určuje, že cíl IMPORTED (IMPORTOVANÉ) sdílené knihovny nemá žádný název soname."
	},
	"IMPORTED_NO_SONAME_<CONFIG>": {
		"name": "IMPORTED_NO_SONAME_<CONFIG>",
		"description": "Verze vlastnosti IMPORTED_NO_SONAME specifická pro konfiguraci <CONFIG>"
	},
	"IMPORTED_NO_SYSTEM": {
		"name": "IMPORTED_NO_SYSTEM",
		"description": "Nastavení IMPORTED_NO_SYSTEM na hodnotu true u importovaného cíle určuje, že se nejedná o systémový cíl. To má následující účinky:"
	},
	"IMPORTED_OBJECTS": {
		"name": "IMPORTED_OBJECTS",
		"description": "Středníky oddělený seznam absolutních cest k souborům objektů na disku pro importovanou knihovnu objektů"
	},
	"IMPORTED_OBJECTS_<CONFIG>": {
		"name": "IMPORTED_OBJECTS_<CONFIG>",
		"description": "Verze vlastnosti IMPORTED_OBJECTS specifická pro konfiguraci <CONFIG>"
	},
	"IMPORTED_SONAME": {
		"name": "IMPORTED_SONAME",
		"description": "Název soname IMPORTED (IMPORTOVANÉHO) cíle typu sdílené knihovny"
	},
	"IMPORTED_SONAME_<CONFIG>": {
		"name": "IMPORTED_SONAME_<CONFIG>",
		"description": "Verze vlastnosti IMPORTED_SONAME specifická pro konfiguraci <CONFIG>"
	},
	"IMPORT_PREFIX": {
		"name": "IMPORT_PREFIX",
		"description": "Co je před názvem knihovny importu."
	},
	"IMPORT_SUFFIX": {
		"name": "IMPORT_SUFFIX",
		"description": "Co následuje za názvem knihovny importu."
	},
	"INSTALL_NAME_DIR": {
		"name": "INSTALL_NAME_DIR",
		"description": "Název adresáře pro nainstalované cíle na platformách Apple"
	},
	"INSTALL_REMOVE_ENVIRONMENT_RPATH": {
		"name": "INSTALL_REMOVE_ENVIRONMENT_RPATH",
		"description": "Řídí, jestli by se měly během instalace odebrat cesty rpaths definované sadou nástrojů."
	},
	"INSTALL_RPATH": {
		"name": "INSTALL_RPATH",
		"description": "Cesta rpath, která se má použít pro instalované cíle"
	},
	"INSTALL_RPATH_USE_LINK_PATH": {
		"name": "INSTALL_RPATH_USE_LINK_PATH",
		"description": "Přidejte cesty pro vyhledávání linkeru a cestu rpath pro nainstalované cíle."
	},
	"INTERFACE_AUTOMOC_MACRO_NAMES": {
		"name": "INTERFACE_AUTOMOC_MACRO_NAMES",
		"description": "Středníky oddělený seznam názvů maker, které mají být rozšířeny do příjemců AUTOMOC."
	},
	"INTERFACE_AUTOUIC_OPTIONS": {
		"name": "INTERFACE_AUTOUIC_OPTIONS",
		"description": "Seznam možností rozhraní, které mají být předány UIC"
	},
	"INTERFACE_COMPILE_DEFINITIONS": {
		"name": "INTERFACE_COMPILE_DEFINITIONS",
		"description": "Seznam požadavků na veřejné elementy property_name pro knihovnu"
	},
	"INTERFACE_COMPILE_FEATURES": {
		"name": "INTERFACE_COMPILE_FEATURES",
		"description": "Seznam požadavků na veřejné elementy property_name pro knihovnu"
	},
	"INTERFACE_COMPILE_OPTIONS": {
		"name": "INTERFACE_COMPILE_OPTIONS",
		"description": "Seznam požadavků na veřejné elementy property_name pro knihovnu"
	},
	"INTERFACE_CXX_MODULE_SETS": {
		"name": "INTERFACE_CXX_MODULE_SETS",
		"description": "Seznam sad modulů PUBLIC C++ cíle pouze pro čtení (tj. všechny sady souborů s typem CXX_MODULES). Soubory uvedené v těchto sadách modulů C++ je možné nainstalovat a exportovat při instalaci a exportu."
	},
	"INTERFACE_HEADER_SETS": {
		"name": "INTERFACE_HEADER_SETS",
		"description": "Seznam sad hlaviček INTERFACE a PUBLIC cíle jen pro čtení (tj. všechny sady souborů s typem HEADERS). Soubory uvedené v těchto sadách hlaviček je možné nainstalovat a exportovat při instalaci a exportu."
	},
	"INTERFACE_HEADER_SETS_TO_VERIFY": {
		"name": "INTERFACE_HEADER_SETS_TO_VERIFY",
		"description": "Slouží k určení, které sady záhlaví PUBLIC a INTERFACE cíle mají být ověřeny."
	},
	"INTERFACE_INCLUDE_DIRECTORIES": {
		"name": "INTERFACE_INCLUDE_DIRECTORIES",
		"description": "Seznam požadavků na veřejné elementy property_name pro knihovnu"
	},
	"INTERFACE_LINK_DEPENDS": {
		"name": "INTERFACE_LINK_DEPENDS",
		"description": "Další soubory veřejného rozhraní, na kterých závisí cílový binární soubor pro propojení"
	},
	"INTERFACE_LINK_DIRECTORIES": {
		"name": "INTERFACE_LINK_DIRECTORIES",
		"description": "Seznam požadavků na veřejné elementy property_name pro knihovnu"
	},
	"INTERFACE_LINK_LIBRARIES": {
		"name": "INTERFACE_LINK_LIBRARIES",
		"description": "Seznam knihoven veřejného rozhraní pro knihovnu"
	},
	"INTERFACE_LINK_LIBRARIES_DIRECT": {
		"name": "INTERFACE_LINK_LIBRARIES_DIRECT",
		"description": "Seznam knihoven, které by příjemci této knihovny měli považovat za závislosti přímého propojení."
	},
	"INTERFACE_LINK_LIBRARIES_DIRECT_EXCLUDE": {
		"name": "INTERFACE_LINK_LIBRARIES_DIRECT_EXCLUDE",
		"description": "Seznam knihoven, které by příjemci této knihovny neměli považovat za závislosti přímého propojení."
	},
	"INTERFACE_LINK_OPTIONS": {
		"name": "INTERFACE_LINK_OPTIONS",
		"description": "Seznam požadavků na veřejné elementy property_name pro knihovnu"
	},
	"INTERFACE_POSITION_INDEPENDENT_CODE": {
		"name": "INTERFACE_POSITION_INDEPENDENT_CODE",
		"description": "Určuje, jestli si spotřebitelé musí vytvořit cíl nezávislý na pozici."
	},
	"INTERFACE_PRECOMPILE_HEADERS": {
		"name": "INTERFACE_PRECOMPILE_HEADERS",
		"description": "Seznam souborů hlaviček rozhraní, které se mají předkompilovat do spotřebovávajících cílů"
	},
	"INTERFACE_SOURCES": {
		"name": "INTERFACE_SOURCES",
		"description": "Seznam zdrojů rozhraní, které se mají zkompilovat do spotřebovávaných cílů"
	},
	"INTERFACE_SYSTEM_INCLUDE_DIRECTORIES": {
		"name": "INTERFACE_SYSTEM_INCLUDE_DIRECTORIES",
		"description": "Seznam adresářů zahrnutí veřejného systému pro knihovnu"
	},
	"IOS_INSTALL_COMBINED": {
		"name": "IOS_INSTALL_COMBINED",
		"description": "Umožňuje sestavit kombinovaný cíl (zařízení a simulátor) při instalaci."
	},
	"ISPC_HEADER_DIRECTORY": {
		"name": "ISPC_HEADER_DIRECTORY",
		"description": "Umožňuje zadat relativní výstupní adresář pro hlavičky ISPC poskytnuté cílem."
	},
	"ISPC_HEADER_SUFFIX": {
		"name": "ISPC_HEADER_SUFFIX",
		"description": "Umožňuje zadat výstupní příponu, která se bude používat pro hlavičky vygenerované pomocí ISPC poskytnuté cílem."
	},
	"ISPC_INSTRUCTION_SETS": {
		"name": "ISPC_INSTRUCTION_SETS",
		"description": "Seznam architektur instrukčních sad, pro které se má generovat kód"
	},
	"JOB_POOL_COMPILE": {
		"name": "JOB_POOL_COMPILE",
		"description": "Pouze Ninja: fond použitý pro kompilaci"
	},
	"JOB_POOL_LINK": {
		"name": "JOB_POOL_LINK",
		"description": "Pouze Ninja: fond použitý pro propojování"
	},
	"JOB_POOL_PRECOMPILE_HEADER": {
		"name": "JOB_POOL_PRECOMPILE_HEADER",
		"description": "Jenom Ninja: fond použitý pro generování předkompilovaných hlaviček"
	},
	"<LANG>_CLANG_TIDY": {
		"name": "<LANG>_CLANG_TIDY",
		"description": "Tato vlastnost je implementovaná jen v případě, že <LANG> je C, CXX, OBJC nebo OBJCXX."
	},
	"<LANG>_CLANG_TIDY_EXPORT_FIXES_DIR": {
		"name": "<LANG>_CLANG_TIDY_EXPORT_FIXES_DIR",
		"description": "Tato vlastnost je implementována pouze v případě, že <LANG> je C, CXX, OBJC nebo OBJCXX a má účinek pouze při nastavení <LANG>_CLANG_TIDY."
	},
	"<LANG>_COMPILER_LAUNCHER": {
		"name": "<LANG>_COMPILER_LAUNCHER",
		"description": "Tato vlastnost je implementována jen v případě, že <LANG> je C, CXX, Fortran, HIP, ISPC, OBJC, OBJCXX nebo CUDA."
	},
	"<LANG>_CPPCHECK": {
		"name": "<LANG>_CPPCHECK",
		"description": "Tato vlastnost se podporuje, jenom když <LANG> je C nebo CXX."
	},
	"<LANG>_CPPLINT": {
		"name": "<LANG>_CPPLINT",
		"description": "Tato vlastnost se podporuje, jenom když <LANG> je C nebo CXX."
	},
	"<LANG>_EXTENSIONS": {
		"name": "<LANG>_EXTENSIONS",
		"description": "Varianty:"
	},
	"<LANG>_INCLUDE_WHAT_YOU_USE": {
		"name": "<LANG>_INCLUDE_WHAT_YOU_USE",
		"description": "Tato vlastnost se implementuje, jenom když <LANG> je C nebo CXX."
	},
	"<LANG>_LINKER_LAUNCHER": {
		"name": "<LANG>_LINKER_LAUNCHER",
		"description": "Tato vlastnost je implementována jen v případě, že <LANG> je C, CXX, OBJC nebo OBJCXX."
	},
	"<LANG>_STANDARD": {
		"name": "<LANG>_STANDARD",
		"description": "Varianty:"
	},
	"<LANG>_STANDARD_REQUIRED": {
		"name": "<LANG>_STANDARD_REQUIRED",
		"description": "Varianty:"
	},
	"<LANG>_VISIBILITY_PRESET": {
		"name": "<LANG>_VISIBILITY_PRESET",
		"description": "Hodnota pro příznaky kompilace viditelnosti symbolů"
	},
	"LIBRARY_OUTPUT_DIRECTORY": {
		"name": "LIBRARY_OUTPUT_DIRECTORY",
		"description": "Výstupní adresář, ve kterém se mají sestavit cílové soubory XXX"
	},
	"LIBRARY_OUTPUT_DIRECTORY_<CONFIG>": {
		"name": "LIBRARY_OUTPUT_DIRECTORY_<CONFIG>",
		"description": "Výstupní adresář podle konfigurace pro cílové soubory LIBRARY (KNIHOVNA)"
	},
	"LIBRARY_OUTPUT_NAME": {
		"name": "LIBRARY_OUTPUT_NAME",
		"description": "Název výstupu pro cílové soubory XXX"
	},
	"LIBRARY_OUTPUT_NAME_<CONFIG>": {
		"name": "LIBRARY_OUTPUT_NAME_<CONFIG>",
		"description": "Výstupní název podle konfigurace pro cílové soubory LIBRARY (KNIHOVNA)"
	},
	"LINKER_LANGUAGE": {
		"name": "LINKER_LANGUAGE",
		"description": "Určuje jazyk, jehož kompilátor vyvolá linker."
	},
	"LINKER_TYPE": {
		"name": "LINKER_TYPE",
		"description": "Určete, který linker se použije pro krok propojení. Hodnota vlastnosti může používat výrazy generátoru <cmake-generator-expressions(7)>."
	},
	"LINK_DEPENDS": {
		"name": "LINK_DEPENDS",
		"description": "Další soubory, na kterých závisí cílový binární soubor pro propojení"
	},
	"LINK_DEPENDS_NO_SHARED": {
		"name": "LINK_DEPENDS_NO_SHARED",
		"description": "Nastaví nezávislost na souborech propojené sdílené knihovny."
	},
	"LINK_FLAGS": {
		"name": "LINK_FLAGS",
		"description": "Další příznaky pro použití při propojování tohoto cíle, pokud je to sdílená knihovna, knihovna modulů nebo spustitelný soubor. Statické knihovny musí používat vlastnosti STATIC_LIBRARY_OPTIONS nebo STATIC_LIBRARY_FLAGS."
	},
	"LINK_FLAGS_<CONFIG>": {
		"name": "LINK_FLAGS_<CONFIG>",
		"description": "Příznaky linkeru podle konfigurace pro sdílenou (SHARED) knihovnu, modul (MODULE) nebo spustitelný soubor (EXECUTABLE) jako cíl"
	},
	"LINK_INTERFACE_LIBRARIES": {
		"name": "LINK_INTERFACE_LIBRARIES",
		"description": "Seznam knihoven veřejného rozhraní pro sdílenou knihovnu nebo spustitelný soubor"
	},
	"LINK_INTERFACE_LIBRARIES_<CONFIG>": {
		"name": "LINK_INTERFACE_LIBRARIES_<CONFIG>",
		"description": "Seznam knihoven veřejného rozhraní podle konfigurace pro cíl"
	},
	"LINK_INTERFACE_MULTIPLICITY": {
		"name": "LINK_INTERFACE_MULTIPLICITY",
		"description": "Počet opakování pro STATIC (STATICKÉ) knihovny s cyklickými závislostmi"
	},
	"LINK_INTERFACE_MULTIPLICITY_<CONFIG>": {
		"name": "LINK_INTERFACE_MULTIPLICITY_<CONFIG>",
		"description": "Počet opakování podle konfigurace pro cykly STATIC (STATICKÝCH) knihoven"
	},
	"LINK_LIBRARIES": {
		"name": "LINK_LIBRARIES",
		"description": "Seznam závislostí přímých odkazů"
	},
	"LINK_LIBRARIES_ONLY_TARGETS": {
		"name": "LINK_LIBRARIES_ONLY_TARGETS",
		"description": "Vynuťte, aby položky odkazů, které mohou být cílovými názvy, byly ve skutečnosti existujícími cíli."
	},
	"LINK_LIBRARY_OVERRIDE": {
		"name": "LINK_LIBRARY_OVERRIDE",
		"description": "Přepsání funkcí knihovny přidružených ke knihovnám z výrazů generátoru LINK_LIBRARY. To lze použít k řešení nekompatibilních funkcí knihovny, které vyplývají ze zadání různých funkcí pro stejnou knihovnu v různých výrazech generátoru LINK_LIBRARY."
	},
	"LINK_LIBRARY_OVERRIDE_<LIBRARY>": {
		"name": "LINK_LIBRARY_OVERRIDE_<LIBRARY>",
		"description": "Přepsání funkce knihovny spojené s <LIBRARY> z výrazů generátoru LINK_LIBRARY. Toto je možné použít k řešení nekompatibilních funkcí knihovny, které vyplývají ze zadání různých funkcí pro <LIBRARY> v různých výrazech generátoru LINK_LIBRARY."
	},
	"LINK_SEARCH_END_STATIC": {
		"name": "LINK_SEARCH_END_STATIC",
		"description": "Zakončete propojovací řadu tak, aby se používaly statické systémové knihovny."
	},
	"LINK_SEARCH_START_STATIC": {
		"name": "LINK_SEARCH_START_STATIC",
		"description": "Předpokládejte, že linker ve výchozím nastavení hledá statické knihovny."
	},
	"LINK_WHAT_YOU_USE": {
		"name": "LINK_WHAT_YOU_USE",
		"description": "Toto je logická možnost, která při nastavení na hodnotu TRUE automaticky spustí v cíli po propojení obsah proměnné CMAKE_LINK_WHAT_YOU_USE_CHECK. Kromě toho bude do cíle předán příznak linkeru CMAKE_<LANG>_LINK_WHAT_YOU_USE_FLAG s příkazem propojení tak, že se všechny knihovny zadané na příkazovém řádku propojí do cíle. Výsledkem bude propojení, který bude vytvářet seznam knihoven, které nebudou poskytovat žádné symboly používané tímto cílem, ale které jsou s ním propojené."
	},
	"LOCATION_<CONFIG>": {
		"name": "LOCATION_<CONFIG>",
		"description": "Vlastnost poskytující cílové umístění na disku, která je jen pro čtení"
	},
	"MACHO_COMPATIBILITY_VERSION": {
		"name": "MACHO_COMPATIBILITY_VERSION",
		"description": "Jaké číslo verze kompatibility má tento cíl pro binární soubory Mach-O."
	},
	"MACHO_CURRENT_VERSION": {
		"name": "MACHO_CURRENT_VERSION",
		"description": "Jaké číslo aktuální verze má tento cíl pro binární soubory Mach-O."
	},
	"MACOSX_BUNDLE": {
		"name": "MACOSX_BUNDLE",
		"description": "Umožňuje sestavit spustitelný soubor jako balíček aplikace v macOS nebo iOS."
	},
	"MACOSX_BUNDLE_INFO_PLIST": {
		"name": "MACOSX_BUNDLE_INFO_PLIST",
		"description": "Umožňuje zadat vlastní šablonu Info.plist pro balíček aplikace pro macOS a iOS."
	},
	"MACOSX_FRAMEWORK_INFO_PLIST": {
		"name": "MACOSX_FRAMEWORK_INFO_PLIST",
		"description": "Umožňuje zadat vlastní šablonu Info.plist pro architekturu macOS a iOS."
	},
	"MACOSX_RPATH": {
		"name": "MACOSX_RPATH",
		"description": "Určuje, jestli je tento cíl na macOS nebo iOS umístěný za běhu s použitím rpaths."
	},
	"MANUALLY_ADDED_DEPENDENCIES": {
		"name": "MANUALLY_ADDED_DEPENDENCIES",
		"description": "Umožňuje získat ručně přidané závislosti na jiné cíle nejvyšší úrovně."
	},
	"MAP_IMPORTED_CONFIG_<CONFIG>": {
		"name": "MAP_IMPORTED_CONFIG_<CONFIG>",
		"description": "Mapování z konfigurace projektu do konfigurace importovaného cíle"
	},
	"MSVC_DEBUG_INFORMATION_FORMAT": {
		"name": "MSVC_DEBUG_INFORMATION_FORMAT",
		"description": "Při cílení na rozhraní ABI MSVC vyberte formát informací o ladění."
	},
	"MSVC_RUNTIME_LIBRARY": {
		"name": "MSVC_RUNTIME_LIBRARY",
		"description": "Umožňuje vybrat knihovnu runtime MSVC pro použití kompilátory, které cílí na MSVC ABI."
	},
	"NAME": {
		"name": "NAME",
		"description": "Logický název pro cíl"
	},
	"NO_SONAME": {
		"name": "NO_SONAME",
		"description": "Určuje, jestli se má nastavit název soname při propojování sdílené knihovny."
	},
	"NO_SYSTEM_FROM_IMPORTED": {
		"name": "NO_SYSTEM_FROM_IMPORTED",
		"description": "Nepovažujte adresáře zahrnutí z rozhraní spotřebovaných importovaných cílů za systémové adresáře."
	},
	"OBJCXX_EXTENSIONS": {
		"name": "OBJCXX_EXTENSIONS",
		"description": "Logická hodnota určující, jestli se vyžadují rozšíření specifická pro kompilátor"
	},
	"OBJCXX_STANDARD": {
		"name": "OBJCXX_STANDARD",
		"description": "Standard jazyka ObjC++, jehož funkce jsou potřebné k sestavení tohoto cíle"
	},
	"OBJCXX_STANDARD_REQUIRED": {
		"name": "OBJCXX_STANDARD_REQUIRED",
		"description": "Logická hodnota popisující, jestli se vyžaduje hodnota OBJCXX_STANDARD"
	},
	"OBJC_EXTENSIONS": {
		"name": "OBJC_EXTENSIONS",
		"description": "Logická hodnota určující, jestli se vyžadují rozšíření specifická pro kompilátor"
	},
	"OBJC_STANDARD": {
		"name": "OBJC_STANDARD",
		"description": "Standard jazyka OBJC, jehož funkce jsou potřebné k sestavení tohoto cíle"
	},
	"OBJC_STANDARD_REQUIRED": {
		"name": "OBJC_STANDARD_REQUIRED",
		"description": "Logická hodnota popisující, jestli se vyžaduje hodnota OBJC_STANDARD"
	},
	"OPTIMIZE_DEPENDENCIES": {
		"name": "OPTIMIZE_DEPENDENCIES",
		"description": "Aktivuje optimalizaci závislostí statických knihoven a knihoven objektů."
	},
	"OSX_ARCHITECTURES": {
		"name": "OSX_ARCHITECTURES",
		"description": "Architektury pro konkrétní cíle pro macOS"
	},
	"OSX_ARCHITECTURES_<CONFIG>": {
		"name": "OSX_ARCHITECTURES_<CONFIG>",
		"description": "Binární architektury pro macOS a iOS podle konfigurace pro cíl"
	},
	"OUTPUT_NAME": {
		"name": "OUTPUT_NAME",
		"description": "Výstupní název pro cílové soubory"
	},
	"OUTPUT_NAME_<CONFIG>": {
		"name": "OUTPUT_NAME_<CONFIG>",
		"description": "Základní název cílového souboru podle konfigurace"
	},
	"PCH_INSTANTIATE_TEMPLATES": {
		"name": "PCH_INSTANTIATE_TEMPLATES",
		"description": "Když se tato vlastnost nastaví na true, možnosti kompilátoru pro předkompilované hlavičky bude obsahovat příznak, který při generování PCH vytvoří instance šablon, pokud se podporují. Tak se dá výrazně zkrátit doba kompilace. Podporováno v Clangu od verze 11."
	},
	"PCH_WARN_INVALID": {
		"name": "PCH_WARN_INVALID",
		"description": "Pokud je tato vlastnost nastavena na hodnotu true, budou možnosti kompilátoru hlaviček pro předkompilaci obsahovat příznak kompilátoru, který by měl upozorňovat na neplatné předkompilované hlavičky, třeba -Winvalid-pch pro kompilátor GNU."
	},
	"PDB_NAME": {
		"name": "PDB_NAME",
		"description": "Výstupní název pro soubor .pdb symbolu ladění MS vygenerovaný linkerem pro spustitelný soubor nebo cíl sdílené knihovny"
	},
	"PDB_NAME_<CONFIG>": {
		"name": "PDB_NAME_<CONFIG>",
		"description": "Výstupní název podle konfigurace pro soubor .pdb symbolu ladění MS vygenerovaný linkerem pro spustitelný soubor nebo cíl sdílené knihovny"
	},
	"PDB_OUTPUT_DIRECTORY": {
		"name": "PDB_OUTPUT_DIRECTORY",
		"description": "Výstupní adresář pro soubor .pdb symbolů ladění MS vygenerovaný linkerem pro spustitelný soubor nebo cíl sdílené knihovny"
	},
	"PDB_OUTPUT_DIRECTORY_<CONFIG>": {
		"name": "PDB_OUTPUT_DIRECTORY_<CONFIG>",
		"description": "Výstupní adresář podle konfigurace pro soubor .pdb symbolu ladění MS vygenerovaný linkerem pro spustitelný soubor nebo cíl sdílené knihovny"
	},
	"POSITION_INDEPENDENT_CODE": {
		"name": "POSITION_INDEPENDENT_CODE",
		"description": "Určuje, jestli se má vytvořit cíl nezávislý na pozici."
	},
	"POST_INSTALL_SCRIPT": {
		"name": "POST_INSTALL_SCRIPT",
		"description": "Zastaralá podpora instalace"
	},
	"PRECOMPILE_HEADERS": {
		"name": "PRECOMPILE_HEADERS",
		"description": "Seznam souborů hlaviček k předkompilaci"
	},
	"PRECOMPILE_HEADERS_REUSE_FROM": {
		"name": "PRECOMPILE_HEADERS_REUSE_FROM",
		"description": "Cíl, ze kterého se má znovu použít artefakt sestavení předkompilovaných hlaviček"
	},
	"PREFIX": {
		"name": "PREFIX",
		"description": "Co je před názvem knihovny."
	},
	"PRE_INSTALL_SCRIPT": {
		"name": "PRE_INSTALL_SCRIPT",
		"description": "Zastaralá podpora instalace"
	},
	"PRIVATE_HEADER": {
		"name": "PRIVATE_HEADER",
		"description": "Umožňuje zadat soubory privátních hlaviček v cíli sdílené knihovny FRAMEWORK."
	},
	"PROJECT_LABEL": {
		"name": "PROJECT_LABEL",
		"description": "Umožňuje změnit název cíle v rozhraní IDE."
	},
	"PUBLIC_HEADER": {
		"name": "PUBLIC_HEADER",
		"description": "Umožňuje zadat soubory veřejných hlaviček v cíli sdílené knihovny FRAMEWORK (ARCHITEKTURA)."
	},
	"RESOURCE": {
		"name": "RESOURCE",
		"description": "Umožňuje zadat soubory prostředků v možnosti FRAMEWORK (ARCHITEKTURA) nebo BUNDLE (SADA)."
	},
	"RUNTIME_OUTPUT_DIRECTORY": {
		"name": "RUNTIME_OUTPUT_DIRECTORY",
		"description": "Výstupní adresář, ve kterém se mají sestavit cílové soubory XXX"
	},
	"RUNTIME_OUTPUT_DIRECTORY_<CONFIG>": {
		"name": "RUNTIME_OUTPUT_DIRECTORY_<CONFIG>",
		"description": "Výstupní adresář podle konfigurace pro cílové soubory RUNTIME"
	},
	"RUNTIME_OUTPUT_NAME": {
		"name": "RUNTIME_OUTPUT_NAME",
		"description": "Název výstupu pro cílové soubory XXX"
	},
	"RUNTIME_OUTPUT_NAME_<CONFIG>": {
		"name": "RUNTIME_OUTPUT_NAME_<CONFIG>",
		"description": "Výstupní název podle konfigurace pro cílové soubory RUNTIME"
	},
	"SKIP_BUILD_RPATH": {
		"name": "SKIP_BUILD_RPATH",
		"description": "Měl by se příkaz rpaths použít pro strom sestavení."
	},
	"SOURCES": {
		"name": "SOURCES",
		"description": "Určuje seznam cest ke zdrojovým souborům pro cíl. Všechny následující příkazy se nastavují nebo přidávají do cílové vlastnosti SOURCES a představují obvyklý způsob, jak s ní manipulovat:"
	},
	"SOVERSION": {
		"name": "SOVERSION",
		"description": "Číslo verze ABI cíle sdílené knihovny"
	},
	"STATIC_LIBRARY_FLAGS": {
		"name": "STATIC_LIBRARY_FLAGS",
		"description": "Příznaky archivátoru (nebo MSVC Librarian) pro cíl statické knihovny. Cíle, které jsou sdílené knihovny, moduly nebo spustitelné soubory, musí použít cílové vlastnosti LINK_OPTIONS nebo LINK_FLAGS."
	},
	"STATIC_LIBRARY_FLAGS_<CONFIG>": {
		"name": "STATIC_LIBRARY_FLAGS_<CONFIG>",
		"description": "Příznaky archivátoru (nebo MSVC Librarian) podle konfigurace pro cíl statické knihovny"
	},
	"STATIC_LIBRARY_OPTIONS": {
		"name": "STATIC_LIBRARY_OPTIONS",
		"description": "Příznaky archivátoru (nebo MSVC Librarian) pro cíl statické knihovny. Cíle, které jsou sdílené knihovny, moduly nebo spustitelné soubory, musí použít cílovou vlastnost LINK_OPTIONS."
	},
	"SUFFIX": {
		"name": "SUFFIX",
		"description": "Co následuje za názvem cíle."
	},
	"Swift_COMPILATION_MODE": {
		"name": "Swift_COMPILATION_MODE",
		"description": "Zadejte, jak Swift zkompiluje cíl."
	},
	"Swift_LANGUAGE_VERSION": {
		"name": "Swift_LANGUAGE_VERSION",
		"description": "Tato vlastnost nastavuje jazykovou verzi pro zdroje Swift v cíli. Pokud není žádná zadaná, použije se jako výchozí CMAKE_Swift_LANGUAGE_VERSION, pokud je zadaná, jinak to bude nejnovější verze podporovaná kompilátorem."
	},
	"Swift_MODULE_DIRECTORY": {
		"name": "Swift_MODULE_DIRECTORY",
		"description": "Umožňuje zadat výstupní adresář pro moduly Swift poskytnuté cílem."
	},
	"Swift_MODULE_NAME": {
		"name": "Swift_MODULE_NAME",
		"description": "Tato vlastnost určuje název modulu Swift. Ve výchozím nastavení je to název cíle."
	},
	"TEST_LAUNCHER": {
		"name": "TEST_LAUNCHER",
		"description": "Ke spouštění spustitelných souborů použijte daný spouštěč. Tento příkaz bude přidán jako předpona k příkazům add_test pro spustitelné soubory cílového systému sestavení a je určen ke spuštění na hostitelském počítači."
	},
	"TRANSITIVE_COMPILE_PROPERTIES": {
		"name": "TRANSITIVE_COMPILE_PROPERTIES",
		"description": "Vlastnosti, které výraz generátoru TARGET_PROPERTY na cíli a jeho závislých objektech vyhodnotí jako sjednocení hodnot získaných z přechodného uzavření závislostí odkazů, s výjimkou položek chráněných pomocí LINK_ONLY."
	},
	"TRANSITIVE_LINK_PROPERTIES": {
		"name": "TRANSITIVE_LINK_PROPERTIES",
		"description": "Vlastnosti, které výraz generátoru TARGET_PROPERTY na cíli a jeho závislých objektech vyhodnotí jako sjednocení hodnot získaných z přechodného uzavření závislostí odkazů, včetně položek chráněných pomocí LINK_ONLY."
	},
	"UNITY_BUILD": {
		"name": "UNITY_BUILD",
		"description": "Pokud je tato vlastnost nastavena na hodnotu true, budou cílové zdrojové soubory zkombinovány do dávek za účelem rychlejší kompilace. To se provádí vytvořením (sady) zdrojů unity, které obsahují (#include) původní zdroje, a potom se tyto zdroje unity zkompilují místo originálů. Toto sestavení se nazývá Unity nebo Jumbo."
	},
	"UNITY_BUILD_BATCH_SIZE": {
		"name": "UNITY_BUILD_BATCH_SIZE",
		"description": "Určuje maximální počet zdrojových souborů, které mohou být zkombinovány do libovolného zdrojového souboru unity v případě, že jsou sestavení unity povoleny vlastností UNITY_BUILD cíle. Původní zdrojové soubory budou distribuovány v libovolném počtu zdrojových souborů unity tak, jak je nutné pro tento limit."
	},
	"UNITY_BUILD_CODE_AFTER_INCLUDE": {
		"name": "UNITY_BUILD_CODE_AFTER_INCLUDE",
		"description": "Fragment kódu, který je doslovně zahrnut funkcí UNITY_BUILD hned po každém příkazu #include ve vygenerovaných zdrojových souborech unity. Například:"
	},
	"UNITY_BUILD_CODE_BEFORE_INCLUDE": {
		"name": "UNITY_BUILD_CODE_BEFORE_INCLUDE",
		"description": "Fragment kódu, který je doslovně zahrnut funkcí UNITY_BUILD hned před každým příkazem #include ve vygenerovaných zdrojových souborech unity. Například:"
	},
	"UNITY_BUILD_MODE": {
		"name": "UNITY_BUILD_MODE",
		"description": "CMake poskytuje různé algoritmy pro výběr, které zdroje jsou seskupené dohromady do bloku. Výběr se rozhoduje podle této vlastnosti, která má následující přijatelné hodnoty:"
	},
	"UNITY_BUILD_UNIQUE_ID": {
		"name": "UNITY_BUILD_UNIQUE_ID",
		"description": "Název platného identifikátoru C, který se během sestavení Unity nastavuje na hodnotu jedinečnou pro každý soubor."
	},
	"VERIFY_INTERFACE_HEADER_SETS": {
		"name": "VERIFY_INTERFACE_HEADER_SETS",
		"description": "Slouží k ověření, zda všechny hlavičky v sadách hlaviček PUBLIC a INTERFACE cíle mohou být zahrnuty samostatně."
	},
	"VERSION": {
		"name": "VERSION",
		"description": "Číslo verze cíle sdílené knihovny"
	},
	"VISIBILITY_INLINES_HIDDEN": {
		"name": "VISIBILITY_INLINES_HIDDEN",
		"description": "Určuje, jestli se má přidat příznak kompilace, aby se skryly symboly vložených funkcí."
	},
	"VS_CONFIGURATION_TYPE": {
		"name": "VS_CONFIGURATION_TYPE",
		"description": "Typ konfigurace projektu Visual Studio"
	},
	"VS_DEBUGGER_COMMAND": {
		"name": "VS_DEBUGGER_COMMAND",
		"description": "Nastaví příkaz místního ladicího programu pro cíle Visual Studio C++. Hodnota vlastnosti může používat výrazy generátoru <cmake-generator-expressions(7)>. To je definováno v <LocalDebuggerCommand> v souboru projektu Visual Studia. Tato vlastnost je inicializována hodnotou proměnné CMAKE_VS_DEBUGGER_COMMAND, pokud je nastavena při vytvoření cíle."
	},
	"VS_DEBUGGER_COMMAND_ARGUMENTS": {
		"name": "VS_DEBUGGER_COMMAND_ARGUMENTS",
		"description": "Nastaví argumenty příkazového řádku místního ladicího programu pro cíle Visual Studio C++. Hodnota vlastnosti může používat výrazy generátoru <cmake-generator-expressions(7)>. To je definováno v <LocalDebuggerCommandArguments> v souboru projektu Visual Studia. Tato vlastnost je inicializována hodnotou proměnné CMAKE_VS_DEBUGGER_COMMAND_ARGUMENTS, pokud je nastavena při vytvoření cíle."
	},
	"VS_DEBUGGER_ENVIRONMENT": {
		"name": "VS_DEBUGGER_ENVIRONMENT",
		"description": "Nastaví místní prostředí ladicího programu pro cíle Visual Studio C++. Hodnota vlastnosti může používat výrazy generátoru <cmake-generator-expressions(7)>. To je definováno v <LocalDebuggerEnvironment> v souboru projektu Visual Studia. Tato vlastnost je inicializována hodnotou proměnné CMAKE_VS_DEBUGGER_ENVIRONMENT, pokud je nastavena při vytvoření cíle."
	},
	"VS_DEBUGGER_WORKING_DIRECTORY": {
		"name": "VS_DEBUGGER_WORKING_DIRECTORY",
		"description": "Nastaví pracovní adresář místního ladicího programu pro cíle Visual Studio C++. Hodnota vlastnosti může používat výrazy generátoru <cmake-generator-expressions(7)>. To je definováno v <LocalDebuggerWorkingDirectory> v souboru projektu Visual Studia. Tato vlastnost je inicializována hodnotou proměnné CMAKE_VS_DEBUGGER_WORKING_DIRECTORY, pokud je nastavena při vytvoření cíle."
	},
	"VS_DESKTOP_EXTENSIONS_VERSION": {
		"name": "VS_DESKTOP_EXTENSIONS_VERSION",
		"description": "Verze desktopových rozšíření pro Windows 10 sady Visual Studio"
	},
	"VS_DOTNET_DOCUMENTATION_FILE": {
		"name": "VS_DOTNET_DOCUMENTATION_FILE",
		"description": "Výstup dokumentace .NET pro projekt spravovaný sadou Visual Studio"
	},
	"VS_DOTNET_REFERENCEPROP_<refname>_TAG_<tagname>": {
		"name": "VS_DOTNET_REFERENCEPROP_<refname>_TAG_<tagname>",
		"description": "Definuje vlastnost XML <tagname> pro odkaz na .NET <refname>."
	},
	"VS_DOTNET_REFERENCES": {
		"name": "VS_DOTNET_REFERENCES",
		"description": "Odkazy .NET na projekt spravovaný sadou Visual Studio"
	},
	"VS_DOTNET_REFERENCES_COPY_LOCAL": {
		"name": "VS_DOTNET_REFERENCES_COPY_LOCAL",
		"description": "Nastaví vlastnost Copy Local pro všechny pomocné odkazy .NET v cíli."
	},
	"VS_DOTNET_REFERENCE_<refname>": {
		"name": "VS_DOTNET_REFERENCE_<refname>",
		"description": "Odkaz .NET na projekt spravovaný sadou Visual Studio s názvem <refname> a cestou nápovědy"
	},
	"VS_DOTNET_STARTUP_OBJECT": {
		"name": "VS_DOTNET_STARTUP_OBJECT",
		"description": "Nastaví vlastnost spouštěcího objektu v cílech Visual Studio .NET. Hodnota vlastnosti definuje plný kvalifikovaný název třídy (včetně názvu balíčku), například: MyCompany.Package.MyStarterClass."
	},
	"VS_DOTNET_TARGET_FRAMEWORK_VERSION": {
		"name": "VS_DOTNET_TARGET_FRAMEWORK_VERSION",
		"description": "Zadejte verzi cílové architektury .NET."
	},
	"VS_DPI_AWARE": {
		"name": "VS_DPI_AWARE",
		"description": "Umožňuje nastavit Nástroj manifestu -> Vstup a výstup -> Rozpoznání nastavení DPI ve vlastnostech projektu cíle sady Visual Studio."
	},
	"VS_FILTER_PROPS": {
		"name": "VS_FILTER_PROPS",
		"description": "Nastaví soubor props filtru, který se má zahrnout do souboru filtru projektu v jazyce C++ sady Visual Studio."
	},
	"VS_GLOBAL_KEYWORD": {
		"name": "VS_GLOBAL_KEYWORD",
		"description": "Klíčové slovo projektu sady Visual Studio"
	},
	"VS_GLOBAL_PROJECT_TYPES": {
		"name": "VS_GLOBAL_PROJECT_TYPES",
		"description": "Typy projektů sady Visual Studio"
	},
	"VS_GLOBAL_ROOTNAMESPACE": {
		"name": "VS_GLOBAL_ROOTNAMESPACE",
		"description": "Kořenový obor názvů projektu sady Visual Studio"
	},
	"VS_GLOBAL_<variable>": {
		"name": "VS_GLOBAL_<variable>",
		"description": "Globální proměnná specifická pro projekt sady Visual Studio"
	},
	"VS_IOT_EXTENSIONS_VERSION": {
		"name": "VS_IOT_EXTENSIONS_VERSION",
		"description": "Verze rozšíření sady Visual Studio pro Windows 10 IoT"
	},
	"VS_IOT_STARTUP_TASK": {
		"name": "VS_IOT_STARTUP_TASK",
		"description": "Průběžná úloha sady Visual Studio pro Windows 10 IoT na pozadí"
	},
	"VS_JUST_MY_CODE_DEBUGGING": {
		"name": "VS_JUST_MY_CODE_DEBUGGING",
		"description": "Povolí možnost Pouze můj kód s ladicím programem Visual Studio."
	},
	"VS_KEYWORD": {
		"name": "VS_KEYWORD",
		"description": "Odebráno Kdysi určovalo klíčové slovo projektu sady Visual Studio pro generátor sady Visual Studio 9 2008 a starší, ale všechny tyto generátory byly odebrány."
	},
	"VS_MOBILE_EXTENSIONS_VERSION": {
		"name": "VS_MOBILE_EXTENSIONS_VERSION",
		"description": "Verze rozšíření systému Windows 10 Mobile v sadě Visual Studio"
	},
	"VS_NO_COMPILE_BATCHING": {
		"name": "VS_NO_COMPILE_BATCHING",
		"description": "Vypnutí dávkování kompilace pro cíl. Obvykle MSBuild volá kompilátor s více soubory c/cpp a kompilátor spouští podprocesy pro každý soubor, aby bylo sestavování paralelní. Pokud chcete, aby byl kompilátor volán vždy s jedním souborem, nastavte VS_NO_COMPILE_BATCHING na ON. Pokud je tento příznak nastaven, MSBuild vyvolá kompilátor vždy s jedním souborem c/cpp. Užitečné, pokud chcete použít nástroj, který nahradí kompilátor, například nějaký nástroj pro ukládání sestavení do mezipaměti."
	},
	"VS_NO_SOLUTION_DEPLOY": {
		"name": "VS_NO_SOLUTION_DEPLOY",
		"description": "Určuje, že cíl nemá být ve vygenerovaném řešení Visual Studio označen pro nasazení do zařízení se systémem Windows CE nebo Windows Phone."
	},
	"VS_PACKAGE_REFERENCES": {
		"name": "VS_PACKAGE_REFERENCES",
		"description": "Odkazy na balíček sady Visual Studio pro nuget"
	},
	"VS_PLATFORM_TOOLSET": {
		"name": "VS_PLATFORM_TOOLSET",
		"description": "Má přednost před sadou nástrojů platformy, která se používá k sestavení cíle."
	},
	"VS_PROJECT_IMPORT": {
		"name": "VS_PROJECT_IMPORT",
		"description": "Importy projektů spravovaných sadou Visual Studio"
	},
	"VS_SCC_AUXPATH": {
		"name": "VS_SCC_AUXPATH",
		"description": "Pomocná cesta správy zdrojového kódu sady Visual Studio"
	},
	"VS_SCC_LOCALPATH": {
		"name": "VS_SCC_LOCALPATH",
		"description": "Místní cesta správy zdrojového kódu sady Visual Studio"
	},
	"VS_SCC_PROJECTNAME": {
		"name": "VS_SCC_PROJECTNAME",
		"description": "Projekt správy zdrojového kódu sady Visual Studio"
	},
	"VS_SCC_PROVIDER": {
		"name": "VS_SCC_PROVIDER",
		"description": "Poskytovatel správy zdrojového kódu sady Visual Studio"
	},
	"VS_SDK_REFERENCES": {
		"name": "VS_SDK_REFERENCES",
		"description": "Odkazy na sadu SDK v projektu sady Visual Studio. Zadejte seznam středníkem oddělených odkazů na sadu SDK, které se mají přidat do vygenerovaného projektu sady Visual Studio, třeba Microsoft.AdMediatorWindows81, Version=1.0."
	},
	"VS_SOLUTION_DEPLOY": {
		"name": "VS_SOLUTION_DEPLOY",
		"description": "Určuje, že má být cíl označen pro nasazení, pokud není cílen na Windows CE, Windows Phone nebo aplikaci pro Windows Store."
	},
	"VS_SOURCE_SETTINGS_<tool>": {
		"name": "VS_SOURCE_SETTINGS_<tool>",
		"description": "Umožňuje nastavit metadata libovolné položky ve všech souborech, které nejsou sestaveny a používají nástroj <tool>."
	},
	"VS_USER_PROPS": {
		"name": "VS_USER_PROPS",
		"description": "Nastavte soubor vlastností uživatele, který se zahrne do souboru projektu Visual Studio C++. Standardní cesta je $(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props, která se ve většině případů shoduje s cestou %LOCALAPPDATA%\\\\Microsoft\\\\MSBuild\\\\v4.0\\\\Microsoft.Cpp.Win32.user.props nebo %LOCALAPPDATA%\\\\Microsoft\\\\MSBuild\\\\v4.0\\\\Microsoft.Cpp.x64.user.props."
	},
	"VS_USE_DEBUG_LIBRARIES": {
		"name": "VS_USE_DEBUG_LIBRARIES",
		"description": "Indikuje pro generátory sady Visual Studio, které konfigurace se považují za konfigurace ladění. To řídí nastavení UseDebugLibraries v každé konfiguraci souboru .vcxproj."
	},
	"VS_WINDOWS_TARGET_PLATFORM_MIN_VERSION": {
		"name": "VS_WINDOWS_TARGET_PLATFORM_MIN_VERSION",
		"description": "Minimální verze cílové platformy Windows sady Visual Studio"
	},
	"VS_WINRT_COMPONENT": {
		"name": "VS_WINRT_COMPONENT",
		"description": "Označte cíl jako komponentu prostředí Windows Runtime pro generátor sady Visual Studio. Zkompilujte cíl s rozšířeními jazyka C++/CX pro prostředí Windows Runtime. Pro knihovny SHARED a MODULE tato možnost navíc definuje makro preprocesoru _WINRT_DLL."
	},
	"VS_WINRT_EXTENSIONS": {
		"name": "VS_WINRT_EXTENSIONS",
		"description": "Zastaralé. Použijte místo toho VS_WINRT_COMPONENT. Daná vlastnost byla experimentální částečnou implementací této vlastnosti."
	},
	"VS_WINRT_REFERENCES": {
		"name": "VS_WINRT_REFERENCES",
		"description": "Odkazy na metadata prostředí Windows Runtime projektu sady Visual Studio"
	},
	"WATCOM_RUNTIME_LIBRARY": {
		"name": "WATCOM_RUNTIME_LIBRARY",
		"description": "Vyberte běhovou knihovnu Watcom pro použití kompilátory zaměřenými na rozhraní Watcom ABI."
	},
	"WIN32_EXECUTABLE": {
		"name": "WIN32_EXECUTABLE",
		"description": "Sestavte spustitelný soubor se vstupním bodem WinMain na Windows."
	},
	"WINDOWS_EXPORT_ALL_SYMBOLS": {
		"name": "WINDOWS_EXPORT_ALL_SYMBOLS",
		"description": "Tato vlastnost je implementovaná jen pro nástroje kompatibilní s Microsoftem ve Windows."
	},
	"XCODE_ATTRIBUTE_<an-attribute>": {
		"name": "XCODE_ATTRIBUTE_<an-attribute>",
		"description": "Nastavte cílové atributy pro Xcode přímo."
	},
	"XCODE_EMBED_FRAMEWORKS_CODE_SIGN_ON_COPY": {
		"name": "XCODE_EMBED_FRAMEWORKS_CODE_SIGN_ON_COPY",
		"description": "Umožňuje dát generátoru Xcode pokyn, aby pro všechny architektury a knihovny vložené pomocí vlastnosti XCODE_EMBED_FRAMEWORKS <XCODE_EMBED_<type>> podepisoval kód."
	},
	"XCODE_EMBED_FRAMEWORKS_REMOVE_HEADERS_ON_COPY": {
		"name": "XCODE_EMBED_FRAMEWORKS_REMOVE_HEADERS_ON_COPY",
		"description": "Umožňuje dát generátoru Xcode pokyn, aby ze všech architektur vložených pomocí vlastnosti XCODE_EMBED_FRAMEWORKS <XCODE_EMBED_<type>> odebral hlavičky."
	},
	"XCODE_EMBED_<type>": {
		"name": "XCODE_EMBED_<type>",
		"description": "Instruujte generátor Xcode, aby vložil zadaný seznam položek do cílové sady. <type> určuje fázi sestavení pro vložení, která se má použít. Základní umístění každého typu <type> najdete v dokumentaci k Xcode."
	},
	"XCODE_EMBED_<type>_CODE_SIGN_ON_COPY": {
		"name": "XCODE_EMBED_<type>_CODE_SIGN_ON_COPY",
		"description": "Logická vlastnost používaná pouze generátorem Xcode. Určuje, jestli se má provádět podepisování kódu u položek vložených pomocí vlastnosti XCODE_EMBED_."
	},
	"XCODE_EMBED_<type>_PATH": {
		"name": "XCODE_EMBED_<type>_PATH",
		"description": "Tuto vlastnost používá pouze generátor Xcode. Když je definována, určuje relativní cestu, která se použije při vkládání položek určených v XCODE_EMBED_. Cesta je relativní vůči základnímu umístění fáze sestavení Embed XXX s přidruženým typem <type>. Základní umístění každého typu <type> najdete v dokumentaci k Xcode."
	},
	"XCODE_EMBED_<type>_REMOVE_HEADERS_ON_COPY": {
		"name": "XCODE_EMBED_<type>_REMOVE_HEADERS_ON_COPY",
		"description": "Logická vlastnost používaná pouze generátorem Xcode. Určuje, jestli se mají odebrat hlavičky ze všech architektur vložených pomocí vlastnosti XCODE_EMBED_."
	},
	"XCODE_GENERATE_SCHEME": {
		"name": "XCODE_GENERATE_SCHEME",
		"description": "Pokud je možnost povolena, vygeneruje generátor Xcode soubory schématu. Jsou užitečné pro vyvolání akcí analyzování, archivace, sestavení pro testování a testování z příkazového řádku."
	},
	"XCODE_LINK_BUILD_PHASE_MODE": {
		"name": "XCODE_LINK_BUILD_PHASE_MODE",
		"description": "Když se používá generátor Xcode, knihovny, které se mají připojit, se zadávají v souboru projektu Xcode buď pomocí fáze sestavení Link Binary With Libraries (Propojit binární soubor s knihovnami), nebo přímo jako příznaky linkeru. To první umožňuje nástroji Xcode spravovat cesty sestavení, což může být zapotřebí při vytváření archivů Xcode. V takovém případě totiž může Xcode používat jiné cesty k běžnému sestavení."
	},
	"XCODE_PRODUCT_TYPE": {
		"name": "XCODE_PRODUCT_TYPE",
		"description": "Nastavte atribut Xcode productType v jeho odkazu na cíl. CMake vypočítá výchozí hodnotu podle cílového typu, ale pomocí této vlastnosti je možné určit hodnotu explicitně."
	},
	"XCODE_SCHEME_ADDRESS_SANITIZER": {
		"name": "XCODE_SCHEME_ADDRESS_SANITIZER",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky povolit sanitizér adres."
	},
	"XCODE_SCHEME_ADDRESS_SANITIZER_USE_AFTER_RETURN": {
		"name": "XCODE_SCHEME_ADDRESS_SANITIZER_USE_AFTER_RETURN",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky povolit detekce použití zásobníku po návratu."
	},
	"XCODE_SCHEME_ARGUMENTS": {
		"name": "XCODE_SCHEME_ARGUMENTS",
		"description": "Zadejte argumenty příkazového řádku, které by se měly přidat do části Argument vygenerovaného schématu Xcode."
	},
	"XCODE_SCHEME_DEBUG_AS_ROOT": {
		"name": "XCODE_SCHEME_DEBUG_AS_ROOT",
		"description": "Určuje, jestli se má cíl ladit jako kořen."
	},
	"XCODE_SCHEME_DEBUG_DOCUMENT_VERSIONING": {
		"name": "XCODE_SCHEME_DEBUG_DOCUMENT_VERSIONING",
		"description": "Určuje, jestli se má povolit možnost Povolit ladění, když se v oddíle Možnosti vygenerovaného schématu Xcode používá prohlížeč verzí dokumentu."
	},
	"XCODE_SCHEME_DISABLE_MAIN_THREAD_CHECKER": {
		"name": "XCODE_SCHEME_DISABLE_MAIN_THREAD_CHECKER",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu Diagnostics zakázat Main Thread Checker."
	},
	"XCODE_SCHEME_DYNAMIC_LIBRARY_LOADS": {
		"name": "XCODE_SCHEME_DYNAMIC_LIBRARY_LOADS",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky povolit načítání dynamických knihoven."
	},
	"XCODE_SCHEME_DYNAMIC_LINKER_API_USAGE": {
		"name": "XCODE_SCHEME_DYNAMIC_LINKER_API_USAGE",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky povolit dynamické použití rozhraní API linkeru."
	},
	"XCODE_SCHEME_ENABLE_GPU_API_VALIDATION": {
		"name": "XCODE_SCHEME_ENABLE_GPU_API_VALIDATION",
		"description": "Hodnota vlastnosti pro Metal: Ověření rozhraní API v části Možnosti vygenerovaného schématu Xcode."
	},
	"XCODE_SCHEME_ENABLE_GPU_FRAME_CAPTURE_MODE": {
		"name": "XCODE_SCHEME_ENABLE_GPU_FRAME_CAPTURE_MODE",
		"description": "Hodnota vlastnosti pro zachytávání snímků GPU v části Možnosti vygenerovaného schématu Xcode. Příklady hodnot jsou Metal a Disabled."
	},
	"XCODE_SCHEME_ENABLE_GPU_SHADER_VALIDATION": {
		"name": "XCODE_SCHEME_ENABLE_GPU_SHADER_VALIDATION",
		"description": "Hodnota vlastnosti pro Metal: Ověření shaderu v části Možnosti vygenerovaného schématu Xcode."
	},
	"XCODE_SCHEME_ENVIRONMENT": {
		"name": "XCODE_SCHEME_ENVIRONMENT",
		"description": "Zadejte proměnné prostředí, které by se měly přidat do části Argument vygenerovaného schématu Xcode."
	},
	"XCODE_SCHEME_EXECUTABLE": {
		"name": "XCODE_SCHEME_EXECUTABLE",
		"description": "Zadejte cestu ke spustitelnému souboru v části Info vygenerovaného schématu Xcode. Pokud se tato cesta nenastaví, generátor schématu vybere aktuální cíl, pokud je možné ho spustit."
	},
	"XCODE_SCHEME_GUARD_MALLOC": {
		"name": "XCODE_SCHEME_GUARD_MALLOC",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky povolit možnost Guard Malloc."
	},
	"XCODE_SCHEME_LAUNCH_CONFIGURATION": {
		"name": "XCODE_SCHEME_LAUNCH_CONFIGURATION",
		"description": "Nastavte konfiguraci sestavení tak, aby se spustil cíl."
	},
	"XCODE_SCHEME_LAUNCH_MODE": {
		"name": "XCODE_SCHEME_LAUNCH_MODE",
		"description": "Hodnota vlastnosti Launch v oddílu Informace vygenerovaného schématu Xcode."
	},
	"XCODE_SCHEME_MAIN_THREAD_CHECKER_STOP": {
		"name": "XCODE_SCHEME_MAIN_THREAD_CHECKER_STOP",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu Diagnostics u Main Thread Checkeru povolit možnost Pause při potížích."
	},
	"XCODE_SCHEME_MALLOC_GUARD_EDGES": {
		"name": "XCODE_SCHEME_MALLOC_GUARD_EDGES",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky povolit možnost Malloc Guard Edges."
	},
	"XCODE_SCHEME_MALLOC_SCRIBBLE": {
		"name": "XCODE_SCHEME_MALLOC_SCRIBBLE",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky povolit možnost Malloc Scribble."
	},
	"XCODE_SCHEME_MALLOC_STACK": {
		"name": "XCODE_SCHEME_MALLOC_STACK",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky povolit zásobník funkce Malloc."
	},
	"XCODE_SCHEME_THREAD_SANITIZER": {
		"name": "XCODE_SCHEME_THREAD_SANITIZER",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky povolit sanitizér vláken."
	},
	"XCODE_SCHEME_THREAD_SANITIZER_STOP": {
		"name": "XCODE_SCHEME_THREAD_SANITIZER_STOP",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky u Thread Sanitizeru povolit možnost pozastavení při potížích."
	},
	"XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER": {
		"name": "XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky povolit Undefined Behavior Sanitizer."
	},
	"XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER_STOP": {
		"name": "XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER_STOP",
		"description": "Určuje, jestli se má ve vygenerovaném schématu Xcode v oddílu diagnostiky u Undefined Behavior Sanitizeru povolit možnost pozastavení při potížích."
	},
	"XCODE_SCHEME_WORKING_DIRECTORY": {
		"name": "XCODE_SCHEME_WORKING_DIRECTORY",
		"description": "Umožňuje určit pracovní adresář akcí spuštění a profilu ve vygenerovaném schématu Xcode. V případě, že hodnota obsahuje výrazy generátoru, jsou tyto vyhodnoceny."
	},
	"XCODE_SCHEME_ZOMBIE_OBJECTS": {
		"name": "XCODE_SCHEME_ZOMBIE_OBJECTS",
		"description": "Určuje, jestli se mají ve vygenerovaném schématu Xcode v oddílu diagnostiky povolit zombie objekty."
	},
	"XCODE_XCCONFIG": {
		"name": "XCODE_XCCONFIG",
		"description": "Pokud je tato možnost nastavená, generátor Xcode zaregistruje zadaný soubor jako soubor XCConfig na úrovni cíle. Pro globální soubory XCConfig se podívejte na proměnnou CMAKE_XCODE_XCCONFIG."
	},
	"XCTEST": {
		"name": "XCTEST",
		"description": "Tento cíl je XCTest CFBundle na Macu."
	}
}