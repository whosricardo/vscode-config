{
	"ANDROID": {
		"name": "ANDROID",
		"description": "Auf \"1\" setzen, wenn das Zielsystem (CMAKE_SYSTEM_NAME) Android ist."
	},
	"APPLE": {
		"name": "APPLE",
		"description": "Setzen Sie sie auf TRUE, wenn das Zielsystem eine Apple-Plattform ist (macOS, iOS, tvOS, visionOS oder watchOS)."
	},
	"BORLAND": {
		"name": "BORLAND",
		"description": "\"True\", wenn der Borland-Compiler verwendet wird."
	},
	"BSD": {
		"name": "BSD",
		"description": "Wird auf einen Zeichenfolgenwert festgelegt, wenn das Zielsystem BSD ist. Dieser Wert kann einer der folgenden sein: DragonFlyBSD, FreeBSD, OpenBSD oder NetBSD."
	},
	"BUILD_SHARED_LIBS": {
		"name": "BUILD_SHARED_LIBS",
		"description": "Hiermit wird add_library beim Aufruf ohne expliziten Bibliothekstyp auf den Standardwert \"SHARED libraries\" und nicht auf \"STATIC libraries\" festgelegt."
	},
	"CACHE": {
		"name": "CACHE",
		"description": "Ein Operator zum Lesen von Cachevariablen."
	},
	"CMAKE_ABSOLUTE_DESTINATION_FILES": {
		"name": "CMAKE_ABSOLUTE_DESTINATION_FILES",
		"description": "Liste der Dateien, die mithilfe eines ABSOLUTE DESTINATION-Pfads installiert wurden."
	},
	"CMAKE_ADD_CUSTOM_COMMAND_DEPENDS_EXPLICIT_ONLY": {
		"name": "CMAKE_ADD_CUSTOM_COMMAND_DEPENDS_EXPLICIT_ONLY",
		"description": "Gibt an, ob die Option DEPENDS_EXPLICIT_ONLY standardmäßig in add_custom_command aktiviert werden soll."
	},
	"CMAKE_ADSP_ROOT": {
		"name": "CMAKE_ADSP_ROOT",
		"description": "Bei :ref:`Cross Compiling for ADSP SHARC/Blackfin` enthält diese Variable den absoluten Pfad zur neuesten CCES- oder VDSP++-Installation. Es wird erwartet, dass das Verzeichnis die Compiler cc21k.exe und ccblkfn.exe enthält. Dies wird automatisch festgelegt, wenn eine Standardinstallation von CCES oder VDSP++ gefunden wird."
	},
	"CMAKE_AIX_EXPORT_ALL_SYMBOLS": {
		"name": "CMAKE_AIX_EXPORT_ALL_SYMBOLS",
		"description": "Der Standardwert der AIX_EXPORT_ALL_SYMBOLS-Eigenschaft des Ziels. Mit dieser Variablen wird die Eigenschaft für die einzelnen Ziele bei deren Erstellung initialisiert."
	},
	"CMAKE_ANDROID_ANT_ADDITIONAL_OPTIONS": {
		"name": "CMAKE_ANDROID_ANT_ADDITIONAL_OPTIONS",
		"description": "Standardwert der Zieleigenschaft ANDROID_ANT_ADDITIONAL_OPTIONS. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_ANDROID_API": {
		"name": "CMAKE_ANDROID_API",
		"description": "Bei der Crosskompilierung für Android mit NVIDIA Nsight Tegra Visual Studio Edition kann diese Variable zur Angabe des Standardwerts der Zieleigenschaft ANDROID_API festgelegt werden. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_ANDROID_API_MIN": {
		"name": "CMAKE_ANDROID_API_MIN",
		"description": "Der Standardwert der Zieleigenschaft ANDROID_API_MIN. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_ANDROID_ARCH": {
		"name": "CMAKE_ANDROID_ARCH",
		"description": "Bei der Crosskompilierung für Android mit der NVIDIA Nsight Tegra Visual Studio Edition kann diese Variable zur Angabe des Standardwerts der Zieleigenschaft ANDROID_ARCH festgelegt werden. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_ANDROID_ARCH_ABI": {
		"name": "CMAKE_ANDROID_ARCH_ABI",
		"description": "Bei der Crosskompilierung für Android gibt diese Variable die zu verwendende Zielarchitektur und ABI an. Gültige Werte:"
	},
	"CMAKE_ANDROID_ARM_MODE": {
		"name": "CMAKE_ANDROID_ARM_MODE",
		"description": "Wenn Sie eine Crosskompilierung für Android durchführen und CMAKE_ANDROID_ARCH_ABI auf eine der \"armeabi\"-Architekturen festgelegt ist, setzen Sie zur Angabe von 32-Bit-ARM-Prozessoren (\"-marm\") als Ziel CMAKE_ANDROID_ARM_MODE auf ON. Andernfalls werden standardmäßig 16-Bit-Thumb-Prozessoren (\"-mthumb\") als Ziel angegeben."
	},
	"CMAKE_ANDROID_ARM_NEON": {
		"name": "CMAKE_ANDROID_ARM_NEON",
		"description": "Ist bei der Crosskompilierung für Android CMAKE_ANDROID_ARCH_ABI auf \"armeabi-v7a\" gesetzt, legen Sie CMAKE_ANDROID_ARM_NEON auf ON fest, um ARM NEON-Geräte als Ziel anzugeben."
	},
	"CMAKE_ANDROID_ASSETS_DIRECTORIES": {
		"name": "CMAKE_ANDROID_ASSETS_DIRECTORIES",
		"description": "Der Standardwert der Zieleigenschaft ANDROID_ASSETS_DIRECTORIES. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_ANDROID_EXCEPTIONS": {
		"name": "CMAKE_ANDROID_EXCEPTIONS",
		"description": "Bei einer Crosskompilierung für Android mit dem NDK wird diese Variable möglicherweise festgelegt, um anzugeben, ob Ausnahmen aktiviert sind."
	},
	"CMAKE_ANDROID_GUI": {
		"name": "CMAKE_ANDROID_GUI",
		"description": "Der Standardwert der Zieleigenschaft ANDROID_GUI. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_ANDROID_JAR_DEPENDENCIES": {
		"name": "CMAKE_ANDROID_JAR_DEPENDENCIES",
		"description": "Der Standardwert der Zieleigenschaft ANDROID_JAR_DEPENDENCIES. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_ANDROID_JAR_DIRECTORIES": {
		"name": "CMAKE_ANDROID_JAR_DIRECTORIES",
		"description": "Der Standardwert der Zieleigenschaft ANDROID_JAR_DIRECTORIES. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_ANDROID_JAVA_SOURCE_DIR": {
		"name": "CMAKE_ANDROID_JAVA_SOURCE_DIR",
		"description": "Der Standardwert der Zieleigenschaft ANDROID_JAVA_SOURCE_DIR. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_ANDROID_NATIVE_LIB_DEPENDENCIES": {
		"name": "CMAKE_ANDROID_NATIVE_LIB_DEPENDENCIES",
		"description": "Der Standardwert der Zieleigenschaft ANDROID_NATIVE_LIB_DEPENDENCIES. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_ANDROID_NATIVE_LIB_DIRECTORIES": {
		"name": "CMAKE_ANDROID_NATIVE_LIB_DIRECTORIES",
		"description": "Der Standardwert der Zieleigenschaft ANDROID_NATIVE_LIB_DIRECTORIES. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_ANDROID_NDK": {
		"name": "CMAKE_ANDROID_NDK",
		"description": "Wird die Crosskompilierung für Android mit dem NDK durchgeführt, enthält diese Variable den absoluten Pfad zum Stammverzeichnis des NDK. Das Verzeichnis muss das Unterverzeichnis \"platforms\" mit den android-<api>-Verzeichnissen enthalten."
	},
	"CMAKE_ANDROID_NDK_DEPRECATED_HEADERS": {
		"name": "CMAKE_ANDROID_NDK_DEPRECATED_HEADERS",
		"description": "Bei einer Crosskompilierung für Android mit dem NDK wird diese Variable möglicherweise festgelegt, um anzugeben, ob anstelle der vereinheitlichten Kopfzeilen die veralteten, für die einzelnen API-Ebenen bestimmten Kopfzeilen verwendet werden."
	},
	"CMAKE_ANDROID_NDK_TOOLCHAIN_HOST_TAG": {
		"name": "CMAKE_ANDROID_NDK_TOOLCHAIN_HOST_TAG",
		"description": "Bei einer Crosskompilierung für Android mit dem NDK stellt diese Variable das \"Host-Tag\" des NDK bereit, das zum Erstellen des Pfads zu vordefinierten Toolketten verwendet wird, die auf dem Host ausgeführt werden."
	},
	"CMAKE_ANDROID_NDK_TOOLCHAIN_VERSION": {
		"name": "CMAKE_ANDROID_NDK_TOOLCHAIN_VERSION",
		"description": "Bei einer Crosskompilierung für Android mit dem NDK wird diese Variable möglicherweise festgelegt, um die Version der Toolkette anzugeben, die als Compiler verwendet wird."
	},
	"CMAKE_ANDROID_NDK_VERSION": {
		"name": "CMAKE_ANDROID_NDK_VERSION",
		"description": "Bei einer Crosskompilierung für Android mit dem NDK und bei Verwendung von Android NDK-Version 11 und höher wird diese Variable von CMake bereitgestellt, um die Nummer der NDK-Version zu melden."
	},
	"CMAKE_ANDROID_PROCESS_MAX": {
		"name": "CMAKE_ANDROID_PROCESS_MAX",
		"description": "Der Standardwert der Zieleigenschaft ANDROID_PROCESS_MAX. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_ANDROID_PROGUARD": {
		"name": "CMAKE_ANDROID_PROGUARD",
		"description": "Der Standardwert der Zieleigenschaft ANDROID_PROGUARD. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_ANDROID_PROGUARD_CONFIG_PATH": {
		"name": "CMAKE_ANDROID_PROGUARD_CONFIG_PATH",
		"description": "Der Standardwert der Zieleigenschaft ANDROID_PROGUARD_CONFIG_PATH. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_ANDROID_RTTI": {
		"name": "CMAKE_ANDROID_RTTI",
		"description": "Bei einer Crosskompilierung für Android mit dem NDK wird diese Variable möglicherweise festgelegt, um anzugeben, ob RTTI aktiviert ist."
	},
	"CMAKE_ANDROID_SECURE_PROPS_PATH": {
		"name": "CMAKE_ANDROID_SECURE_PROPS_PATH",
		"description": "Der Standardwert der Zieleigenschaft ANDROID_SECURE_PROPS_PATH. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_ANDROID_SKIP_ANT_STEP": {
		"name": "CMAKE_ANDROID_SKIP_ANT_STEP",
		"description": "Der Standardwert der Zieleigenschaft ANDROID_SKIP_ANT_STEP. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_ANDROID_STANDALONE_TOOLCHAIN": {
		"name": "CMAKE_ANDROID_STANDALONE_TOOLCHAIN",
		"description": "Wird die Crosskompilierung für Android mit einer eigenständigen Toolkette durchgeführt, enthält diese Variable den absoluten Pfad zum Stammverzeichnis der Toolkette. Das angegebene Verzeichnis muss ein \"sysroot\"-Unterverzeichnis enthalten."
	},
	"CMAKE_ANDROID_STL_TYPE": {
		"name": "CMAKE_ANDROID_STL_TYPE",
		"description": "Bei der Crosskompilierung für Android mit NVIDIA Nsight Tegra Visual Studio Edition kann diese Variable zur Angabe des Standardwerts der Zieleigenschaft ANDROID_STL_TYPE festgelegt werden. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_APPBUNDLE_PATH": {
		"name": "CMAKE_APPBUNDLE_PATH",
		"description": "Eine mittels Semikolon getrennte Liste mit Verzeichnissen unter Angabe eines Suchpfads für macOS-Anwendungsbundles, der von den Befehlen \"find_program\" und \"find_package\" verwendet wird."
	},
	"CMAKE_APPLE_SILICON_PROCESSOR": {
		"name": "CMAKE_APPLE_SILICON_PROCESSOR",
		"description": "Legen Sie diese Variable auf Apple Silicon-Hosts unter macOS fest, um CMake die Architektur anzugeben, die für CMAKE_HOST_SYSTEM_PROCESSOR verwendet werden soll. Der Wert muss entweder \"arm64\" oder \"x86_64\" lauten."
	},
	"CMAKE_AR": {
		"name": "CMAKE_AR",
		"description": "Der Name des für statische Bibliotheken genutzten Archivierungstools."
	},
	"CMAKE_ARCHIVE_OUTPUT_DIRECTORY": {
		"name": "CMAKE_ARCHIVE_OUTPUT_DIRECTORY",
		"description": "Gibt an, wo alle ARCHIV-Zieldateien nach der Erstellung abgelegt werden."
	},
	"CMAKE_ARCHIVE_OUTPUT_DIRECTORY_<CONFIG>": {
		"name": "CMAKE_ARCHIVE_OUTPUT_DIRECTORY_<CONFIG>",
		"description": "Gibt an, wo alle ARCHIVE-Zieldateien nach der Erstellung für eine bestimmte Konfiguration abgelegt werden."
	},
	"CMAKE_ARGC": {
		"name": "CMAKE_ARGC",
		"description": "Die Anzahl an Befehlszeilenargumenten, die im Skriptmodus an CMake übergeben werden."
	},
	"CMAKE_ARGV0": {
		"name": "CMAKE_ARGV0",
		"description": "Ein Befehlszeilenargument, das im Skriptmodus an CMake übergeben wird."
	},
	"CMAKE_AUTOGEN_BETTER_GRAPH_MULTI_CONFIG": {
		"name": "CMAKE_AUTOGEN_BETTER_GRAPH_MULTI_CONFIG",
		"description": "Diese Variable wird verwendet, um die AUTOGEN_BETTER_GRAPH_MULTI_CONFIG-Eigenschaft für alle Ziele zu initialisieren, während sie erstellt werden. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_AUTOGEN_COMMAND_LINE_LENGTH_MAX": {
		"name": "CMAKE_AUTOGEN_COMMAND_LINE_LENGTH_MAX",
		"description": "Grenzwert für die Befehlszeilenlänge für autogen-Ziele, d. h. „moc“ oder „uic“, der die Verwendung von Antwortdateien unter Windows auslöst, anstatt alle Argumente an die Befehlszeile zu übergeben."
	},
	"CMAKE_AUTOGEN_ORIGIN_DEPENDS": {
		"name": "CMAKE_AUTOGEN_ORIGIN_DEPENDS",
		"description": "Wechseln Sie zum Weiterleiten von Ursprungszielabhängigkeiten an die entsprechenden <ORIGIN>_autogen-Ziele."
	},
	"CMAKE_AUTOGEN_PARALLEL": {
		"name": "CMAKE_AUTOGEN_PARALLEL",
		"description": "Die Anzahl paralleler moc- oder uic-Prozesse, die bei Verwendung von AUTOMOC und AUTOUIC gestartet werden."
	},
	"CMAKE_AUTOGEN_USE_SYSTEM_INCLUDE": {
		"name": "CMAKE_AUTOGEN_USE_SYSTEM_INCLUDE",
		"description": "Diese Variable wird verwendet, um die AUTOGEN_USE_SYSTEM_INCLUDE-Eigenschaft für alle Ziele zu initialisieren, während sie erstellt werden. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_AUTOGEN_VERBOSE": {
		"name": "CMAKE_AUTOGEN_VERBOSE",
		"description": "Legt die Ausführlichkeit von AUTOMOC, AUTOUIC und AUTORCC fest. Bei einem positiven Ganzzahlwert oder einem wahren booleschen Wert geben die AUTO*-Generatoren zusätzliche Verarbeitungsinformationen aus."
	},
	"CMAKE_AUTOMOC": {
		"name": "CMAKE_AUTOMOC",
		"description": "Gibt an, ob moc für Qt-Ziele automatisch verarbeitet wird."
	},
	"CMAKE_AUTOMOC_COMPILER_PREDEFINES": {
		"name": "CMAKE_AUTOMOC_COMPILER_PREDEFINES",
		"description": "Mit dieser Variable wird die Eigenschaft AUTOMOC_COMPILER_PREDEFINES auf allen Zielen initialisiert. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_AUTOMOC_DEPEND_FILTERS": {
		"name": "CMAKE_AUTOMOC_DEPEND_FILTERS",
		"description": "Filtern Sie von CMAKE_AUTOMOC verwendete Definitionen, um Dateinamen aus dem Quellcode als zusätzliche Abhängigkeiten der MOC-Datei zu extrahieren."
	},
	"CMAKE_AUTOMOC_EXECUTABLE": {
		"name": "CMAKE_AUTOMOC_EXECUTABLE",
		"description": "Mit dieser Variable wird die Eigenschaft AUTOMOC_EXECUTABLE auf allen Zielen initialisiert. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_AUTOMOC_MACRO_NAMES": {
		"name": "CMAKE_AUTOMOC_MACRO_NAMES",
		"description": "Eine durch Semikolon getrennte Liste mit Makronamen. Sie wird von CMAKE_AUTOMOC verwendet, um zu bestimmen, ob eine C++-Datei von \"moc\" verarbeitet werden muss."
	},
	"CMAKE_AUTOMOC_MOC_OPTIONS": {
		"name": "CMAKE_AUTOMOC_MOC_OPTIONS",
		"description": "Zusätzliche Optionen für moc beim Verwenden von CMAKE_AUTOMOC."
	},
	"CMAKE_AUTOMOC_PATH_PREFIX": {
		"name": "CMAKE_AUTOMOC_PATH_PREFIX",
		"description": "Hiermit wird angegeben, ob für Qt-Ziele mit AUTOMOC-Aktivierung die Pfadpräfix Option \"-p\" generiert werden soll."
	},
	"CMAKE_AUTOMOC_RELAXED_MODE": {
		"name": "CMAKE_AUTOMOC_RELAXED_MODE",
		"description": "Wechseln Sie zwischen dem strikten und dem gelockerten Automoc-Modus."
	},
	"CMAKE_AUTORCC": {
		"name": "CMAKE_AUTORCC",
		"description": "Gibt an, ob rcc für Qt-Ziele automatisch verarbeitet wird."
	},
	"CMAKE_AUTORCC_EXECUTABLE": {
		"name": "CMAKE_AUTORCC_EXECUTABLE",
		"description": "Mit dieser Variable wird die Eigenschaft AUTORCC_EXECUTABLE auf allen Zielen initialisiert. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_AUTORCC_OPTIONS": {
		"name": "CMAKE_AUTORCC_OPTIONS",
		"description": "Zusätzliche Optionen für rcc beim Verwenden von CMAKE_AUTORCC."
	},
	"CMAKE_AUTOUIC": {
		"name": "CMAKE_AUTOUIC",
		"description": "Gibt an, ob uic für Qt-Ziele automatisch verarbeitet wird."
	},
	"CMAKE_AUTOUIC_EXECUTABLE": {
		"name": "CMAKE_AUTOUIC_EXECUTABLE",
		"description": "Mit dieser Variable wird die Eigenschaft AUTOUIC_EXECUTABLE auf allen Zielen initialisiert. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_AUTOUIC_OPTIONS": {
		"name": "CMAKE_AUTOUIC_OPTIONS",
		"description": "Zusätzliche Optionen für uic beim Verwenden von CMAKE_AUTOUIC."
	},
	"CMAKE_AUTOUIC_SEARCH_PATHS": {
		"name": "CMAKE_AUTOUIC_SEARCH_PATHS",
		"description": "Suchpfadliste, mit der CMAKE_AUTOUIC enthaltene .ui-Dateien findet."
	},
	"CMAKE_BACKWARDS_COMPATIBILITY": {
		"name": "CMAKE_BACKWARDS_COMPATIBILITY",
		"description": "Veraltet. Siehe Dokumentation zur CMake-Richtlinie CMP0001."
	},
	"CMAKE_BINARY_DIR": {
		"name": "CMAKE_BINARY_DIR",
		"description": "Der Pfad zur obersten Ebene des Buildbaums."
	},
	"CMAKE_BUILD_RPATH": {
		"name": "CMAKE_BUILD_RPATH",
		"description": "Eine durch Semikolon getrennte Liste zur Angabe von Laufzeitpfadeinträgen (RPATH-Einträgen), die in der Buildstruktur verknüpften Binärdateien hinzugefügt werden (für Plattformen mit entsprechender Unterstützung). Die Einträge werden nicht für Binärdateien in der Installationsstruktur verwendet. Siehe auch Variable CMAKE_INSTALL_RPATH."
	},
	"CMAKE_BUILD_RPATH_USE_ORIGIN": {
		"name": "CMAKE_BUILD_RPATH_USE_ORIGIN",
		"description": "Gibt an, ob relative Pfade für den RPATH-Wert des Builds verwendet werden sollen."
	},
	"CMAKE_BUILD_TOOL": {
		"name": "CMAKE_BUILD_TOOL",
		"description": "Diese Variable existiert nur aus Gründen der Abwärtskompatibilität. Sie enthält den gleichen Wert wie CMAKE_MAKE_PROGRAM. Verwenden Sie stattdessen diese Variable."
	},
	"CMAKE_BUILD_TYPE": {
		"name": "CMAKE_BUILD_TYPE",
		"description": "Gibt den Buildtyp für Generatoren mit nur einer Konfiguration an (z. B. Makefile-Generatoren oder Ninja). Typische Werte sind Debug, Release, RelWithDebInfo und MinSizeRel, aber auch benutzerdefinierte Buildtypen können definiert werden."
	},
	"CMAKE_BUILD_WITH_INSTALL_NAME_DIR": {
		"name": "CMAKE_BUILD_WITH_INSTALL_NAME_DIR",
		"description": "Legt fest, ob für Ziele im Buildbaum INSTALL_NAME_DIR verwendet wird."
	},
	"CMAKE_BUILD_WITH_INSTALL_RPATH": {
		"name": "CMAKE_BUILD_WITH_INSTALL_RPATH",
		"description": "Verwenden Sie den Installationspfad für RPATH."
	},
	"CMAKE_CACHEFILE_DIR": {
		"name": "CMAKE_CACHEFILE_DIR",
		"description": "Diese Variable wird intern von CMake verwendet und darf während der ersten Konfiguration eines Build-Baums nicht festgelegt werden. Wenn es gesetzt ist, hat es denselben Wert wie CMAKE_BINARY_DIR. Verwenden Sie stattdessen diese Variable."
	},
	"CMAKE_CACHE_MAJOR_VERSION": {
		"name": "CMAKE_CACHE_MAJOR_VERSION",
		"description": "Hauptversion von CMake zum Erstellen der Datei \"CMakeCache.txt\""
	},
	"CMAKE_CACHE_MINOR_VERSION": {
		"name": "CMAKE_CACHE_MINOR_VERSION",
		"description": "Nebenversion von CMake zum Erstellen der Datei \"CMakeCache.txt\""
	},
	"CMAKE_CACHE_PATCH_VERSION": {
		"name": "CMAKE_CACHE_PATCH_VERSION",
		"description": "Patchversion von CMake zum Erstellen der Datei \"CMakeCache.txt\""
	},
	"CMAKE_CFG_INTDIR": {
		"name": "CMAKE_CFG_INTDIR",
		"description": "Buildzeitverweis auf Ausgabeunterverzeichnis (pro Konfiguration)"
	},
	"CMAKE_CLANG_VFS_OVERLAY": {
		"name": "CMAKE_CLANG_VFS_OVERLAY",
		"description": "Bei einer Crosskompilierung für Windows mit clang-cl kann diese Variable ein absoluter Pfad sein, der auf die YAML-Datei eines virtuellen clang-Dateisystems verweist. So kann clang-cl Windows-Headernamen in einem Dateisystem auflösen, bei dem die Groß-/Kleinschreibung relevant ist."
	},
	"CMAKE_CL_64": {
		"name": "CMAKE_CL_64",
		"description": "Nicht empfohlen. Verwenden Sie stattdessen CMAKE_SIZEOF_VOID_P."
	},
	"CMAKE_CODEBLOCKS_COMPILER_ID": {
		"name": "CMAKE_CODEBLOCKS_COMPILER_ID",
		"description": "Ändern Sie die Compiler-ID in den generierten CodeBlocks-Projektdateien."
	},
	"CMAKE_CODEBLOCKS_EXCLUDE_EXTERNAL_FILES": {
		"name": "CMAKE_CODEBLOCKS_EXCLUDE_EXTERNAL_FILES",
		"description": "Ändern Sie die Vorgehensweise des CodeBlocks-Generators beim Erstellen von Projektdateien."
	},
	"CMAKE_CODELITE_USE_TARGETS": {
		"name": "CMAKE_CODELITE_USE_TARGETS",
		"description": "Ändern Sie die Vorgehensweise des CodeLite-Generators beim Erstellen von Projektdateien."
	},
	"CMAKE_COLOR_DIAGNOSTICS": {
		"name": "CMAKE_COLOR_DIAGNOSTICS",
		"description": "Aktivieren Sie die Farbdiagnose im gesamten Bereich."
	},
	"CMAKE_COLOR_MAKEFILE": {
		"name": "CMAKE_COLOR_MAKEFILE",
		"description": "Aktiviert die Farbausgabe beim Verwenden der Makefile-Generatoren."
	},
	"CMAKE_COMMAND": {
		"name": "CMAKE_COMMAND",
		"description": "Der vollständige Pfad zur ausführbaren CMake-Datei."
	},
	"CMAKE_COMPILER_2005": {
		"name": "CMAKE_COMPILER_2005",
		"description": "Verwenden des Visual Studio 2005-Compilers von Microsoft"
	},
	"CMAKE_COMPILER_IS_GNUCC": {
		"name": "CMAKE_COMPILER_IS_GNUCC",
		"description": "WAHR, wenn der C-Compiler GNU ist."
	},
	"CMAKE_COMPILER_IS_GNUCXX": {
		"name": "CMAKE_COMPILER_IS_GNUCXX",
		"description": "WAHR, wenn der C++ (CXX)-Compiler GNU ist."
	},
	"CMAKE_COMPILER_IS_GNUG77": {
		"name": "CMAKE_COMPILER_IS_GNUG77",
		"description": "WAHR, wenn der Fortran-Compiler GNU ist."
	},
	"CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY": {
		"name": "CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY",
		"description": "Ausgabeverzeichnis für MS-Debugsymbol-.pdb-Dateien, die der Compiler beim Erstellen von Quelldateien generiert."
	},
	"CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY_<CONFIG>": {
		"name": "CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY_<CONFIG>",
		"description": "Ausgabeverzeichnis (pro Konfiguration ) für MS-Debugsymbol-.pdb-Dateien, die der Compiler beim Erstellen von Quelldateien generiert."
	},
	"CMAKE_COMPILE_WARNING_AS_ERROR": {
		"name": "CMAKE_COMPILE_WARNING_AS_ERROR",
		"description": "Geben Sie an, ob Warnungen bei der Kompilierung als Fehler behandelt werden sollen."
	},
	"CMAKE_CONFIGURATION_TYPES": {
		"name": "CMAKE_CONFIGURATION_TYPES",
		"description": "Gibt die verfügbaren Buildtypen (Konfigurationen) für Generatoren mit mehreren Konfigurationen (z. B. Visual Studio, Xcode oder Ninja Multi-Config) als durch Semikolons getrennte Liste an. Typische Einträge sind Debug, Release, RelWithDebInfo und MinSizeRel, aber auch benutzerdefinierte Buildtypen können definiert werden."
	},
	"CMAKE_<CONFIG>_POSTFIX": {
		"name": "CMAKE_<CONFIG>_POSTFIX",
		"description": "Standardmäßiges Dateinamenpostfix für Bibliotheken unter Konfiguration <CONFIG>."
	},
	"CMAKE_CPACK_COMMAND": {
		"name": "CMAKE_CPACK_COMMAND",
		"description": "Der vollständige Pfad zum Befehl \"cpack\", der mit CMake installiert wird."
	},
	"CMAKE_CROSSCOMPILING": {
		"name": "CMAKE_CROSSCOMPILING",
		"description": "Diese Variable wird von CMake festgelegt, um anzugeben, ob es sich um eine Kreuzkompilierung handelt. Beachten Sie jedoch die unten beschriebenen Einschränkungen."
	},
	"CMAKE_CROSSCOMPILING_EMULATOR": {
		"name": "CMAKE_CROSSCOMPILING_EMULATOR",
		"description": "Diese Variable wird nur verwendet, wenn CMAKE_CROSSCOMPILING aktiviert ist. Sie verweist auf einen Befehl des Hostsystems, über den für das Zielsystem erstellte ausführbare Dateien ausgeführt werden können."
	},
	"CMAKE_CROSS_CONFIGS": {
		"name": "CMAKE_CROSS_CONFIGS",
		"description": "Hiermit wird eine durch Semikolon getrennte Liste der Konfigurationen angegeben, die in allen build-<Config>.ninja-Dateien im Ninja-Multi-Config-Generator verfügbar sind. Mit dieser Variable wird der konfigurationsübergreifende Modus aktiviert. Ziele aus jeder in dieser Variablen angegebenen Konfiguration können aus einer beliebigen build-<Config>.ninja-Datei kompiliert werden. Benutzerdefinierte Befehle verwenden die native Konfiguration für build-<Config>.ninja-Dateien. Wenn diese Option auf \"all\" festgelegt ist, gelten alle Konfigurationen aus CMAKE_CONFIGURATION_TYPES konfigurationsübergreifend. Wird diese Option nicht angegeben oder ist die Option leer, enthält jede build-<Config>.ninja-Datei nur Buildregeln für die eigene Konfiguration."
	},
	"CMAKE_CTEST_ARGUMENTS": {
		"name": "CMAKE_CTEST_ARGUMENTS",
		"description": "Legen Sie diese Variable auf eine durch Semikolon getrennte Liste der Befehlszeilenargumente fest, die beim Ausführen von Tests über das test-Ziel (oder RUN_TESTS) des generierten Buildsystems an \"ctest\" übergeben werden sollen."
	},
	"CMAKE_CTEST_COMMAND": {
		"name": "CMAKE_CTEST_COMMAND",
		"description": "Der vollständige Pfad zum Befehl \"ctest\", der mit CMake installiert wird."
	},
	"CMAKE_CUDA_ARCHITECTURES": {
		"name": "CMAKE_CUDA_ARCHITECTURES",
		"description": "Der Standardwert der CUDA_ARCHITECTURES-Eigenschaft von Zielen."
	},
	"CMAKE_CUDA_COMPILE_FEATURES": {
		"name": "CMAKE_CUDA_COMPILE_FEATURES",
		"description": "Eine Liste der Features, die dem CUDA-Compiler bekannt sind."
	},
	"CMAKE_CUDA_EXTENSIONS": {
		"name": "CMAKE_CUDA_EXTENSIONS",
		"description": "Standardwert für CUDA_EXTENSIONS Zieleigenschaft, wenn beim Erstellen eines Ziels festgelegt."
	},
	"CMAKE_CUDA_HOST_COMPILER": {
		"name": "CMAKE_CUDA_HOST_COMPILER",
		"description": "Dies ist der ursprüngliche CUDA-spezifische Name für die allgemeinere CMAKE_<LANG>_HOST_COMPILER-Variable. Weitere Informationen finden Sie im letzteren Abschnitt."
	},
	"CMAKE_CUDA_RESOLVE_DEVICE_SYMBOLS": {
		"name": "CMAKE_CUDA_RESOLVE_DEVICE_SYMBOLS",
		"description": "Standardwert für die Zieleigenschaft CUDA_RESOLVE_DEVICE_SYMBOLS, sofern definiert. Diese Variable ist standardmäßig nicht definiert."
	},
	"CMAKE_CUDA_RUNTIME_LIBRARY": {
		"name": "CMAKE_CUDA_RUNTIME_LIBRARY",
		"description": "Wählen Sie die CUDA-Laufzeitbibliothek aus, die beim Kompilieren und Verknüpfen von CUDA verwendet werden soll. Mit dieser Variablen wird die CUDA_RUNTIME_LIBRARY-Eigenschaft für alle Ziele bei deren Erstellung initialisiert."
	},
	"CMAKE_CUDA_SEPARABLE_COMPILATION": {
		"name": "CMAKE_CUDA_SEPARABLE_COMPILATION",
		"description": "Standardwert der Zieleigenschaft CUDA_SEPARABLE_COMPILATION. Mit dieser Variable wird die Eigenschaft während des Erstellens auf allen Zielen initialisiert."
	},
	"CMAKE_CUDA_STANDARD": {
		"name": "CMAKE_CUDA_STANDARD",
		"description": "Standardwert für CUDA_STANDARD Zieleigenschaft, wenn beim Erstellen eines Ziels festgelegt."
	},
	"CMAKE_CUDA_STANDARD_REQUIRED": {
		"name": "CMAKE_CUDA_STANDARD_REQUIRED",
		"description": "Standardwert für CUDA_STANDARD_REQUIRED Zieleigenschaft, wenn beim Erstellen eines Ziels festgelegt."
	},
	"CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES": {
		"name": "CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES",
		"description": "Bei aktivierter CUDA-Sprache wird hiermit eine durch Semikolon getrennte Liste der Includeverzeichnisse angegeben, die vom CUDA-Toolkit bereitgestellt werden. Dieser Wert kann nützlich sein, wenn C++-Quelldateien CUDA-Header enthalten sollen."
	},
	"CMAKE_CURRENT_BINARY_DIR": {
		"name": "CMAKE_CURRENT_BINARY_DIR",
		"description": "Der Pfad zum Binärverzeichnis, das gerade verarbeitet wird."
	},
	"CMAKE_CURRENT_FUNCTION": {
		"name": "CMAKE_CURRENT_FUNCTION",
		"description": "Beim Ausführen von Code innerhalb einer Funktion enthält diese Variable den Namen der aktuellen Funktion. Dieser kann für Diagnose- oder Debugmeldungen nützlich sein."
	},
	"CMAKE_CURRENT_FUNCTION_LIST_DIR": {
		"name": "CMAKE_CURRENT_FUNCTION_LIST_DIR",
		"description": "Beim Ausführen von Code innerhalb einer Funktion enthält diese Variable das vollständige Verzeichnis der Listendatei, die die aktuelle Funktion definiert hat."
	},
	"CMAKE_CURRENT_FUNCTION_LIST_FILE": {
		"name": "CMAKE_CURRENT_FUNCTION_LIST_FILE",
		"description": "Beim Ausführen von Code innerhalb einer Funktion enthält diese Variable den vollständigen Pfad zur Listendatei, die die aktuelle Funktion definiert hat."
	},
	"CMAKE_CURRENT_FUNCTION_LIST_LINE": {
		"name": "CMAKE_CURRENT_FUNCTION_LIST_LINE",
		"description": "Beim Ausführen von Code innerhalb einer Funktion enthält diese Variable die Zeilennummer in der Listendatei, in der die aktuelle Funktion definiert wurde."
	},
	"CMAKE_CURRENT_LIST_DIR": {
		"name": "CMAKE_CURRENT_LIST_DIR",
		"description": "Das vollständige Verzeichnis der Listendatei, die gerade verarbeitet wird."
	},
	"CMAKE_CURRENT_LIST_FILE": {
		"name": "CMAKE_CURRENT_LIST_FILE",
		"description": "Der vollständige Pfad zur Listendatei, die gerade verarbeitet wird."
	},
	"CMAKE_CURRENT_LIST_LINE": {
		"name": "CMAKE_CURRENT_LIST_LINE",
		"description": "Die Zeilennummer der Datei, die gerade verarbeitet wird."
	},
	"CMAKE_CURRENT_SOURCE_DIR": {
		"name": "CMAKE_CURRENT_SOURCE_DIR",
		"description": "Der Pfad zum Quellverzeichnis, das gerade verarbeitet wird."
	},
	"CMAKE_CXX_COMPILER_IMPORT_STD": {
		"name": "CMAKE_CXX_COMPILER_IMPORT_STD",
		"description": "Eine Liste der C++-Standardebenen, für die standardmäßige Importunterstützung für die aktuelle C++-Toolkette vorhanden ist. Die Unterstützung für C++-<NN> kann mithilfe eines <NN> IN_LIST CMAKE_CXX_COMPILER_IMPORT_STD Prädikats mit dem if-Befehl erkannt werden."
	},
	"CMAKE_CXX_COMPILE_FEATURES": {
		"name": "CMAKE_CXX_COMPILE_FEATURES",
		"description": "Liste mit Features, die dem C++-Compiler bekannt sind"
	},
	"CMAKE_CXX_EXTENSIONS": {
		"name": "CMAKE_CXX_EXTENSIONS",
		"description": "Standardwert für CXX_EXTENSIONS Zieleigenschaft, wenn beim Erstellen eines Ziels festgelegt."
	},
	"CMAKE_CXX_MODULE_STD": {
		"name": "CMAKE_CXX_MODULE_STD",
		"description": "Gibt an, ob Hilfsprogrammziele als Abhängigkeiten zu Zielen mit mindestens cxx_std_23 hinzugefügt werden sollen oder nicht."
	},
	"CMAKE_CXX_SCAN_FOR_MODULES": {
		"name": "CMAKE_CXX_SCAN_FOR_MODULES",
		"description": "Gibt an, ob C++-Quelldateien auf Modulabhängigkeiten überprüft werden sollen."
	},
	"CMAKE_CXX_STANDARD": {
		"name": "CMAKE_CXX_STANDARD",
		"description": "Standardwert für CXX_STANDARD Zieleigenschaft, wenn beim Erstellen eines Ziels festgelegt."
	},
	"CMAKE_CXX_STANDARD_REQUIRED": {
		"name": "CMAKE_CXX_STANDARD_REQUIRED",
		"description": "Standardwert für CXX_STANDARD_REQUIRED Zieleigenschaft, wenn beim Erstellen eines Ziels festgelegt."
	},
	"CMAKE_C_COMPILE_FEATURES": {
		"name": "CMAKE_C_COMPILE_FEATURES",
		"description": "Liste mit Features, die dem C-Compiler bekannt sind"
	},
	"CMAKE_C_EXTENSIONS": {
		"name": "CMAKE_C_EXTENSIONS",
		"description": "Standardwert für C_EXTENSIONS Zieleigenschaft, wenn beim Erstellen eines Ziels festgelegt."
	},
	"CMAKE_C_STANDARD": {
		"name": "CMAKE_C_STANDARD",
		"description": "Standardwert für C_STANDARD Zieleigenschaft, wenn beim Erstellen eines Ziels festgelegt."
	},
	"CMAKE_C_STANDARD_REQUIRED": {
		"name": "CMAKE_C_STANDARD_REQUIRED",
		"description": "Standardwert für C_STANDARD_REQUIRED Zieleigenschaft, wenn beim Erstellen eines Ziels festgelegt."
	},
	"CMAKE_DEBUG_POSTFIX": {
		"name": "CMAKE_DEBUG_POSTFIX",
		"description": "Siehe Variable CMAKE_<CONFIG>_POSTFIX."
	},
	"CMAKE_DEBUG_TARGET_PROPERTIES": {
		"name": "CMAKE_DEBUG_TARGET_PROPERTIES",
		"description": "Ermöglicht die Ausgabenachverfolgung für Zieleigenschaften."
	},
	"CMAKE_DEFAULT_BUILD_TYPE": {
		"name": "CMAKE_DEFAULT_BUILD_TYPE",
		"description": "Gibt die Konfiguration an, die standardmäßig in einer build.ninja-Datei im Ninja Multi-Config-Generator verwendet werden soll. Wenn diese Variable angegeben ist, verwendet \"build.ninja\" standardmäßig Buildregeln aus \"build-<Config>.ninja\". Alle benutzerdefinierten Befehle werden mit dieser Konfiguration ausgeführt. Wenn die Variable nicht angegeben ist, wird stattdessen das erste Element aus CMAKE_CONFIGURATION_TYPES verwendet."
	},
	"CMAKE_DEFAULT_CONFIGS": {
		"name": "CMAKE_DEFAULT_CONFIGS",
		"description": "Hiermit wird eine durch Semikolon getrennte Liste der Konfigurationen angegeben, die für ein Ziel in \"build.ninja\" erstellt werden sollen, wenn kein :<Config>-Suffix im Ninja Multi-Config-Generator angegeben ist. Bei einer Festlegung auf \"all\" werden alle Konfigurationen aus CMAKE_CROSS_CONFIGS verwendet. Ohne Festlegung wird standardmäßig CMAKE_DEFAULT_BUILD_TYPE verwendet."
	},
	"CMAKE_DEPENDS_IN_PROJECT_ONLY": {
		"name": "CMAKE_DEPENDS_IN_PROJECT_ONLY",
		"description": "Wird die Einstellung in einem Verzeichnis auf TRUE gesetzt, berücksichtigt das von den Makefile-Generatoren produzierte Buildsystem nur die Abhängigkeiten bei Quelldateien, die entweder im Quell- oder Binärverzeichnis vorhanden sind. Bei Änderungen an Quelldateien, die sich außerhalb dieser Verzeichnisse befinden, erfolgen keine Wiederherstellungen."
	},
	"CMAKE_DEPENDS_USE_COMPILER": {
		"name": "CMAKE_DEPENDS_USE_COMPILER",
		"description": "Bei den Makefile-Generatoren werden Quellabhängigkeiten für eine Auswahl von Compilern jetzt vom Compiler selbst generiert. Indem Sie diese Variable mit dem Wert FALSE definieren, können Sie das Legacyverhalten wiederherstellen (z. B. Verwendung von CMAKE zur Ermittlung von Abhängigkeiten)."
	},
	"CMAKE_DIRECTORY_LABELS": {
		"name": "CMAKE_DIRECTORY_LABELS",
		"description": "Geben Sie Bezeichnungen für das aktuelle Verzeichnis an."
	},
	"CMAKE_DISABLE_FIND_PACKAGE_<PackageName>": {
		"name": "CMAKE_DISABLE_FIND_PACKAGE_<PackageName>",
		"description": "Variable zum Deaktivieren von find_package-Aufrufen."
	},
	"CMAKE_DISABLE_PRECOMPILE_HEADERS": {
		"name": "CMAKE_DISABLE_PRECOMPILE_HEADERS",
		"description": "Der Standardwert für DISABLE_PRECOMPILE_HEADERS von Zielen."
	},
	"CMAKE_DLL_NAME_WITH_SOVERSION": {
		"name": "CMAKE_DLL_NAME_WITH_SOVERSION",
		"description": "Diese Variable wird zur Initialisierung der DLL_NAME_WITH_SOVERSION-Eigenschaft auf gemeinsam genutzten Bibliothekszielen für die Windows-Plattform verwendet, die ausgewählt wird, wenn die WIN32-Variable gesetzt ist."
	},
	"CMAKE_DL_LIBS": {
		"name": "CMAKE_DL_LIBS",
		"description": "Name der Bibliothek, die \"dlopen\" und \"dlclose\" enthält."
	},
	"CMAKE_DOTNET_SDK": {
		"name": "CMAKE_DOTNET_SDK",
		"description": "Standardwert für die DOTNET_SDK-Eigenschaft von Zielen."
	},
	"CMAKE_DOTNET_TARGET_FRAMEWORK": {
		"name": "CMAKE_DOTNET_TARGET_FRAMEWORK",
		"description": "Der Standardwert der DOTNET_TARGET_FRAMEWORK-Eigenschaft von Zielen."
	},
	"CMAKE_DOTNET_TARGET_FRAMEWORK_VERSION": {
		"name": "CMAKE_DOTNET_TARGET_FRAMEWORK_VERSION",
		"description": "Standardwert der Eigenschaft DOTNET_TARGET_FRAMEWORK_VERSION von Zielen."
	},
	"CMAKE_ECLIPSE_GENERATE_LINKED_RESOURCES": {
		"name": "CMAKE_ECLIPSE_GENERATE_LINKED_RESOURCES",
		"description": "Diese Cachevariable wird vom Eclipse-Projektgenerator verwendet. Siehe \"cmake-generators\"."
	},
	"CMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT": {
		"name": "CMAKE_ECLIPSE_GENERATE_SOURCE_PROJECT",
		"description": "Diese Cachevariable wird vom Eclipse-Projektgenerator verwendet. Siehe \"cmake-generators\"."
	},
	"CMAKE_ECLIPSE_MAKE_ARGUMENTS": {
		"name": "CMAKE_ECLIPSE_MAKE_ARGUMENTS",
		"description": "Diese Cachevariable wird vom Eclipse-Projektgenerator verwendet. Siehe \"cmake-generators\"."
	},
	"CMAKE_ECLIPSE_RESOURCE_ENCODING": {
		"name": "CMAKE_ECLIPSE_RESOURCE_ENCODING",
		"description": "Diese Cachevariable weist den Eclipse CDT4-Projektgenerator an, die Ressourcencodierung in generierten Projektdateien auf den angegebenen Wert festzulegen. Ist kein Wert angegeben, wird keine Codierung festgelegt."
	},
	"CMAKE_ECLIPSE_VERSION": {
		"name": "CMAKE_ECLIPSE_VERSION",
		"description": "Diese Cachevariable wird vom Eclipse-Projektgenerator verwendet. Siehe \"cmake-generators\"."
	},
	"CMAKE_EDIT_COMMAND": {
		"name": "CMAKE_EDIT_COMMAND",
		"description": "Vollständiger Pfad zu cmake-gui oder ccmake. Wird nur für Makefile- und Ninja-Generatoren definiert, wenn keine zusätzlichen Generatoren verwendet werden."
	},
	"CMAKE_ENABLE_EXPORTS": {
		"name": "CMAKE_ENABLE_EXPORTS",
		"description": "Hiermit wird angegeben, ob ausführbare Dateien Symbole für ladbare Module exportieren sollen."
	},
	"CMAKE_ERROR_DEPRECATED": {
		"name": "CMAKE_ERROR_DEPRECATED",
		"description": "Legt fest, ob aufgrund veralteter Funktionen Fehlermeldungen angezeigt werden."
	},
	"CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION": {
		"name": "CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION",
		"description": "Das Skript \"cmake_install.cmake\" veranlassen, eine Fehlermeldung anzuzeigen, wenn eine Datei mit absolutem INSTALL DESTINATION gefunden wird."
	},
	"CMAKE_EXECUTABLE_ENABLE_EXPORTS": {
		"name": "CMAKE_EXECUTABLE_ENABLE_EXPORTS",
		"description": "Hiermit wird angegeben, ob ausführbare Dateien Symbole für ladbare Module exportieren sollen."
	},
	"CMAKE_EXECUTABLE_SUFFIX": {
		"name": "CMAKE_EXECUTABLE_SUFFIX",
		"description": "Das auf dieser Plattform verwendete Suffix für ausführbare Dateien."
	},
	"CMAKE_EXECUTABLE_SUFFIX_<LANG>": {
		"name": "CMAKE_EXECUTABLE_SUFFIX_<LANG>",
		"description": "Das Suffix, das für das Ende eines ausführbaren Dateinamens von <LANG> Compiler-Zielarchitektur verwendet werden soll, sofern vorhanden."
	},
	"CMAKE_EXECUTE_PROCESS_COMMAND_ECHO": {
		"name": "CMAKE_EXECUTE_PROCESS_COMMAND_ECHO",
		"description": "Wenn diese Variable auf STDERR, STDOUT oder NONE festgelegt ist, werden Befehle in \"execute_process\" entweder an \"stderr\" oder \"stdout\" oder gar nicht ausgegeben."
	},
	"CMAKE_EXE_LINKER_FLAGS": {
		"name": "CMAKE_EXE_LINKER_FLAGS",
		"description": "Linkerflags zum Erstellen ausführbarer Dateien."
	},
	"CMAKE_EXE_LINKER_FLAGS_<CONFIG>": {
		"name": "CMAKE_EXE_LINKER_FLAGS_<CONFIG>",
		"description": "Flags, die beim Verknüpfen einer ausführbaren Datei verwendet werden."
	},
	"CMAKE_EXE_LINKER_FLAGS_<CONFIG>_INIT": {
		"name": "CMAKE_EXE_LINKER_FLAGS_<CONFIG>_INIT",
		"description": "Wert, mit dem der Cacheeintrag CMAKE_EXE_LINKER_FLAGS_ beim erstmaligen Konfigurieren eines Buildbaums initialisiert wird. Diese Variable wird i. d. R. durch eine Toolkettendatei festgelegt. Je nach Umgebung und Zielplattform fügt CMake vor oder nach dem Wert Inhalte hinzu."
	},
	"CMAKE_EXE_LINKER_FLAGS_INIT": {
		"name": "CMAKE_EXE_LINKER_FLAGS_INIT",
		"description": "Wert, mit dem der Cacheeintrag CMAKE_EXE_LINKER_FLAGS_ beim erstmaligen Konfigurieren eines Buildbaums initialisiert wird. Diese Variable muss durch eine Toolkettendatei festgelegt werden. Je nach Umgebung und Zielplattform fügt CMake vor oder nach dem Wert Inhalte hinzu."
	},
	"CMAKE_EXPORT_COMPILE_COMMANDS": {
		"name": "CMAKE_EXPORT_COMPILE_COMMANDS",
		"description": "Aktivieren/deaktivieren Sie die Ausgabe von Kompilierungsbefehlen während der Erstellung."
	},
	"CMAKE_EXPORT_FIND_PACKAGE_NAME": {
		"name": "CMAKE_EXPORT_FIND_PACKAGE_NAME",
		"description": "Initialisiert den Wert von EXPORT_FIND_PACKAGE_NAME."
	},
	"CMAKE_EXPORT_NO_PACKAGE_REGISTRY": {
		"name": "CMAKE_EXPORT_NO_PACKAGE_REGISTRY",
		"description": "Hiermit wird der Befehl \"export\" deaktiviert, wenn CMP0090 nicht auf NEW festgelegt ist."
	},
	"CMAKE_EXPORT_PACKAGE_REGISTRY": {
		"name": "CMAKE_EXPORT_PACKAGE_REGISTRY",
		"description": "Hiermit wird der Befehl \"export\" aktiviert, wenn CMP0090 auf NEW festgelegt ist."
	},
	"CMAKE_EXTRA_GENERATOR": {
		"name": "CMAKE_EXTRA_GENERATOR",
		"description": "Der zusätzliche Generator zum Erstellen des Projekts. Siehe \"cmake-generators\"."
	},
	"CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES": {
		"name": "CMAKE_EXTRA_SHARED_LIBRARY_SUFFIXES",
		"description": "Zusätzliche Suffixe für freigegebene Bibliotheken."
	},
	"CMAKE_FIND_APPBUNDLE": {
		"name": "CMAKE_FIND_APPBUNDLE",
		"description": "Diese Variable beeinflusst, wie find_*-Befehle eine Auswahl zwischen macOS-Anwendungsbundles und Unix-ähnlichen Paketkomponenten treffen."
	},
	"CMAKE_FIND_DEBUG_MODE": {
		"name": "CMAKE_FIND_DEBUG_MODE",
		"description": "Hiermit werden neben dem Standardfehler zusätzliche find-Aufrufinformationen für die folgenden Befehle ausgegeben:"
	},
	"CMAKE_FIND_FRAMEWORK": {
		"name": "CMAKE_FIND_FRAMEWORK",
		"description": "Diese Variable beeinflusst, wie find_*-Befehle eine Auswahl zwischen macOS-Frameworks und Unix-ähnlichen Paketkomponenten treffen."
	},
	"CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX": {
		"name": "CMAKE_FIND_LIBRARY_CUSTOM_LIB_SUFFIX",
		"description": "Geben Sie ein <suffix> ein, damit der Befehl \"find_library\" zunächst ein bestimmtes lib<suffix>-Verzeichnis durchsucht, bevor die anderen lib-Verzeichnisse durchsucht werden."
	},
	"CMAKE_FIND_LIBRARY_PREFIXES": {
		"name": "CMAKE_FIND_LIBRARY_PREFIXES",
		"description": "Voranzustellende Präfixe, wenn nach Bibliotheken gesucht wird."
	},
	"CMAKE_FIND_LIBRARY_SUFFIXES": {
		"name": "CMAKE_FIND_LIBRARY_SUFFIXES",
		"description": "Anzufügende Suffixe, wenn nach Bibliotheken gesucht wird."
	},
	"CMAKE_FIND_NO_INSTALL_PREFIX": {
		"name": "CMAKE_FIND_NO_INSTALL_PREFIX",
		"description": "Schließen Sie die Werte der Variablen CMAKE_INSTALL_PREFIX und CMAKE_STAGING_PREFIX von CMAKE_SYSTEM_PREFIX_PATH aus. CMake fügt diese Projektzielpräfixe standardmäßig CMAKE_SYSTEM_PREFIX_PATH hinzu, damit eine Reihe abhängiger Pakete erstellt und in einem gemeinsamen Präfix installiert werden kann. Setzen Sie CMAKE_FIND_NO_INSTALL_PREFIX auf TRUE, um dieses Verhalten zu unterdrücken."
	},
	"CMAKE_FIND_PACKAGE_NAME": {
		"name": "CMAKE_FIND_PACKAGE_NAME",
		"description": "Wird über den Befehl find_package während des Ladens eines gefundenen Moduls definiert, um den vom Aufrufer angegebenen Paketnamen aufzuzeichnen. Weitere Informationen finden Sie in der Befehlsdokumentation."
	},
	"CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY": {
		"name": "CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY",
		"description": "Diese Variable ist standardmäßig nicht festgelegt. Wenn weder CMAKE_FIND_USE_PACKAGE_REGISTRY noch CMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY festgelegt ist, verwendet \"find_package()\" die Benutzerpaketregistrierung, sofern nicht die Option NO_CMAKE_PACKAGE_REGISTRY angegeben ist."
	},
	"CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY": {
		"name": "CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY",
		"description": "Diese Variable ist standardmäßig nicht festgelegt. Wenn weder CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY noch CMAKE_FIND_PACKAGE_NO_SYSTEM_PACKAGE_REGISTRY festgelegt ist, verwendet \"find_package()\" die Systempaketregistrierung, sofern nicht die Option NO_CMAKE_SYSTEM_PACKAGE_REGISTRY angegeben ist."
	},
	"CMAKE_FIND_PACKAGE_PREFER_CONFIG": {
		"name": "CMAKE_FIND_PACKAGE_PREFER_CONFIG",
		"description": "Hiermit wird \"find_package\" angewiesen, den Modus \"Config\" vor dem Modus \"Module\" auszuprobieren, wenn kein Modus angegeben wurde."
	},
	"CMAKE_FIND_PACKAGE_REDIRECTS_DIR": {
		"name": "CMAKE_FIND_PACKAGE_REDIRECTS_DIR",
		"description": "Diese schreibgeschützte Variable gibt ein Verzeichnis an, das der Befehl „find_package“ zuerst überprüft, bevor an einer anderen Stelle nach einer Modul- oder Konfigurationspaketdatei sucht. Eine Konfigurationspaketdatei in diesem Verzeichnis wird immer vor jeder anderen Suchmoduldatei oder Konfigurationspaketdatei gefunden."
	},
	"CMAKE_FIND_PACKAGE_RESOLVE_SYMLINKS": {
		"name": "CMAKE_FIND_PACKAGE_RESOLVE_SYMLINKS",
		"description": "Legen Sie den Wert dieser Variablen auf TRUE fest, damit in find_package-Aufrufen symbolische Links in den Wert von <PackageName>_DIR aufgelöst werden."
	},
	"CMAKE_FIND_PACKAGE_SORT_DIRECTION": {
		"name": "CMAKE_FIND_PACKAGE_SORT_DIRECTION",
		"description": "Die von CMAKE_FIND_PACKAGE_SORT_ORDER verwendete Sortierungsrichtung. Einer der folgenden Werte kann gesetzt werden:"
	},
	"CMAKE_FIND_PACKAGE_SORT_ORDER": {
		"name": "CMAKE_FIND_PACKAGE_SORT_ORDER",
		"description": "Die Standardreihenfolge beim Sortieren von Paketen, die mit \"find_package\" gefunden wurden. Einer der folgenden Werte ist möglich:"
	},
	"CMAKE_FIND_PACKAGE_TARGETS_GLOBAL": {
		"name": "CMAKE_FIND_PACKAGE_TARGETS_GLOBAL",
		"description": "Durch Festlegen auf WAHR werden alle IMPORTIERTEN Ziele, die von „find_package“ ermittelt werden, in einen GLOBALEN Bereich höher gestuft."
	},
	"CMAKE_FIND_PACKAGE_WARN_NO_MODULE": {
		"name": "CMAKE_FIND_PACKAGE_WARN_NO_MODULE",
		"description": "Veranlassen Sie find_package, einen Warnhinweis anzuzeigen, wenn der Aufruf ohne Explicit-Modus erfolgt."
	},
	"CMAKE_FIND_ROOT_PATH": {
		"name": "CMAKE_FIND_ROOT_PATH",
		"description": "Eine mittels Semikolon getrennte Liste mit Stammpfaden, die im Dateisystem durchsucht werden."
	},
	"CMAKE_FIND_ROOT_PATH_MODE_INCLUDE": {
		"name": "CMAKE_FIND_ROOT_PATH_MODE_INCLUDE",
		"description": "Diese Variable steuert, ob CMAKE_FIND_ROOT_PATH und CMAKE_SYSROOT von FIND_XXX verwendet werden."
	},
	"CMAKE_FIND_ROOT_PATH_MODE_LIBRARY": {
		"name": "CMAKE_FIND_ROOT_PATH_MODE_LIBRARY",
		"description": "Diese Variable steuert, ob CMAKE_FIND_ROOT_PATH und CMAKE_SYSROOT von FIND_XXX verwendet werden."
	},
	"CMAKE_FIND_ROOT_PATH_MODE_PACKAGE": {
		"name": "CMAKE_FIND_ROOT_PATH_MODE_PACKAGE",
		"description": "Diese Variable steuert, ob CMAKE_FIND_ROOT_PATH und CMAKE_SYSROOT von FIND_XXX verwendet werden."
	},
	"CMAKE_FIND_ROOT_PATH_MODE_PROGRAM": {
		"name": "CMAKE_FIND_ROOT_PATH_MODE_PROGRAM",
		"description": "Diese Variable steuert, ob CMAKE_FIND_ROOT_PATH und CMAKE_SYSROOT von FIND_XXX verwendet werden."
	},
	"CMAKE_FIND_USE_CMAKE_ENVIRONMENT_PATH": {
		"name": "CMAKE_FIND_USE_CMAKE_ENVIRONMENT_PATH",
		"description": "Steuert das Standardverhalten der folgenden Befehle in Bezug auf das Durchsuchen von Pfaden, die über CMake-spezifische Umgebungsvariablen angegeben werden:"
	},
	"CMAKE_FIND_USE_CMAKE_PATH": {
		"name": "CMAKE_FIND_USE_CMAKE_PATH",
		"description": "Steuert das Standardverhalten der folgenden Befehle in Bezug auf das Durchsuchen von Pfaden, die über CMake-spezifische Cachevariablen angegeben werden:"
	},
	"CMAKE_FIND_USE_CMAKE_SYSTEM_PATH": {
		"name": "CMAKE_FIND_USE_CMAKE_SYSTEM_PATH",
		"description": "Steuert das Standardverhalten der folgenden Befehle in Bezug auf das Durchsuchen von Pfaden, die über plattformspezifische CMake-Variablen angegeben werden:"
	},
	"CMAKE_FIND_USE_INSTALL_PREFIX": {
		"name": "CMAKE_FIND_USE_INSTALL_PREFIX",
		"description": "Steuert das Standardverhalten der folgenden Befehle, um zu bestimmen, ob die Speicherorte in den Variablen CMAKE_INSTALL_PREFIX und CMAKE_STAGING_PREFIX durchsucht werden sollen."
	},
	"CMAKE_FIND_USE_PACKAGE_REGISTRY": {
		"name": "CMAKE_FIND_USE_PACKAGE_REGISTRY",
		"description": "Steuert das Standardverhalten des Befehls \"find_package\" in Bezug auf das Durchsuchen von Pfaden, die über die Benutzerpaketregistrierung angegeben werden."
	},
	"CMAKE_FIND_USE_PACKAGE_ROOT_PATH": {
		"name": "CMAKE_FIND_USE_PACKAGE_ROOT_PATH",
		"description": "Steuert das Standardverhalten der folgenden Befehle in Bezug auf das Durchsuchen von Pfaden, die über <PackageName>_ROOT-Variablen angegeben werden:"
	},
	"CMAKE_FIND_USE_SYSTEM_ENVIRONMENT_PATH": {
		"name": "CMAKE_FIND_USE_SYSTEM_ENVIRONMENT_PATH",
		"description": "Steuert das Standardverhalten der folgenden Befehle in Bezug auf das Durchsuchen von Pfaden, die über standardmäßige Systemumgebungsvariablen angegeben werden:"
	},
	"CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY": {
		"name": "CMAKE_FIND_USE_SYSTEM_PACKAGE_REGISTRY",
		"description": "Steuert das Verhalten beim Durchsuchen der Systempaketregistrierung über den Befehl \"find_package\"."
	},
	"CMAKE_FOLDER": {
		"name": "CMAKE_FOLDER",
		"description": "Legen Sie den Ordnernamen fest, und ordnen Sie Ziele in einer IDE an."
	},
	"CMAKE_Fortran_FORMAT": {
		"name": "CMAKE_Fortran_FORMAT",
		"description": "Auf FIXED oder FREE setzen, um das Fortran-Quelllayout anzugeben."
	},
	"CMAKE_Fortran_MODDIR_DEFAULT": {
		"name": "CMAKE_Fortran_MODDIR_DEFAULT",
		"description": "Das standardmäßige Fortran-Modulausgabeverzeichnis."
	},
	"CMAKE_Fortran_MODDIR_FLAG": {
		"name": "CMAKE_Fortran_MODDIR_FLAG",
		"description": "Das Fortran-Flag für das Modulausgabeverzeichnis."
	},
	"CMAKE_Fortran_MODOUT_FLAG": {
		"name": "CMAKE_Fortran_MODOUT_FLAG",
		"description": "Fortran-Flag zum Aktivieren der Modulausgabe."
	},
	"CMAKE_Fortran_MODULE_DIRECTORY": {
		"name": "CMAKE_Fortran_MODULE_DIRECTORY",
		"description": "Fortran-Modulausgabeverzeichnis."
	},
	"CMAKE_Fortran_PREPROCESS": {
		"name": "CMAKE_Fortran_PREPROCESS",
		"description": "Der Standardwert der Fortran_PREPROCESS-Eigenschaft von Zielen."
	},
	"CMAKE_FRAMEWORK": {
		"name": "CMAKE_FRAMEWORK",
		"description": "Der Standardwert der FRAMEWORK-Eigenschaft von Zielen."
	},
	"CMAKE_FRAMEWORK_MULTI_CONFIG_POSTFIX_<CONFIG>": {
		"name": "CMAKE_FRAMEWORK_MULTI_CONFIG_POSTFIX_<CONFIG>",
		"description": "Ein Standardpostfix für den Frameworkdateinamen unter Konfiguration <CONFIG>, wenn ein Generator mit Unterstützung für mehrere Konfigurationen verwendet wird."
	},
	"CMAKE_FRAMEWORK_PATH": {
		"name": "CMAKE_FRAMEWORK_PATH",
		"description": "Eine mittels Semikolon getrennte Liste mit Verzeichnissen unter Angabe eines Suchpfads für macOS-Frameworks, die von den Befehlen \"find_library\", \"find_package\" und \"find_file\" verwendet werden."
	},
	"CMAKE_GENERATOR": {
		"name": "CMAKE_GENERATOR",
		"description": "Der Generator zum Erstellen des Projekts. Siehe cmake-generators."
	},
	"CMAKE_GENERATOR_INSTANCE": {
		"name": "CMAKE_GENERATOR_INSTANCE",
		"description": "Vom Benutzer bereitgestellte generatorspezifische Spezifikation der Instanz."
	},
	"CMAKE_GENERATOR_PLATFORM": {
		"name": "CMAKE_GENERATOR_PLATFORM",
		"description": "Vom Benutzer bereitgestellte generatorspezifische Spezifikation der Zielplattform."
	},
	"CMAKE_GENERATOR_TOOLSET": {
		"name": "CMAKE_GENERATOR_TOOLSET",
		"description": "Vom Benutzer bereitgestellte Toolset-Spezifikation des nativen Buildsystems."
	},
	"CMAKE_GHS_NO_SOURCE_GROUP_FILE": {
		"name": "CMAKE_GHS_NO_SOURCE_GROUP_FILE",
		"description": "Ein boolescher Wert, der auf ON oder OFF festgelegt werden kann. Dieser Wert steuert, ob die Projektdatei für ein Ziel eine einzelne Datei ist oder aus mehreren Dateien bestehen soll. Weitere Informationen finden Sie unter GHS_NO_SOURCE_GROUP_FILE."
	},
	"CMAKE_GLOBAL_AUTOGEN_TARGET": {
		"name": "CMAKE_GLOBAL_AUTOGEN_TARGET",
		"description": "Eine Option, mit der die Generierung eines globalen autogen-Ziels aktiviert werden kann."
	},
	"CMAKE_GLOBAL_AUTOGEN_TARGET_NAME": {
		"name": "CMAKE_GLOBAL_AUTOGEN_TARGET_NAME",
		"description": "Hiermit kann der Name des globalen autogen-Ziels geändert werden."
	},
	"CMAKE_GLOBAL_AUTORCC_TARGET": {
		"name": "CMAKE_GLOBAL_AUTORCC_TARGET",
		"description": "Eine Option, mit der die Generierung eines globalen autorcc-Ziels aktiviert werden kann."
	},
	"CMAKE_GLOBAL_AUTORCC_TARGET_NAME": {
		"name": "CMAKE_GLOBAL_AUTORCC_TARGET_NAME",
		"description": "Hiermit kann der Name des globalen autorcc-Ziels geändert werden."
	},
	"CMAKE_GNUtoMS": {
		"name": "CMAKE_GNUtoMS",
		"description": "Konvertieren Sie GNU-Importbibliotheken (.dll.a) in das MS-Format (.lib)."
	},
	"CMAKE_HIP_ARCHITECTURES": {
		"name": "CMAKE_HIP_ARCHITECTURES",
		"description": "Eine Liste der GPU-Architekturen, für die ein Gerätecode generiert werden soll. Architekturnamen werden auf der Grundlage von CMAKE_HIP_PLATFORM interpretiert."
	},
	"CMAKE_HIP_COMPILE_FEATURES": {
		"name": "CMAKE_HIP_COMPILE_FEATURES",
		"description": "Liste mit Features, die dem HIP-Compiler bekannt sind"
	},
	"CMAKE_HIP_EXTENSIONS": {
		"name": "CMAKE_HIP_EXTENSIONS",
		"description": "Standardwert für HIP_EXTENSIONS Zieleigenschaft, wenn beim Erstellen eines Ziels festgelegt."
	},
	"CMAKE_HIP_PLATFORM": {
		"name": "CMAKE_HIP_PLATFORM",
		"description": "GPU-Plattform, für die HIP-Sprachquellen kompiliert werden sollen."
	},
	"CMAKE_HIP_STANDARD": {
		"name": "CMAKE_HIP_STANDARD",
		"description": "Standardwert für HIP_STANDARD Zieleigenschaft, wenn beim Erstellen eines Ziels festgelegt."
	},
	"CMAKE_HIP_STANDARD_REQUIRED": {
		"name": "CMAKE_HIP_STANDARD_REQUIRED",
		"description": "Standardwert für HIP_STANDARD_REQUIRED Zieleigenschaft, wenn beim Erstellen eines Ziels festgelegt."
	},
	"CMAKE_HOME_DIRECTORY": {
		"name": "CMAKE_HOME_DIRECTORY",
		"description": "Der Pfad zur obersten Ebene der Quellstruktur. Identisch mit CMAKE_SOURCE_DIR."
	},
	"CMAKE_HOST_APPLE": {
		"name": "CMAKE_HOST_APPLE",
		"description": "Bei macOS-Betriebssystemen von Apple auf \"true\" gesetzt."
	},
	"CMAKE_HOST_BSD": {
		"name": "CMAKE_HOST_BSD",
		"description": "Wird auf einen Zeichenfolgenwert festgelegt, wenn das Hostsystem BSD ist. Dieser Wert kann einer der folgenden sein: DragonFlyBSD, FreeBSD, OpenBSD oder NetBSD."
	},
	"CMAKE_HOST_LINUX": {
		"name": "CMAKE_HOST_LINUX",
		"description": "Wird auf WAHR festgelegt, wenn das Hostsystem Linux ist."
	},
	"CMAKE_HOST_SOLARIS": {
		"name": "CMAKE_HOST_SOLARIS",
		"description": "Bei Oracle Solaris-Betriebssystemen auf \"true\" gesetzt."
	},
	"CMAKE_HOST_SYSTEM": {
		"name": "CMAKE_HOST_SYSTEM",
		"description": "Zusammengesetzter Name des Betriebssystems, unter dem CMake ausgeführt wird."
	},
	"CMAKE_HOST_SYSTEM_NAME": {
		"name": "CMAKE_HOST_SYSTEM_NAME",
		"description": "Name des Betriebssystems, unter dem CMake ausgeführt wird."
	},
	"CMAKE_HOST_SYSTEM_PROCESSOR": {
		"name": "CMAKE_HOST_SYSTEM_PROCESSOR",
		"description": "Name der CPU, unter der CMake ausgeführt wird."
	},
	"CMAKE_HOST_SYSTEM_VERSION": {
		"name": "CMAKE_HOST_SYSTEM_VERSION",
		"description": "Die Betriebssystemversion, unter der CMake ausgeführt wird."
	},
	"CMAKE_HOST_UNIX": {
		"name": "CMAKE_HOST_UNIX",
		"description": "Bei UNIX-Betriebssystemen und UNIX-ähnlichen Betriebssystemen auf \"true\" gesetzt."
	},
	"CMAKE_HOST_WIN32": {
		"name": "CMAKE_HOST_WIN32",
		"description": "\"True\", wenn das Hostsystem unter Windows ausgeführt wird (einschließlich Windows 64-Bit und MSYS)."
	},
	"CMAKE_IGNORE_PATH": {
		"name": "CMAKE_IGNORE_PATH",
		"description": "Semikolon-getrennte Liste von Verzeichnissen, die von den verschiedenen find...()-Befehlen ignoriert werden sollen."
	},
	"CMAKE_IGNORE_PREFIX_PATH": {
		"name": "CMAKE_IGNORE_PREFIX_PATH",
		"description": "Semikolon-getrennte Liste von Suchpräfixen, die von den Befehlen find_program, find_library, find_file und find_path ignoriert werden sollen. Die Präfixe werden auch vom Konfigurationsmodus des Befehls find_package ignoriert (der Modulmodus ist davon nicht betroffen). Um stattdessen bestimmte Verzeichnisse zu ignorieren, siehe CMAKE_IGNORE_NONPREFIX_VAR."
	},
	"CMAKE_IMPORT_LIBRARY_PREFIX": {
		"name": "CMAKE_IMPORT_LIBRARY_PREFIX",
		"description": "Das Präfix für Importbibliotheken, zu denen Sie eine Verknüpfung herstellen."
	},
	"CMAKE_IMPORT_LIBRARY_SUFFIX": {
		"name": "CMAKE_IMPORT_LIBRARY_SUFFIX",
		"description": "Das Suffix für Importbibliotheken, zu denen Sie eine Verknüpfung herstellen."
	},
	"CMAKE_INCLUDE_CURRENT_DIR": {
		"name": "CMAKE_INCLUDE_CURRENT_DIR",
		"description": "Fügen Sie automatisch die aktuelle Quelle hinzu, und erstellen Sie Verzeichnisse für den Include-Pfad."
	},
	"CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE": {
		"name": "CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE",
		"description": "Fügen Sie automatisch die aktuelle Quelle hinzu, und erstellen Sie Verzeichnisse für die Zieleigenschaft INTERFACE_INCLUDE_DIRECTORIES."
	},
	"CMAKE_INCLUDE_DIRECTORIES_BEFORE": {
		"name": "CMAKE_INCLUDE_DIRECTORIES_BEFORE",
		"description": "Gibt an, ob Verzeichnisse bei \"include_directories\" standardmäßig am Anfang oder Ende hinzugefügt werden."
	},
	"CMAKE_INCLUDE_DIRECTORIES_PROJECT_BEFORE": {
		"name": "CMAKE_INCLUDE_DIRECTORIES_PROJECT_BEFORE",
		"description": "Legt fest, ob bei Projekt-Include-Verzeichnissen das Hinzufügen am Anfang erzwungen wird."
	},
	"CMAKE_INCLUDE_PATH": {
		"name": "CMAKE_INCLUDE_PATH",
		"description": "Eine mittels Semikolon getrennte Liste mit Verzeichnissen unter Angabe eines Suchpfads für die Befehle „find_file“ und „commands“. Die Liste ist standardmäßig leer und vom Projekt festzulegen."
	},
	"CMAKE_INSTALL_DEFAULT_COMPONENT_NAME": {
		"name": "CMAKE_INSTALL_DEFAULT_COMPONENT_NAME",
		"description": "Die in \"install commands\" verwendete Standardkomponente."
	},
	"CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS": {
		"name": "CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS",
		"description": "Standardberechtigungen für Verzeichnisse, die implizit während der Installation von Dateien durch \"install\" und \"file\" erstellt werden."
	},
	"CMAKE_INSTALL_MESSAGE": {
		"name": "CMAKE_INSTALL_MESSAGE",
		"description": "Legen Sie die Ausführlichkeit des durch den Befehl \"install\" (über den Befehl \"file\") generierten Installationsskriptcodes fest. Bei neu installierten oder aktualisierten Pfaden erfolgen bei der Installation möglicherweise die folgenden Zeilen:"
	},
	"CMAKE_INSTALL_NAME_DIR": {
		"name": "CMAKE_INSTALL_NAME_DIR",
		"description": "Verzeichnisname für installierte Ziele auf Apple-Plattformen."
	},
	"CMAKE_INSTALL_PREFIX": {
		"name": "CMAKE_INSTALL_PREFIX",
		"description": "Das von \"install\" verwendete Installationsverzeichnis."
	},
	"CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT": {
		"name": "CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT",
		"description": "CMake legt diese Variable auf einen WAHR-Wert fest, wenn das CMAKE_INSTALL_PREFIX gerade auf seinen Standardwert initialisiert wurde, in der Regel bei der ersten Ausführung von CMake in einer neuen Buildstruktur und, wenn die CMAKE_INSTALL_PREFIX-Umgebungsvariable nicht bei der ersten Ausführung von CMake festgelegt ist. Dies kann vom Projektcode verwendet werden, um den Standardwert zu ändern, ohne einen vom Benutzer bereitgestellten Wert zu überschreiben:"
	},
	"CMAKE_INSTALL_REMOVE_ENVIRONMENT_RPATH": {
		"name": "CMAKE_INSTALL_REMOVE_ENVIRONMENT_RPATH",
		"description": "Hiermit wird festgelegt, ob über die Toolkette definierte rpath-Werte während der Installation entfernt werden sollen."
	},
	"CMAKE_INSTALL_RPATH": {
		"name": "CMAKE_INSTALL_RPATH",
		"description": "Der rpath zur Verwendung für installierte Ziele."
	},
	"CMAKE_INSTALL_RPATH_USE_LINK_PATH": {
		"name": "CMAKE_INSTALL_RPATH_USE_LINK_PATH",
		"description": "Fügen Sie der Linkersuche und dem installierten rpath Pfade hinzu."
	},
	"CMAKE_INTERNAL_PLATFORM_ABI": {
		"name": "CMAKE_INTERNAL_PLATFORM_ABI",
		"description": "Eine interne Variable, die sich ändert."
	},
	"CMAKE_INTERPROCEDURAL_OPTIMIZATION": {
		"name": "CMAKE_INTERPROCEDURAL_OPTIMIZATION",
		"description": "Standardwert für INTERPROCEDURAL_OPTIMIZATION von Zielen."
	},
	"CMAKE_INTERPROCEDURAL_OPTIMIZATION_<CONFIG>": {
		"name": "CMAKE_INTERPROCEDURAL_OPTIMIZATION_<CONFIG>",
		"description": "Standardwert für INTERPROCEDURAL_OPTIMIZATION_ von Zielen."
	},
	"CMAKE_IOS_INSTALL_COMBINED": {
		"name": "CMAKE_IOS_INSTALL_COMBINED",
		"description": "Standardwert für IOS_INSTALL_COMBINED von Zielen."
	},
	"CMAKE_ISPC_HEADER_DIRECTORY": {
		"name": "CMAKE_ISPC_HEADER_DIRECTORY",
		"description": "Das von ISPC generierte Headerausgabeverzeichnis."
	},
	"CMAKE_ISPC_HEADER_SUFFIX": {
		"name": "CMAKE_ISPC_HEADER_SUFFIX",
		"description": "Das zu verwendende Ausgabesuffix für Header, die von ISPC generiert werden."
	},
	"CMAKE_ISPC_INSTRUCTION_SETS": {
		"name": "CMAKE_ISPC_INSTRUCTION_SETS",
		"description": "Der Standardwert der Eigenschaft ISPC_INSTRUCTION_SETS von Zielen."
	},
	"CMAKE_JOB_POOLS": {
		"name": "CMAKE_JOB_POOLS",
		"description": "Ist die globale Eigenschaft JOB_POOLS nicht festgelegt, wird stattdessen der Wert dieser Variable verwendet. Siehe JOB_POOLS, um weitere Informationen zu erhalten."
	},
	"CMAKE_JOB_POOL_COMPILE": {
		"name": "CMAKE_JOB_POOL_COMPILE",
		"description": "Diese Variable wird verwendet, um die Eigenschaft JOB_POOL_COMPILE auf allen Zielen zu initialisieren. Siehe JOB_POOL_COMPILE, um weitere Informationen zu erhalten."
	},
	"CMAKE_JOB_POOL_LINK": {
		"name": "CMAKE_JOB_POOL_LINK",
		"description": "Diese Variable wird verwendet, um die Eigenschaft JOB_POOL_LINK auf allen Zielen zu initialisieren. Siehe JOB_POOL_LINK, um weitere Informationen zu erhalten."
	},
	"CMAKE_JOB_POOL_PRECOMPILE_HEADER": {
		"name": "CMAKE_JOB_POOL_PRECOMPILE_HEADER",
		"description": "Diese Variable wird verwendet, um die Eigenschaft JOB_POOL_PRECOMPILE_HEADER für alle Ziele zu initialisieren. Weitere Informationen finden Sie unter JOB_POOL_PRECOMPILE_HEADER."
	},
	"CMAKE_KATE_FILES_MODE": {
		"name": "CMAKE_KATE_FILES_MODE",
		"description": "Diese Cachevariable wird vom Kate-Projektgenerator verwendet und steuert, in welchem Modus der Dateieintrag in der Projektdatei festgelegt wird. Siehe „cmake-generators“."
	},
	"CMAKE_KATE_MAKE_ARGUMENTS": {
		"name": "CMAKE_KATE_MAKE_ARGUMENTS",
		"description": "Diese Cachevariable wird vom Kate-Projektgenerator verwendet. Siehe „cmake-generators“."
	},
	"CMAKE_<LANG>_ANDROID_TOOLCHAIN_MACHINE": {
		"name": "CMAKE_<LANG>_ANDROID_TOOLCHAIN_MACHINE",
		"description": "Bei der Crosskompilierung für Android enthält diese Variable den Namen des Computers (z. B. \"gcc -dumpmachine\"), auf dem sich die Toolketten-Binutils befinden. Der Name der Binutils enthält i .d. R. ein <machine>-Präfix."
	},
	"CMAKE_<LANG>_ANDROID_TOOLCHAIN_PREFIX": {
		"name": "CMAKE_<LANG>_ANDROID_TOOLCHAIN_PREFIX",
		"description": "Bei der Crosskompilierung für Android enthält diese Variable den absoluten Pfad als Präfix des Toolketten-GUP-Compilers und dessen Binutils."
	},
	"CMAKE_<LANG>_ANDROID_TOOLCHAIN_SUFFIX": {
		"name": "CMAKE_<LANG>_ANDROID_TOOLCHAIN_SUFFIX",
		"description": "Bei der Crosskompilierung für Android enthält diese Variable das Hostplattformsuffix des Toolketten-GNU-Compilers und dessen Binutils."
	},
	"CMAKE_<LANG>_ARCHIVE_APPEND": {
		"name": "CMAKE_<LANG>_ARCHIVE_APPEND",
		"description": "Regelvariable, die einem statischen Archiv angefügt wird."
	},
	"CMAKE_<LANG>_ARCHIVE_CREATE": {
		"name": "CMAKE_<LANG>_ARCHIVE_CREATE",
		"description": "Regelvariable zum Erstellen eines neuen statischen Archivs."
	},
	"CMAKE_<LANG>_ARCHIVE_FINISH": {
		"name": "CMAKE_<LANG>_ARCHIVE_FINISH",
		"description": "Regelvariable zum Beenden eines bestehenden statischen Archivs."
	},
	"CMAKE_<LANG>_BYTE_ORDER": {
		"name": "CMAKE_<LANG>_BYTE_ORDER",
		"description": "Die Bytereihenfolge der Zielarchitektur für den <LANG>-Compiler, falls bekannt. Wenn diese definiert wird und nicht leer ist, werden folgende Werte unterstützt:"
	},
	"CMAKE_<LANG>_CLANG_TIDY": {
		"name": "CMAKE_<LANG>_CLANG_TIDY",
		"description": "Der Standardwert der <LANG>_CLANG_TIDY-Eigenschaft des Ziels, wenn <LANG> C, CXX, OBJC oder OBJCXX ist."
	},
	"CMAKE_<LANG>_CLANG_TIDY_EXPORT_FIXES_DIR": {
		"name": "CMAKE_<LANG>_CLANG_TIDY_EXPORT_FIXES_DIR",
		"description": "Der Standardwert der <LANG>_CLANG_TIDY_EXPORT_FIXES_DIR-Eigenschaft des Ziels, wenn <LANG> C, CXX, OBJC oder OBJCXX ist."
	},
	"CMAKE_<LANG>_COMPILER": {
		"name": "CMAKE_<LANG>_COMPILER",
		"description": "Der vollständige Pfad zum Compiler für LANG."
	},
	"CMAKE_<LANG>_COMPILER_ABI": {
		"name": "CMAKE_<LANG>_COMPILER_ABI",
		"description": "Eine interne Variable, die sich ändert."
	},
	"CMAKE_<LANG>_COMPILER_AR": {
		"name": "CMAKE_<LANG>_COMPILER_AR",
		"description": "Ein Wrapper, der ar umgibt und für den Compiler die entsprechende --plugin-Option hinzufügt."
	},
	"CMAKE_<LANG>_COMPILER_ARCHITECTURE_ID": {
		"name": "CMAKE_<LANG>_COMPILER_ARCHITECTURE_ID",
		"description": "Eine interne Variable, die sich ändert."
	},
	"CMAKE_<LANG>_COMPILER_EXTERNAL_TOOLCHAIN": {
		"name": "CMAKE_<LANG>_COMPILER_EXTERNAL_TOOLCHAIN",
		"description": "Die externe Toolkette zur Crosskompilierung (falls unterstützt)."
	},
	"CMAKE_<LANG>_COMPILER_FRONTEND_VARIANT": {
		"name": "CMAKE_<LANG>_COMPILER_FRONTEND_VARIANT",
		"description": "Identifikationszeichenfolge der Front-End-Variante des Compilers."
	},
	"CMAKE_<LANG>_COMPILER_ID": {
		"name": "CMAKE_<LANG>_COMPILER_ID",
		"description": "Die Zeichenfolge zur Identifizierung des Compilers."
	},
	"CMAKE_<LANG>_COMPILER_LAUNCHER": {
		"name": "CMAKE_<LANG>_COMPILER_LAUNCHER",
		"description": "Der Standardwert der <LANG>_COMPILER_LAUNCHER-Eigenschaft des Ziels. Mit dieser Variablen wird die Eigenschaft für die einzelnen Ziele bei deren Erstellung initialisiert. Dies geschieht nur, wenn <LANG> einen der folgenden Werte aufweist: C, Fortran, HIP, ISPC, OBJC, OBJCXX oder CUDA."
	},
	"CMAKE_<LANG>_COMPILER_LINKER": {
		"name": "CMAKE_<LANG>_COMPILER_LINKER",
		"description": "Der vollständige Pfad zum Linker für LANG."
	},
	"CMAKE_<LANG>_COMPILER_LINKER_FRONTEND_VARIANT": {
		"name": "CMAKE_<LANG>_COMPILER_LINKER_FRONTEND_VARIANT",
		"description": "Identifikationszeichenfolge der Linker-Front-End-Variante."
	},
	"CMAKE_<LANG>_COMPILER_LINKER_ID": {
		"name": "CMAKE_<LANG>_COMPILER_LINKER_ID",
		"description": "Linkeridentifikationszeichenfolge."
	},
	"CMAKE_<LANG>_COMPILER_LINKER_VERSION": {
		"name": "CMAKE_<LANG>_COMPILER_LINKER_VERSION",
		"description": "Linkerversionszeichenfolge."
	},
	"CMAKE_<LANG>_COMPILER_LOADED": {
		"name": "CMAKE_<LANG>_COMPILER_LOADED",
		"description": "Als \"true\" definiert, wenn die Sprache aktiviert ist."
	},
	"CMAKE_<LANG>_COMPILER_PREDEFINES_COMMAND": {
		"name": "CMAKE_<LANG>_COMPILER_PREDEFINES_COMMAND",
		"description": "Befehl, der die Vordefinitionen des Compilers ausgibt."
	},
	"CMAKE_<LANG>_COMPILER_RANLIB": {
		"name": "CMAKE_<LANG>_COMPILER_RANLIB",
		"description": "Ein Wrapper, der ranlib umgibt und für den Compiler die entsprechende --plugin-Option hinzufügt."
	},
	"CMAKE_<LANG>_COMPILER_TARGET": {
		"name": "CMAKE_<LANG>_COMPILER_TARGET",
		"description": "Das Ziel für die Crosskompilierung (falls unterstützt)."
	},
	"CMAKE_<LANG>_COMPILER_VERSION": {
		"name": "CMAKE_<LANG>_COMPILER_VERSION",
		"description": "Die Versionszeichenfolge des Compilers."
	},
	"CMAKE_<LANG>_COMPILER_VERSION_INTERNAL": {
		"name": "CMAKE_<LANG>_COMPILER_VERSION_INTERNAL",
		"description": "Eine interne Variable, die sich ändert."
	},
	"CMAKE_<LANG>_COMPILE_OBJECT": {
		"name": "CMAKE_<LANG>_COMPILE_OBJECT",
		"description": "Regelvariable zum Kompilieren einer einzelnen Objektdatei."
	},
	"CMAKE_<LANG>_CPPCHECK": {
		"name": "CMAKE_<LANG>_CPPCHECK",
		"description": "Standardwert der Zieleigenschaft <LANG>_CPPCHECK. Mit dieser Variable wird die Eigenschaft auf allen Zielen während des Erstellens initialisiert. Dies erfolgt nur, wenn <LANG> C oder CXX ist."
	},
	"CMAKE_<LANG>_CPPLINT": {
		"name": "CMAKE_<LANG>_CPPLINT",
		"description": "Standardwert der Zieleigenschaft <LANG>_CPPLINT. Mit dieser Variable wird die Eigenschaft auf allen Zielen während des Erstellens initialisiert. Dies erfolgt nur, wenn <LANG> C oder CXX ist."
	},
	"CMAKE_<LANG>_CREATE_SHARED_LIBRARY": {
		"name": "CMAKE_<LANG>_CREATE_SHARED_LIBRARY",
		"description": "Regelvariable zum Erstellen einer freigegebenen Bibliothek."
	},
	"CMAKE_<LANG>_CREATE_SHARED_MODULE": {
		"name": "CMAKE_<LANG>_CREATE_SHARED_MODULE",
		"description": "Regelvariable zum Erstellen eines freigegebenen Moduls."
	},
	"CMAKE_<LANG>_CREATE_STATIC_LIBRARY": {
		"name": "CMAKE_<LANG>_CREATE_STATIC_LIBRARY",
		"description": "Regelvariable zum Erstellen einer statischen Bibliothek."
	},
	"CMAKE_<LANG>_EXTENSIONS": {
		"name": "CMAKE_<LANG>_EXTENSIONS",
		"description": "Die Variationen sind:"
	},
	"CMAKE_<LANG>_EXTENSIONS_DEFAULT": {
		"name": "CMAKE_<LANG>_EXTENSIONS_DEFAULT",
		"description": "Standarderweiterungsmodus des Compilers. Wird als Standard für die Zieleigenschaft <LANG>_EXTENSIONS verwendet, wenn CMAKE_<LANG>_EXTENSIONS nicht festgelegt ist (siehe CMP0128)."
	},
	"CMAKE_<LANG>_FLAGS": {
		"name": "CMAKE_<LANG>_FLAGS",
		"description": "Sprachspezifische Flags für die Sprache <LANG>, die bei der Erstellung für alle Konfigurationen verwendet werden. Diese Flags werden an alle Aufrufe des Compilers übergeben. Dies schließt Aufrufe ein, die das Kompilieren von Laufwerken steuern, und Aufrufe, die die Verknüpfung steuern."
	},
	"CMAKE_<LANG>_FLAGS_<CONFIG>": {
		"name": "CMAKE_<LANG>_FLAGS_<CONFIG>",
		"description": "Sprachspezifische Flags für die Sprache <LANG>, die bei der Erstellung für die <CONFIG>-Konfiguration verwendet werden. Diese Flags werden an alle Aufrufe des Compilers in der entsprechenden Konfiguration übergeben. Dies schließt Aufrufe ein, die das Kompilieren von Laufwerken steuern, und Aufrufe, die die Verknüpfung steuern."
	},
	"CMAKE_<LANG>_FLAGS_<CONFIG>_INIT": {
		"name": "CMAKE_<LANG>_FLAGS_<CONFIG>_INIT",
		"description": "Wert, mit dem der Cacheeintrag CMAKE_<LANG>FLAGS_ beim erstmaligen Konfigurieren eines Buildbaums für die Sprache <LANG> initialisiert wird. Diese Variable muss durch eine Toolkettendatei festgelegt werden. Je nach Umgebung und Zielplattform fügt CMake dem Wert am Anfang oder Ende Inhalte hinzu."
	},
	"CMAKE_<LANG>_FLAGS_DEBUG": {
		"name": "CMAKE_<LANG>_FLAGS_DEBUG",
		"description": "Diese Variable ist die Debug-Variante der Variable CMAKE_<LANG>_FLAGS_."
	},
	"CMAKE_<LANG>_FLAGS_DEBUG_INIT": {
		"name": "CMAKE_<LANG>_FLAGS_DEBUG_INIT",
		"description": "Diese Variable ist die Debug-Variante der Variable CMAKE_<LANG>_FLAGS_<CONFIG>_INIT."
	},
	"CMAKE_<LANG>_FLAGS_INIT": {
		"name": "CMAKE_<LANG>_FLAGS_INIT",
		"description": "Der Wert zum Initialisieren des CMAKE_<LANG>_FLAGS-Cacheeintrags, wenn eine Buildstruktur zum ersten Mal für die Sprache <LANG> konfiguriert wird. Diese Variable soll von einer Toolkettendatei festgelegt werden. CMake kann dem Wert basierend auf Umgebung und Zielplattform Inhalte voranstellen oder Inhalte anfügen. Beispielsweise werden die Inhalte einer xxxFLAGS-Umgebungsvariable dort vorangestellt, wo xxx Sprachen-spezifisch ist aber nicht identisch ist mit <LANG> (z. B. CXXFLAGS für CXX, FFLAGS für Fortran usw.). Dieser Wert ist ein Befehlszeilenzeichenfolgenfragment. Verschiedene Optionen sollten daher durch Leerzeichen getrennt und Optionen mit Leerzeichen in Anführungszeichen gesetzt werden."
	},
	"CMAKE_<LANG>_FLAGS_MINSIZEREL": {
		"name": "CMAKE_<LANG>_FLAGS_MINSIZEREL",
		"description": "Diese Variable ist die MinSizeRel-Variante der Variable CMAKE_<LANG>_FLAGS_."
	},
	"CMAKE_<LANG>_FLAGS_MINSIZEREL_INIT": {
		"name": "CMAKE_<LANG>_FLAGS_MINSIZEREL_INIT",
		"description": "Diese Variable ist die MinSizeRel-Variante der Variable CMAKE_<LANG>_FLAGS_<CONFIG>_INIT."
	},
	"CMAKE_<LANG>_FLAGS_RELEASE": {
		"name": "CMAKE_<LANG>_FLAGS_RELEASE",
		"description": "Diese Variable ist die Release-Variante der Variable CMAKE_<LANG>_FLAGS_."
	},
	"CMAKE_<LANG>_FLAGS_RELEASE_INIT": {
		"name": "CMAKE_<LANG>_FLAGS_RELEASE_INIT",
		"description": "Diese Variable ist die Release-Variante der Variable CMAKE_<LANG>_FLAGS_<CONFIG>_INIT."
	},
	"CMAKE_<LANG>_FLAGS_RELWITHDEBINFO": {
		"name": "CMAKE_<LANG>_FLAGS_RELWITHDEBINFO",
		"description": "Diese Variable ist die RelWithDebInfo-Variante der Variable CMAKE_<LANG>_FLAGS_."
	},
	"CMAKE_<LANG>_FLAGS_RELWITHDEBINFO_INIT": {
		"name": "CMAKE_<LANG>_FLAGS_RELWITHDEBINFO_INIT",
		"description": "Diese Variable ist die RelWithDebInfo-Variante der Variable CMAKE_<LANG>_FLAGS_<CONFIG>_INIT."
	},
	"CMAKE_<LANG>_HOST_COMPILER": {
		"name": "CMAKE_<LANG>_HOST_COMPILER",
		"description": "Diese Variable ist verfügbar, wenn <LANG> CUDA oder HIP ist."
	},
	"CMAKE_<LANG>_IGNORE_EXTENSIONS": {
		"name": "CMAKE_<LANG>_IGNORE_EXTENSIONS",
		"description": "Dateierweiterungen, die vom Build ignoriert werden sollen."
	},
	"CMAKE_<LANG>_IMPLICIT_INCLUDE_DIRECTORIES": {
		"name": "CMAKE_<LANG>_IMPLICIT_INCLUDE_DIRECTORIES",
		"description": "Verzeichnisse, die vom Compiler implizit nach Headerdateien durchsucht werden."
	},
	"CMAKE_<LANG>_IMPLICIT_LINK_DIRECTORIES": {
		"name": "CMAKE_<LANG>_IMPLICIT_LINK_DIRECTORIES",
		"description": "Impliziter Linker-Suchpfad, der für Sprache <LANG> erkannt wurde."
	},
	"CMAKE_<LANG>_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES": {
		"name": "CMAKE_<LANG>_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES",
		"description": "Impliziter Linker-Framework-Suchpfad, der für Sprache <LANG> erkannt wurde."
	},
	"CMAKE_<LANG>_IMPLICIT_LINK_LIBRARIES": {
		"name": "CMAKE_<LANG>_IMPLICIT_LINK_LIBRARIES",
		"description": "Implizite Verknüpfungsbibliotheken und Flags, die für Sprache <LANG> erkannt wurden."
	},
	"CMAKE_<LANG>_INCLUDE_WHAT_YOU_USE": {
		"name": "CMAKE_<LANG>_INCLUDE_WHAT_YOU_USE",
		"description": "Standardwert der Zieleigenschaft <LANG>_INCLUDE_WHAT_YOU_USE. Mit dieser Variable wird die Eigenschaft auf allen Zielen während des Erstellens initialisiert. Dies erfolgt nur, wenn <LANG> C oder CXX ist."
	},
	"CMAKE_<LANG>_LIBRARY_ARCHITECTURE": {
		"name": "CMAKE_<LANG>_LIBRARY_ARCHITECTURE",
		"description": "Der für <LANG> erkannte Verzeichnisname der Zielarchitekturbibliothek."
	},
	"CMAKE_<LANG>_LINKER_LAUNCHER": {
		"name": "CMAKE_<LANG>_LINKER_LAUNCHER",
		"description": "Der Standardwert der Zieleigenschaft <LANG>_COMPILER_LAUNCHER. Mit dieser Variable wird die Eigenschaft auf allen Zielen während der Erstellung initialisiert. Dies erfolgt nur, wenn <LANG> C, CXX, OBJC oder OBJCXX entspricht."
	},
	"CMAKE_<LANG>_LINKER_PREFERENCE": {
		"name": "CMAKE_<LANG>_LINKER_PREFERENCE",
		"description": "Eine interne Variable, die sich ändert."
	},
	"CMAKE_<LANG>_LINKER_PREFERENCE_PROPAGATES": {
		"name": "CMAKE_<LANG>_LINKER_PREFERENCE_PROPAGATES",
		"description": "Eine interne Variable, die sich ändert."
	},
	"CMAKE_<LANG>_LINKER_WRAPPER_FLAG": {
		"name": "CMAKE_<LANG>_LINKER_WRAPPER_FLAG",
		"description": "Definiert die Syntax der Compilertreiberoption so, dass Optionen an das Linkertool übergeben werden, und übersetzt das Präfix \"LINKER:\" in den Verknüpfungsoptionen (siehe \"add_link_options\" und \"target_link_options\")."
	},
	"CMAKE_<LANG>_LINKER_WRAPPER_FLAG_SEP": {
		"name": "CMAKE_<LANG>_LINKER_WRAPPER_FLAG_SEP",
		"description": "Diese Variable wird mit der Variable CMAKE_<LANG>_LINKER_WRAPPER_FLAG verwendet, um das Präfix \"LINKER:\" in den Verknüpfungsoptionen zu formatieren (siehe \"add_link_options\" und \"target_link_options\")."
	},
	"CMAKE_<LANG>_LINK_EXECUTABLE": {
		"name": "CMAKE_<LANG>_LINK_EXECUTABLE",
		"description": "Regelvariable zum Verknüpfen einer ausführbaren Datei."
	},
	"CMAKE_<LANG>_LINK_GROUP_USING_<FEATURE>": {
		"name": "CMAKE_<LANG>_LINK_GROUP_USING_<FEATURE>",
		"description": "Diese Variable definiert, wie eine Gruppe von Bibliotheken für das angegebene <FEATURE> verknüpft werden, wenn ein LINK_GROUP-Generatorausdruck verwendet wird und die Linksprache für das Ziel <LANG> ist. Damit diese Variable Auswirkungen hat, muss die zugeordnete Variable CMAKE_<LANG>_LINK_GROUP_USING_<FEATURE>_SUPPORTED auf WAHR festgelegt sein."
	},
	"CMAKE_<LANG>_LINK_GROUP_USING_<FEATURE>_SUPPORTED": {
		"name": "CMAKE_<LANG>_LINK_GROUP_USING_<FEATURE>_SUPPORTED",
		"description": "Diese Variable gibt an, ob das <FEATURE> für die Linksprache <LANG> unterstützt wird. Wenn diese Variable WAHR ist, dann muss das <FEATURE> durch CMAKE_<LANG>_LINK_GROUP_USING_ definiert werden, und die generischeren Variablen CMAKE_LINK_GROUP_USING_<FEATURE>_SUPPORTED und CMAKE_LINK_GROUP_USING_ werden nicht verwendet."
	},
	"CMAKE_<LANG>_LINK_LIBRARY_<FEATURE>_ATTRIBUTES": {
		"name": "CMAKE_<LANG>_LINK_LIBRARY_<FEATURE>_ATTRIBUTES",
		"description": "Diese Variable definiert die Semantik der angegebenen Linkbibliothek <FEATURE> beim Verknüpfen mit der Linksprache <LANG>. Sie hat Vorrang vor CMAKE_LINK_LIBRARY_<FEATURE>_ATTRIBUTES, wenn diese Variable auch für dasselbe <FEATURE> definiert ist, hat andernfalls aber ähnliche Auswirkungen. Weitere Informationen finden Sie unter CMAKE_LINK_LIBRARY_<FEATURE>_ATTRIBUTES."
	},
	"CMAKE_<LANG>_LINK_LIBRARY_FILE_FLAG": {
		"name": "CMAKE_<LANG>_LINK_LIBRARY_FILE_FLAG",
		"description": "Ein sprachenspezifisches Flag, mit dem eine Bibliothek verknüpft wird, die durch einen Pfad zur zugehörigen Datei angegeben ist."
	},
	"CMAKE_<LANG>_LINK_LIBRARY_FLAG": {
		"name": "CMAKE_<LANG>_LINK_LIBRARY_FLAG",
		"description": "Ein Flag, mit dem eine Bibliothek mit einer freigegebenen Bibliothek oder einer ausführbaren Datei verknüpft wird."
	},
	"CMAKE_<LANG>_LINK_LIBRARY_SUFFIX": {
		"name": "CMAKE_<LANG>_LINK_LIBRARY_SUFFIX",
		"description": "Ein sprachenspezifisches Suffix für Bibliotheken, mit denen Sie eine Verknüpfung erstellen."
	},
	"CMAKE_<LANG>_LINK_LIBRARY_USING_<FEATURE>": {
		"name": "CMAKE_<LANG>_LINK_LIBRARY_USING_<FEATURE>",
		"description": "Diese Variable definiert, wie eine Bibliothek oder ein Framework für das angegebene <FEATURE> verknüpft wird, wenn ein LINK_LIBRARY-Generatorausdruck verwendet wird und die Linksprache für das Ziel <LANG> ist. Damit diese Variable Auswirkungen hat, muss die zugeordnete Variable CMAKE_<LANG>_LINK_LIBRARY_USING_<FEATURE>_SUPPORTED auf WAHR festgelegt sein."
	},
	"CMAKE_<LANG>_LINK_LIBRARY_USING_<FEATURE>_SUPPORTED": {
		"name": "CMAKE_<LANG>_LINK_LIBRARY_USING_<FEATURE>_SUPPORTED",
		"description": "Auf WAHR festgelegt, wenn das <FEATURE>, wie von der Variable CMAKE_<LANG>_LINK_LIBRARY_USING_, für die Linkersprache <LANG> unterstützt wird."
	},
	"CMAKE_<LANG>_LINK_WHAT_YOU_USE_FLAG": {
		"name": "CMAKE_<LANG>_LINK_WHAT_YOU_USE_FLAG",
		"description": "Linkerflag, das zum Konfigurieren des Linkers verwendet werden soll, sodass alle angegebenen Bibliotheken in der Befehlszeile mit dem Ziel verknüpft werden."
	},
	"CMAKE_<LANG>_OUTPUT_EXTENSION": {
		"name": "CMAKE_<LANG>_OUTPUT_EXTENSION",
		"description": "Erweiterung für die Ausgabe der Kompilierung einer einzelnen Datei."
	},
	"CMAKE_<LANG>_PLATFORM_ID": {
		"name": "CMAKE_<LANG>_PLATFORM_ID",
		"description": "Eine interne Variable, die sich ändert."
	},
	"CMAKE_<LANG>_SIMULATE_ID": {
		"name": "CMAKE_<LANG>_SIMULATE_ID",
		"description": "Identifikationszeichenfolge des \"simulierten\" Compilers."
	},
	"CMAKE_<LANG>_SIMULATE_VERSION": {
		"name": "CMAKE_<LANG>_SIMULATE_VERSION",
		"description": "Versionszeichenfolge eines \"simulierten\" Compilers."
	},
	"CMAKE_<LANG>_SIZEOF_DATA_PTR": {
		"name": "CMAKE_<LANG>_SIZEOF_DATA_PTR",
		"description": "Größe der Zeiger-zu-Daten-Typen für Sprache <LANG>."
	},
	"CMAKE_<LANG>_SOURCE_FILE_EXTENSIONS": {
		"name": "CMAKE_<LANG>_SOURCE_FILE_EXTENSIONS",
		"description": "Erweiterungen von Quelldateien für die gegebene Sprache."
	},
	"CMAKE_<LANG>_STANDARD": {
		"name": "CMAKE_<LANG>_STANDARD",
		"description": "Die Variationen sind:"
	},
	"CMAKE_<LANG>_STANDARD_DEFAULT": {
		"name": "CMAKE_<LANG>_STANDARD_DEFAULT",
		"description": "Der Standardstandard des Compilers für die Sprache <LANG>. Leer, wenn der Compiler keine Standardebenen aufweist."
	},
	"CMAKE_<LANG>_STANDARD_INCLUDE_DIRECTORIES": {
		"name": "CMAKE_<LANG>_STANDARD_INCLUDE_DIRECTORIES",
		"description": "Schließen Sie Verzeichnisse ein, die für alle mit dem Compiler <LANG> kompilierten Quelldateien verwendet werden. Dies ist für die Spezifikation von Includeverzeichnissen des Systems vorgesehen, die von der Sprache der aktuellen Plattform benötigt werden. Die Verzeichnisse erscheinen immer am Ende des an den Compiler übergebenen Include-Pfads."
	},
	"CMAKE_<LANG>_STANDARD_LATEST": {
		"name": "CMAKE_<LANG>_STANDARD_LATEST",
		"description": "Diese Variable stellt das Minimum zwischen der neuesten Version des Standards für die Sprache <LANG> dar, die vom aktuellen Compiler unterstützt wird, und der aktuellen Version, die von CMake unterstützt wird. Der Wert wird auf einen der unterstützten Werte der entsprechenden <LANG>_STANDARD-Zieleigenschaft festgelegt. Eine Liste der unterstützten Sprachen finden Sie in der Dokumentation zu dieser Eigenschaft."
	},
	"CMAKE_<LANG>_STANDARD_LIBRARIES": {
		"name": "CMAKE_<LANG>_STANDARD_LIBRARIES",
		"description": "Bibliotheken, die in alle ausführbaren und freigegebenen Bibliotheken eingebunden sind, die für Sprache <LANG> verknüpft sind. Dies ist für die Spezifikation von Systembibliotheken gedacht, die von der Sprache für die aktuelle Plattform benötigt werden."
	},
	"CMAKE_<LANG>_STANDARD_REQUIRED": {
		"name": "CMAKE_<LANG>_STANDARD_REQUIRED",
		"description": "Die Variationen sind:"
	},
	"CMAKE_<LANG>_USING_LINKER_MODE": {
		"name": "CMAKE_<LANG>_USING_LINKER_MODE",
		"description": "Hiermit wird gesteuert, wie der Wert der variablen CMAKE_<LANG>_USING_LINKER_ interpretiert werden soll. Die unterstützten Linkermoduswerte sind:"
	},
	"CMAKE_<LANG>_USING_LINKER_<TYPE>": {
		"name": "CMAKE_<LANG>_USING_LINKER_<TYPE>",
		"description": "Diese Variable definiert, wie der <TYPE> Linker für den Linkschritt angegeben wird, der von der CMAKE_LINKER_TYPE Variablen oder der LINKER_TYPE Zieleigenschaft gesteuert wird. Abhängig vom Wert der variablen CMAKE_<LANG>_USING_LINKER_MODE kann CMAKE_<LANG>_USING_LINKER_<TYPE> Compilerflags für den Linkschritt oder Flags enthalten, die direkt an das Linkertool übergeben werden sollen."
	},
	"CMAKE_<LANG>_VISIBILITY_PRESET": {
		"name": "CMAKE_<LANG>_VISIBILITY_PRESET",
		"description": "Standardwert der Zieleigenschaft <LANG>_VISIBILITY_PRESET, wenn ein Ziel erstellt wird."
	},
	"CMAKE_LIBRARY_ARCHITECTURE": {
		"name": "CMAKE_LIBRARY_ARCHITECTURE",
		"description": "Der Verzeichnisname der Zielarchitekturbibliothek."
	},
	"CMAKE_LIBRARY_ARCHITECTURE_REGEX": {
		"name": "CMAKE_LIBRARY_ARCHITECTURE_REGEX",
		"description": "RegEx gleicht mögliche Verzeichnisnamen der Zielarchitekturbibliothek ab."
	},
	"CMAKE_LIBRARY_OUTPUT_DIRECTORY": {
		"name": "CMAKE_LIBRARY_OUTPUT_DIRECTORY",
		"description": "Gibt an, wo die LIBRARY-Zieldateien beim Erstellen abgelegt werden."
	},
	"CMAKE_LIBRARY_OUTPUT_DIRECTORY_<CONFIG>": {
		"name": "CMAKE_LIBRARY_OUTPUT_DIRECTORY_<CONFIG>",
		"description": "Gibt an, wo alle LIBRARY-Zieldateien nach der Erstellung für eine bestimmte Konfiguration abgelegt werden."
	},
	"CMAKE_LIBRARY_PATH": {
		"name": "CMAKE_LIBRARY_PATH",
		"description": "Eine mittels Semikolon getrennte Liste mit Verzeichnissen unter Angabe eines Suchpfads für den Befehl „find_library“. Die Liste ist standardmäßig leer und vom Projekt festzulegen."
	},
	"CMAKE_LIBRARY_PATH_FLAG": {
		"name": "CMAKE_LIBRARY_PATH_FLAG",
		"description": "Das Flag, mit dem ein Bibliotheksuchpfad einem Compiler hinzugefügt wird."
	},
	"CMAKE_LINKER_TYPE": {
		"name": "CMAKE_LINKER_TYPE",
		"description": "Geben Sie an, welcher Linker für den Linkschritt verwendet werden soll."
	},
	"CMAKE_LINK_DEF_FILE_FLAG": {
		"name": "CMAKE_LINK_DEF_FILE_FLAG",
		"description": "Ein Linker-Flag, mit dem eine .def-Datei zur DLL-Erstellung angegeben wird."
	},
	"CMAKE_LINK_DEPENDS_NO_SHARED": {
		"name": "CMAKE_LINK_DEPENDS_NO_SHARED",
		"description": "Gibt an, ob Verknüpfungsabhängigkeiten zu Dateien freigegebener Bibliotheken übersprungen werden."
	},
	"CMAKE_LINK_DEPENDS_USE_LINKER": {
		"name": "CMAKE_LINK_DEPENDS_USE_LINKER",
		"description": "Für die Makefile- und Ninja-Generatoren werden die Linkabhängigkeiten nun für eine Auswahl von Linkern vom Linker selbst erzeugt. Indem Sie diese Variable mit dem Wert FALSE definieren, können Sie diese Funktion deaktivieren."
	},
	"CMAKE_LINK_DIRECTORIES_BEFORE": {
		"name": "CMAKE_LINK_DIRECTORIES_BEFORE",
		"description": "Gibt an, ob Verzeichnisse in \"include_directories\" am Anfang oder Ende hinzugefügt werden."
	},
	"CMAKE_LINK_GROUP_USING_<FEATURE>": {
		"name": "CMAKE_LINK_GROUP_USING_<FEATURE>",
		"description": "Diese Variable definiert, wie eine Gruppe von Bibliotheken für das angegebene <FEATURE> verknüpft wird, wenn ein LINK_GROUP-Generatorausdruck verwendet wird. Beide der folgenden Bedingungen müssen erfüllt sein, damit diese Variable Auswirkungen hat:"
	},
	"CMAKE_LINK_GROUP_USING_<FEATURE>_SUPPORTED": {
		"name": "CMAKE_LINK_GROUP_USING_<FEATURE>_SUPPORTED",
		"description": "Diese Variable gibt an, ob das <FEATURE> unabhängig von der Linksprache unterstützt wird. Wenn diese Variable WAHR ist, dann muss das <FEATURE> durch CMAKE_LINK_GROUP_USING_ definiert werden."
	},
	"CMAKE_LINK_INTERFACE_LIBRARIES": {
		"name": "CMAKE_LINK_INTERFACE_LIBRARIES",
		"description": "Standardwert für LINK_INTERFACE_LIBRARIES von Zielen."
	},
	"CMAKE_LINK_LIBRARIES_ONLY_TARGETS": {
		"name": "CMAKE_LINK_LIBRARIES_ONLY_TARGETS",
		"description": "Legen Sie diese Variable fest, um die Eigenschaft LINK_LIBRARIES_ONLY_TARGETS von nicht importierten Zielen zu initialisieren, wenn sie erstellt werden. Das Setzen auf „true“ ermöglicht eine zusätzliche Überprüfung, ob alle von target_link_libraries benannten Elemente, die Zielnamen sein können, tatsächlich Namen vorhandener Ziele sind. Einzelheiten finden Sie in der Zieleigenschaften-Dokumentation."
	},
	"CMAKE_LINK_LIBRARY_<FEATURE>_ATTRIBUTES": {
		"name": "CMAKE_LINK_LIBRARY_<FEATURE>_ATTRIBUTES",
		"description": "Diese Variable definiert das Verhalten der angegebenen Linkbibliothek <FEATURE>. Gibt an, wie <FEATURE> mit anderen Features interagiert, wann <FEATURE> angewendet werden soll, und Aspekte, wie <FEATURE> behandelt werden soll, wenn CMake die letzte Linkerbefehlszeile zusammenfügt (z. B. Deduplizierung)."
	},
	"CMAKE_LINK_LIBRARY_FILE_FLAG": {
		"name": "CMAKE_LINK_LIBRARY_FILE_FLAG",
		"description": "Flag, mit dem eine durch einen Pfad angegebene Bibliothek mit ihrer Datei verknüpft wird."
	},
	"CMAKE_LINK_LIBRARY_FLAG": {
		"name": "CMAKE_LINK_LIBRARY_FLAG",
		"description": "Flag, mit dem eine Bibliothek mit einer ausführbaren Datei verknüpft wird."
	},
	"CMAKE_LINK_LIBRARY_SUFFIX": {
		"name": "CMAKE_LINK_LIBRARY_SUFFIX",
		"description": "Das Suffix für Bibliotheken, zu denen Sie eine Verknüpfung erstellen."
	},
	"CMAKE_LINK_LIBRARY_USING_<FEATURE>": {
		"name": "CMAKE_LINK_LIBRARY_USING_<FEATURE>",
		"description": "Diese Variable definiert, wie eine Bibliothek oder ein Framework für das angegebene <FEATURE> verknüpft wird, wenn ein LINK_LIBRARY-Generatorausdruck verwendet wird. Beide der folgenden Bedingungen müssen erfüllt sein, damit diese Variable Auswirkungen hat:"
	},
	"CMAKE_LINK_LIBRARY_USING_<FEATURE>_SUPPORTED": {
		"name": "CMAKE_LINK_LIBRARY_USING_<FEATURE>_SUPPORTED",
		"description": "Auf WAHR festgelegt, wenn das <FEATURE>, wie von der Variable CMAKE_LINK_LIBRARY_USING_ definiert, unabhängig von der Linkersprache unterstützt wird."
	},
	"CMAKE_LINK_SEARCH_END_STATIC": {
		"name": "CMAKE_LINK_SEARCH_END_STATIC",
		"description": "Beenden Sie eine Verknüpfungszeile so, dass statische Systembibliotheken verwendet werden."
	},
	"CMAKE_LINK_SEARCH_START_STATIC": {
		"name": "CMAKE_LINK_SEARCH_START_STATIC",
		"description": "Nehmen Sie an, dass der Linker standardmäßig nach statischen Bibliotheken sucht."
	},
	"CMAKE_LINK_WHAT_YOU_USE": {
		"name": "CMAKE_LINK_WHAT_YOU_USE",
		"description": "Standardwert der Zieleigenschaft LINK_WHAT_YOU_USE. Mit dieser Variable wird die Eigenschaft während des Erstellens auf allen Zielen initialisiert."
	},
	"CMAKE_LINK_WHAT_YOU_USE_CHECK": {
		"name": "CMAKE_LINK_WHAT_YOU_USE_CHECK",
		"description": "Definiert den Befehl, der nach dem Linkschritt ausgeführt wird, um die Verwendung von Bibliotheken zu überprüfen. Diese Überprüfung ist derzeit nur auf ELF-Plattformen mit dem Wert ldd -u -r definiert."
	},
	"CMAKE_MACOSX_BUNDLE": {
		"name": "CMAKE_MACOSX_BUNDLE",
		"description": "Standardwert für MACOSX_BUNDLE von Zielen."
	},
	"CMAKE_MACOSX_RPATH": {
		"name": "CMAKE_MACOSX_RPATH",
		"description": "Gibt an, ob unter macOS und iOS rpaths verwendet werden soll."
	},
	"CMAKE_MAJOR_VERSION": {
		"name": "CMAKE_MAJOR_VERSION",
		"description": "Die erste Versionsnummernkomponente der Variable CMAKE_VERSION."
	},
	"CMAKE_MAKE_PROGRAM": {
		"name": "CMAKE_MAKE_PROGRAM",
		"description": "Tool, mit dem das native Buildsystem gestartet werden kann. Der Wert ist möglicherweise der vollständige Pfad zur ausführbaren Datei oder nur der Toolname, wenn angenommen wird, dass er sich im PFAD befindet."
	},
	"CMAKE_MAP_IMPORTED_CONFIG_<CONFIG>": {
		"name": "CMAKE_MAP_IMPORTED_CONFIG_<CONFIG>",
		"description": "Der Standardwert für MAP_IMPORTED_CONFIG_ von Zielen."
	},
	"CMAKE_MATCH_COUNT": {
		"name": "CMAKE_MATCH_COUNT",
		"description": "Die Anzahl der Übereinstimmungen mit dem letzten regulären Ausdruck."
	},
	"CMAKE_MATCH_<n>": {
		"name": "CMAKE_MATCH_<n>",
		"description": "Erfassungsgruppe <n>, die mit dem letzten regulären Ausdruck abgeglichen wurde (Gruppen 0 bis 9). Gruppe 0 ist die gesamte Übereinstimmung. Die Gruppen 1 bis 9 sind Unterausdrücke, die von der ()-Syntax erfasst werden."
	},
	"CMAKE_MAXIMUM_RECURSION_DEPTH": {
		"name": "CMAKE_MAXIMUM_RECURSION_DEPTH",
		"description": "Die maximale Rekursionstiefe für CMake-Skripts. Diese Variable ist zur Festlegung mit -DCMAKE_MAXIMUM_RECURSION_DEPTH=<x> in der Befehlszeile oder zur Festlegung innerhalb von \"CMakeLists.txt\" durch Projekte vorgesehen, die eine große Rekursionstiefe erfordern. Projekte mit Festlegung dieser Variable sollten es dem Benutzer ermöglichen, die Variable zu überschreiben. Beispiel:"
	},
	"CMAKE_MESSAGE_CONTEXT": {
		"name": "CMAKE_MESSAGE_CONTEXT",
		"description": "Bei einer Aktivierung über die Befehlszeilenoption „cmake --log-context“ oder die Variable CMAKE_MESSAGE_CONTEXT_SHOW konvertiert der Befehl „message“ die CMAKE_MESSAGE_CONTEXT-Liste in eine durch Punkte getrennte und von eckigen Klammern umschlossene Zeichenfolge und stellt sie jeder Zeile für Meldungen der Protokollierungsstufen NOTICE und darunter voran."
	},
	"CMAKE_MESSAGE_CONTEXT_SHOW": {
		"name": "CMAKE_MESSAGE_CONTEXT_SHOW",
		"description": "Wenn diese Variable auf TRUE festgelegt wird, kann für jede durch den message-Befehl protokollierte Zeile ein Kontext angezeigt werden (Informationen zum Angeben des Kontexts selbst finden Sie unter CMAKE_MESSAGE_CONTEXT)."
	},
	"CMAKE_MESSAGE_INDENT": {
		"name": "CMAKE_MESSAGE_INDENT",
		"description": "Der Befehl \"message\" verknüpft die Zeichenfolgen aus dieser Liste und stellt für die Protokollebenen NOTICE und darunter die resultierende Zeichenfolge jeder Zeile der Meldung voran."
	},
	"CMAKE_MESSAGE_LOG_LEVEL": {
		"name": "CMAKE_MESSAGE_LOG_LEVEL",
		"description": "Sofern festgelegt, gibt diese Variable den vom Befehl „message“ verwendeten Protokolliergrad an. Gültige Werte sind die gleichen wie die für die Befehlszeilenoption „--log-level <cmake --log-level>“ des Programms cmake. Wenn diese Variable festgelegt und die Befehlszeilenoption „--log-level <cmake --log-level>“ angegeben ist, hat die Befehlszeilenoption Vorrang."
	},
	"CMAKE_MFC_FLAG": {
		"name": "CMAKE_MFC_FLAG",
		"description": "Hiermit wird die Verwendung der MFC-Bibliothek für eine ausführbare Datei oder DLL gesteuert."
	},
	"CMAKE_MINIMUM_REQUIRED_VERSION": {
		"name": "CMAKE_MINIMUM_REQUIRED_VERSION",
		"description": "Die <min>Version von CMake, die dem letzten Aufruf des Befehls cmake_minimum_required im aktuellen Variablenbereich oder einem übergeordneten Variablenbereich zugewiesen wurde."
	},
	"CMAKE_MINOR_VERSION": {
		"name": "CMAKE_MINOR_VERSION",
		"description": "Die zweite Versionsnummernkomponente der Variable CMAKE_VERSION."
	},
	"CMAKE_MODULE_LINKER_FLAGS": {
		"name": "CMAKE_MODULE_LINKER_FLAGS",
		"description": "Linkerflags zum Erstellen von Modulen."
	},
	"CMAKE_MODULE_LINKER_FLAGS_<CONFIG>": {
		"name": "CMAKE_MODULE_LINKER_FLAGS_<CONFIG>",
		"description": "Flags, die beim Verknüpfen eines Moduls verwendet werden."
	},
	"CMAKE_MODULE_LINKER_FLAGS_<CONFIG>_INIT": {
		"name": "CMAKE_MODULE_LINKER_FLAGS_<CONFIG>_INIT",
		"description": "Wert, mit dem der Cacheeintrag CMAKE_MODULE_LINKER_FLAGS_ beim erstmaligen Konfigurieren eines Buildbaums initialisiert wird. Diese Variable muss durch eine Toolkettendatei festgelegt werden. Je nach Umgebung und Zielplattform fügt CMake dem Wert am Anfang oder Ende Inhalte hinzu."
	},
	"CMAKE_MODULE_LINKER_FLAGS_INIT": {
		"name": "CMAKE_MODULE_LINKER_FLAGS_INIT",
		"description": "Wert, mit dem der Cacheeintrag CMAKE_MODULE_LINKER_FLAGS beim erstmaligen Konfigurieren eines Buildbaums initialisiert wird. Diese Variable muss durch eine Toolkettendatei festgelegt werden. Je nach Umgebung und Zielplattform fügt CMake dem Wert am Anfang oder Ende Inhalte hinzu."
	},
	"CMAKE_MODULE_PATH": {
		"name": "CMAKE_MODULE_PATH",
		"description": "Eine mittels Semikolons getrennte Liste mit Verzeichnissen, dargestellt mit Schrägstrichen, unter Angabe eines Suchpfads für CMake-Module, die von den Befehlen „include“ und „find_package“ vor dem Überprüfen der standardmäßig in CMake enthaltenen Module geladen werden. Die Liste ist standardmäßig leer und vom Projekt festzulegen."
	},
	"CMAKE_MSVCIDE_RUN_PATH": {
		"name": "CMAKE_MSVCIDE_RUN_PATH",
		"description": "Zusätzliche PATH-Speicherorte, die beim Ausführen von \"add_custom_command\" oder \"add_custom_target\" unter Verwendung des Generators von Visual Studio 12 2013 (oder höher). Hierdurch wird das Ausführen von Befehlen und Verwenden von DLLs ermöglicht, die der IDE-Umgebung nicht bekannt sind."
	},
	"CMAKE_MSVC_DEBUG_INFORMATION_FORMAT": {
		"name": "CMAKE_MSVC_DEBUG_INFORMATION_FORMAT",
		"description": "Wählen Sie das Format der Debuggen-Informationen für das Ziel MSVC-ABI aus. Mit dieser Variablen wird die Eigenschaft MSVC_DEBUG_INFORMATION_FORMAT für alle Ziele bei deren Erstellung initialisiert. Sie wird auch durch Aufrufe des Befehls „try_compile“ im Testprojekt weitergegeben."
	},
	"CMAKE_MSVC_RUNTIME_LIBRARY": {
		"name": "CMAKE_MSVC_RUNTIME_LIBRARY",
		"description": "Hiermit wird die MSVC-Laufzeitbibliothek für Compiler ausgewählt, die MSVC ABI als Ziel verwenden. Mit dieser Variablen wird die MSVC_RUNTIME_LIBRARY-Eigenschaft für alle Ziele bei deren Erstellung initialisiert. Sie wird auch durch Aufrufe des Befehls \"try_compile\" im Testprojekt weitergegeben."
	},
	"CMAKE_NETRC": {
		"name": "CMAKE_NETRC",
		"description": "Diese Variable wird verwendet, um die NETRC-Option für die Datei- und Dateibefehle zu initialisieren. Weitere Informationen finden Sie in \"Diese Befehle\"."
	},
	"CMAKE_NETRC_FILE": {
		"name": "CMAKE_NETRC_FILE",
		"description": "Diese Variable wird verwendet, um die NETRC_FILE Option für die Datei- und Dateibefehle zu initialisieren. Weitere Informationen finden Sie in \"Diese Befehle\"."
	},
	"CMAKE_NINJA_OUTPUT_PATH_PREFIX": {
		"name": "CMAKE_NINJA_OUTPUT_PATH_PREFIX",
		"description": "Weisen Sie die Ninja-Generatoren an, jedem Ausgabepfad in build.ninja ein Präfix hinzuzufügen. An das Präfix wird ein nachgestellter Schrägstrich angefügt, falls er fehlt."
	},
	"CMAKE_NOT_USING_CONFIG_FLAGS": {
		"name": "CMAKE_NOT_USING_CONFIG_FLAGS",
		"description": "Falls \"true\", werden _BUILD_TYPE-Flags übersprungen."
	},
	"CMAKE_NO_BUILTIN_CHRPATH": {
		"name": "CMAKE_NO_BUILTIN_CHRPATH",
		"description": "Verwenden Sie nicht den integrierten binären Editor, um Suchpfade der Laufzeitbibliothek bei der Installation zu korrigieren."
	},
	"CMAKE_NO_SYSTEM_FROM_IMPORTED": {
		"name": "CMAKE_NO_SYSTEM_FROM_IMPORTED",
		"description": "Der Standardwert für NO_SYSTEM_FROM_IMPORTED von Zielen."
	},
	"CMAKE_OBJCXX_EXTENSIONS": {
		"name": "CMAKE_OBJCXX_EXTENSIONS",
		"description": "Standardwert für OBJCXX_EXTENSIONS Zieleigenschaft, wenn beim Erstellen eines Ziels festgelegt."
	},
	"CMAKE_OBJCXX_STANDARD": {
		"name": "CMAKE_OBJCXX_STANDARD",
		"description": "Standardwert für OBJCXX_STANDARD Zieleigenschaft, wenn beim Erstellen eines Ziels festgelegt."
	},
	"CMAKE_OBJCXX_STANDARD_REQUIRED": {
		"name": "CMAKE_OBJCXX_STANDARD_REQUIRED",
		"description": "Standardwert für OBJCXX_STANDARD_REQUIRED Zieleigenschaft, wenn beim Erstellen eines Ziels festgelegt."
	},
	"CMAKE_OBJC_EXTENSIONS": {
		"name": "CMAKE_OBJC_EXTENSIONS",
		"description": "Standardwert für OBJC_EXTENSIONS Zieleigenschaft, wenn beim Erstellen eines Ziels festgelegt."
	},
	"CMAKE_OBJC_STANDARD": {
		"name": "CMAKE_OBJC_STANDARD",
		"description": "Standardwert für OBJC_STANDARD Zieleigenschaft, wenn beim Erstellen eines Ziels festgelegt."
	},
	"CMAKE_OBJC_STANDARD_REQUIRED": {
		"name": "CMAKE_OBJC_STANDARD_REQUIRED",
		"description": "Standardwert für OBJC_STANDARD_REQUIRED Zieleigenschaft, wenn beim Erstellen eines Ziels festgelegt."
	},
	"CMAKE_OBJECT_PATH_MAX": {
		"name": "CMAKE_OBJECT_PATH_MAX",
		"description": "Maximale Länge des vollständigen Objektdateipfads, die von nativ erstellten Tools zugelassen wird."
	},
	"CMAKE_OPTIMIZE_DEPENDENCIES": {
		"name": "CMAKE_OPTIMIZE_DEPENDENCIES",
		"description": "Initialisiert die OPTIMIZE_DEPENDENCIES-Eigenschaft des Ziels."
	},
	"CMAKE_OSX_ARCHITECTURES": {
		"name": "CMAKE_OSX_ARCHITECTURES",
		"description": "Zielspezifische Architekturen für macOS und iOS."
	},
	"CMAKE_OSX_DEPLOYMENT_TARGET": {
		"name": "CMAKE_OSX_DEPLOYMENT_TARGET",
		"description": "Geben Sie die Mindestversion der Zielplattform (z. B. macOS oder iOS) an, auf der die Zielbinärdateien bereitgestellt werden. CMake verwendet diesen Variablenwert für das Flag -mmacosx-version-min oder die entsprechenden Zielplattformentsprechungen. Bei älteren Xcode-Versionen mit mehreren macOS-SDKs erleichtert diese Variable auch die Auswahl des SDK, falls CMAKE_OSX_SYSROOT nicht gesetzt ist."
	},
	"CMAKE_OSX_SYSROOT": {
		"name": "CMAKE_OSX_SYSROOT",
		"description": "Geben Sie den Speicherort oder den Namen des zu verwendenden macOS-Plattform-SDK an. CMake verwendet diesen Wert, um den Wert des Flags -isysroot (oder entsprechend) zu berechnen und es den find_*-Befehlen zu ermöglichen, Dateien im SDK zu finden."
	},
	"CMAKE_PARENT_LIST_FILE": {
		"name": "CMAKE_PARENT_LIST_FILE",
		"description": "Der vollständige Pfad der CMake-Datei, die das aktuelle Element enthielt."
	},
	"CMAKE_PATCH_VERSION": {
		"name": "CMAKE_PATCH_VERSION",
		"description": "Die dritte Versionsnummernkomponente der Variable CMAKE_VERSION."
	},
	"CMAKE_PCH_INSTANTIATE_TEMPLATES": {
		"name": "CMAKE_PCH_INSTANTIATE_TEMPLATES",
		"description": "Mit dieser Variablen wird die PCH_INSTANTIATE_TEMPLATES-Eigenschaft für Ziele bei deren Erstellung initialisiert."
	},
	"CMAKE_PCH_WARN_INVALID": {
		"name": "CMAKE_PCH_WARN_INVALID",
		"description": "Mit dieser Variablen wird die PCH_WARN_INVALID-Eigenschaft für Ziele bei deren Erstellung initialisiert."
	},
	"CMAKE_PDB_OUTPUT_DIRECTORY": {
		"name": "CMAKE_PDB_OUTPUT_DIRECTORY",
		"description": "Ausgabeverzeichnis für MS-Debugsymbol-.pdb-Dateien, die vom Linker für die Ziele ausführbare Datei und freigegebene Bibliothek generiert werden."
	},
	"CMAKE_PDB_OUTPUT_DIRECTORY_<CONFIG>": {
		"name": "CMAKE_PDB_OUTPUT_DIRECTORY_<CONFIG>",
		"description": "Ausgabeverzeichnis (pro Konfiguration) für MS-Debugsymbol-.pdb-Dateien, die vom Linker für die Ziele ausführbare Datei und freigegebene Bibliothek generiert werden."
	},
	"CMAKE_PLATFORM_NO_VERSIONED_SONAME": {
		"name": "CMAKE_PLATFORM_NO_VERSIONED_SONAME",
		"description": "Diese Variable wird verwendet, um global zu steuern, ob die Zieleigenschaften VERSION und SOVERSION für gemeinsam genutzte Bibliotheken verwendet werden sollen. Bei Festlegung auf „true“ ist das Hinzufügen von Versionsinformationen zu jedem gemeinsam genutzten Bibliotheksziel deaktiviert."
	},
	"CMAKE_POLICY_DEFAULT_CMP<NNNN>": {
		"name": "CMAKE_POLICY_DEFAULT_CMP<NNNN>",
		"description": "Standardwert für CMake-Richtlinien-CMP<NNNN> (falls nicht gesetzt)."
	},
	"CMAKE_POLICY_WARNING_CMP<NNNN>": {
		"name": "CMAKE_POLICY_WARNING_CMP<NNNN>",
		"description": "Aktivieren oder deaktivieren Sie die Warnung explizit, wenn CMAke Policy CMP<NNNN> nicht explizit durch cmake_policy oder implizit durch cmake_minimum_required festgelegt wurde. Dies ist nur für Richtlinien sinnvoll, die nicht standardmäßig warnen:"
	},
	"CMAKE_POSITION_INDEPENDENT_CODE": {
		"name": "CMAKE_POSITION_INDEPENDENT_CODE",
		"description": "Standardwert für POSITION_INDEPENDENT_CODE von Zielen."
	},
	"CMAKE_PREFIX_PATH": {
		"name": "CMAKE_PREFIX_PATH",
		"description": "Eine mittels Semikolon getrennte Liste mit Verzeichnissen unter Angabe von Installationspräfixen, die von den Befehlen \"find_package\", \"find_program\", \"find_library\", \"find_file\" und \"find_path\" durchsucht werden. Jeder Befehl fügt wie in der zugehörigen Dokumentation angegeben entsprechende Unterverzeichnisse (z. B. \"bin\", \"lib\" oder \"include\") hinzu."
	},
	"CMAKE_PROGRAM_PATH": {
		"name": "CMAKE_PROGRAM_PATH",
		"description": "Eine mittels Semikolon getrennte Liste mit Verzeichnissen, die einen Suchpfads für den Befehl „find_program“ angeben. Die Liste ist standardmäßig leer und vom Projekt festzulegen."
	},
	"CMAKE_PROJECT_DESCRIPTION": {
		"name": "CMAKE_PROJECT_DESCRIPTION",
		"description": "Die Beschreibung des Projekts der obersten Ebene."
	},
	"CMAKE_PROJECT_HOMEPAGE_URL": {
		"name": "CMAKE_PROJECT_HOMEPAGE_URL",
		"description": "Die URL der Homepage des Projekts der obersten Ebene."
	},
	"CMAKE_PROJECT_INCLUDE": {
		"name": "CMAKE_PROJECT_INCLUDE",
		"description": "Eine CMake-Sprachdatei, die als letzter Schritt aller Projektbefehlsaufrufe eingeschlossen werden soll. Dies ist für das Injizieren von benutzerdefiniertem Code in Projektbuilds vorgesehen, ohne deren Quelle zu ändern. Eine ausführlichere Erläuterung der Dateien, die möglicherweise während eines Projektaufrufs enthalten sind, finden Sie unter „Code-Injektion“."
	},
	"CMAKE_PROJECT_INCLUDE_BEFORE": {
		"name": "CMAKE_PROJECT_INCLUDE_BEFORE",
		"description": "Eine CMake-Sprachdatei, die als erster Schritt aller Projektbefehlsaufrufe eingeschlossen werden soll. Dies ist für das Injizieren von benutzerdefiniertem Code in Projektbuilds vorgesehen, ohne deren Quelle zu ändern. Eine ausführlichere Erläuterung der Dateien, die möglicherweise während eines Projektaufrufs enthalten sind, finden Sie unter „Code-Injektion“."
	},
	"CMAKE_PROJECT_NAME": {
		"name": "CMAKE_PROJECT_NAME",
		"description": "Der Name des Projekts der obersten Ebene."
	},
	"CMAKE_PROJECT_<PROJECT-NAME>_INCLUDE": {
		"name": "CMAKE_PROJECT_<PROJECT-NAME>_INCLUDE",
		"description": "Eine CMake-Sprachdatei, die als letzter Schritt aller Projektbefehlsaufrufe eingeschlossen werden soll, die <PROJECT-NAME> als Projektnamen angeben. Dies ist für das Injizieren von benutzerdefiniertem Code in Projektbuilds vorgesehen, ohne deren Quelle zu ändern. Eine ausführlichere Erläuterung der Dateien, die möglicherweise während eines Projektaufrufs enthalten sind, finden Sie unter „Code-Injektion“."
	},
	"CMAKE_PROJECT_<PROJECT-NAME>_INCLUDE_BEFORE": {
		"name": "CMAKE_PROJECT_<PROJECT-NAME>_INCLUDE_BEFORE",
		"description": "Eine CMake-Sprachdatei, die als erster Schritt aller Projektbefehlsaufrufe eingeschlossen werden soll, die <PROJECT-NAME> als Projektnamen angeben. Dies ist für das Injizieren von benutzerdefiniertem Code in Projektbuilds vorgesehen, ohne deren Quelle zu ändern. Eine ausführlichere Erläuterung der Dateien, die möglicherweise während eines Projektaufrufs enthalten sind, finden Sie unter „Code-Injektion“."
	},
	"CMAKE_PROJECT_TOP_LEVEL_INCLUDES": {
		"name": "CMAKE_PROJECT_TOP_LEVEL_INCLUDES",
		"description": "Durch Semikolons getrennte Liste von CMake-Sprachdateien, die als Teil des ersten Projektaufrufs eingeschlossen werden sollen. Die Dateien werden unmittelbar nach dem Lesen der Toolkettendatei (sofern eine angegeben ist) und dem Festlegen von Plattformvariablen, aber vor der Aktivierung von Sprachen eingeschlossen. Daher werden sprachspezifische Variablen, z. B. CMAKE_<LANG>_COMPILER, möglicherweise nicht festgelegt. Eine ausführlichere Erläuterung der Dateien, die möglicherweise während eines Projektaufrufs enthalten sind, finden Sie unter „Code-Injektion“."
	},
	"CMAKE_PROJECT_VERSION": {
		"name": "CMAKE_PROJECT_VERSION",
		"description": "Die Version des Projekts der obersten Ebene."
	},
	"CMAKE_PROJECT_VERSION_MAJOR": {
		"name": "CMAKE_PROJECT_VERSION_MAJOR",
		"description": "Die Hauptversion des Projekts der obersten Ebene."
	},
	"CMAKE_PROJECT_VERSION_MINOR": {
		"name": "CMAKE_PROJECT_VERSION_MINOR",
		"description": "Die Nebenversion des Projekts der obersten Ebene."
	},
	"CMAKE_PROJECT_VERSION_PATCH": {
		"name": "CMAKE_PROJECT_VERSION_PATCH",
		"description": "Die Patchversion des Projekts der obersten Ebene."
	},
	"CMAKE_PROJECT_VERSION_TWEAK": {
		"name": "CMAKE_PROJECT_VERSION_TWEAK",
		"description": "Die Optimierungsversion des Projekts der obersten Ebene."
	},
	"CMAKE_RANLIB": {
		"name": "CMAKE_RANLIB",
		"description": "Der Name des Randomisierungstools für statische Bibliotheken."
	},
	"CMAKE_REQUIRE_FIND_PACKAGE_<PackageName>": {
		"name": "CMAKE_REQUIRE_FIND_PACKAGE_<PackageName>",
		"description": "Variable für find_package Aufruf ERFORDERLICH."
	},
	"CMAKE_ROOT": {
		"name": "CMAKE_ROOT",
		"description": "Installationsverzeichnis zum Ausführen von cmake."
	},
	"CMAKE_RULE_MESSAGES": {
		"name": "CMAKE_RULE_MESSAGES",
		"description": "Geben Sie an, ob für jede make-Regel eine Meldung gemeldet werden soll."
	},
	"CMAKE_RUNTIME_OUTPUT_DIRECTORY": {
		"name": "CMAKE_RUNTIME_OUTPUT_DIRECTORY",
		"description": "Gibt an, wo die RUNTIME-Zieldateien nach der Erstellung abgelegt werden."
	},
	"CMAKE_RUNTIME_OUTPUT_DIRECTORY_<CONFIG>": {
		"name": "CMAKE_RUNTIME_OUTPUT_DIRECTORY_<CONFIG>",
		"description": "Gibt an, wo alle RUNTIME-Zieldateien nach der Erstellung für eine bestimmte Konfiguration abgelegt werden."
	},
	"CMAKE_SCRIPT_MODE_FILE": {
		"name": "CMAKE_SCRIPT_MODE_FILE",
		"description": "Der vollständige Pfad zur cmake -P-Skriptdatei, die gerade verarbeitet wird."
	},
	"CMAKE_SHARED_LIBRARY_ENABLE_EXPORTS": {
		"name": "CMAKE_SHARED_LIBRARY_ENABLE_EXPORTS",
		"description": "Geben Sie an, ob die freigegebene Bibliothek eine Importdatei generiert."
	},
	"CMAKE_SHARED_LIBRARY_PREFIX": {
		"name": "CMAKE_SHARED_LIBRARY_PREFIX",
		"description": "Das Präfix für freigegebene Bibliotheken, zu denen Sie eine Verknüpfung herstellen."
	},
	"CMAKE_SHARED_LIBRARY_SUFFIX": {
		"name": "CMAKE_SHARED_LIBRARY_SUFFIX",
		"description": "Das Suffix für freigegebene Bibliotheken, zu denen Sie eine Verknüpfung herstellen."
	},
	"CMAKE_SHARED_LINKER_FLAGS": {
		"name": "CMAKE_SHARED_LINKER_FLAGS",
		"description": "Linkerflags zum Erstellen freigegebener Bibliotheken."
	},
	"CMAKE_SHARED_LINKER_FLAGS_<CONFIG>": {
		"name": "CMAKE_SHARED_LINKER_FLAGS_<CONFIG>",
		"description": "Flags zum Verknüpfen einer freigegebenen Bibliothek."
	},
	"CMAKE_SHARED_LINKER_FLAGS_<CONFIG>_INIT": {
		"name": "CMAKE_SHARED_LINKER_FLAGS_<CONFIG>_INIT",
		"description": "Wert, mit dem der Cacheeintrag CMAKE_SHARED_LINKER_FLAGS_ beim erstmaligen Konfigurieren eines Buildbaums initialisiert wird. Diese Variable muss durch eine Toolkettendatei festgelegt werden. Je nach Umgebung und Zielplattform fügt CMake dem Wert am Anfang oder Ende Inhalte hinzu."
	},
	"CMAKE_SHARED_LINKER_FLAGS_INIT": {
		"name": "CMAKE_SHARED_LINKER_FLAGS_INIT",
		"description": "Wert, mit dem der Cacheeintrag CMAKE_SHARED_LINKER_FLAGS beim erstmaligen Konfigurieren eines Buildbaums initialisiert wird. Diese Variable muss durch eine Toolkettendatei festgelegt werden. Je nach Umgebung und Zielplattform fügt CMake dem Wert am Anfang oder Ende Inhalte hinzu."
	},
	"CMAKE_SHARED_MODULE_PREFIX": {
		"name": "CMAKE_SHARED_MODULE_PREFIX",
		"description": "Das Präfix für ladbare Module, zu denen Sie eine Verknüpfung herstellen."
	},
	"CMAKE_SHARED_MODULE_SUFFIX": {
		"name": "CMAKE_SHARED_MODULE_SUFFIX",
		"description": "Das Suffix für freigegebene Bibliotheken, zu denen Sie eine Verknüpfung herstellen."
	},
	"CMAKE_SIZEOF_VOID_P": {
		"name": "CMAKE_SIZEOF_VOID_P",
		"description": "Größe eines void-Zeigers."
	},
	"CMAKE_SKIP_BUILD_RPATH": {
		"name": "CMAKE_SKIP_BUILD_RPATH",
		"description": "RPATHs nicht in den Buildbaum einschließen."
	},
	"CMAKE_SKIP_INSTALL_ALL_DEPENDENCY": {
		"name": "CMAKE_SKIP_INSTALL_ALL_DEPENDENCY",
		"description": "Heben Sie die Abhängigkeit des install-Ziels vom all-Ziel auf."
	},
	"CMAKE_SKIP_INSTALL_RPATH": {
		"name": "CMAKE_SKIP_INSTALL_RPATH",
		"description": "Schließen Sie RPATHs nicht in den Installationsbaum mit ein."
	},
	"CMAKE_SKIP_INSTALL_RULES": {
		"name": "CMAKE_SKIP_INSTALL_RULES",
		"description": "Legt fest, ob das Generieren von Installationsregeln deaktiviert wird."
	},
	"CMAKE_SKIP_RPATH": {
		"name": "CMAKE_SKIP_RPATH",
		"description": "Bei \"true\" keine Laufzeitpfadinformationen hinzufügen."
	},
	"CMAKE_SKIP_TEST_ALL_DEPENDENCY": {
		"name": "CMAKE_SKIP_TEST_ALL_DEPENDENCY",
		"description": "Hiermit wird gesteuert, ob das Testziel vom gesamten Ziel abhängig ist."
	},
	"CMAKE_SOURCE_DIR": {
		"name": "CMAKE_SOURCE_DIR",
		"description": "Der Pfad zur obersten Ebene des Quellbaums."
	},
	"CMAKE_STAGING_PREFIX": {
		"name": "CMAKE_STAGING_PREFIX",
		"description": "Diese Variable wird möglicherweise auf einen bei der Crosskompilierung zu installierenden Pfad gesetzt. Dies kann nützlich sein, wenn der Pfad in CMAKE_SYSROOT schreibgeschützt ist oder anderweitig nicht beeinflusst werden kann."
	},
	"CMAKE_STATIC_LIBRARY_PREFIX": {
		"name": "CMAKE_STATIC_LIBRARY_PREFIX",
		"description": "Das Präfix für statische Bibliotheken, zu denen Sie eine Verknüpfung herstellen."
	},
	"CMAKE_STATIC_LIBRARY_SUFFIX": {
		"name": "CMAKE_STATIC_LIBRARY_SUFFIX",
		"description": "Das Suffix für statische Bibliotheken, zu denen Sie eine Verknüpfung herstellen."
	},
	"CMAKE_STATIC_LINKER_FLAGS": {
		"name": "CMAKE_STATIC_LINKER_FLAGS",
		"description": "Flags, die zum Erstellen statischer Bibliotheken verwendet werden sollen. Diese Flags werden beim Erstellen einer statischen Bibliothek an das Archivierungsprogramm übergeben."
	},
	"CMAKE_STATIC_LINKER_FLAGS_<CONFIG>": {
		"name": "CMAKE_STATIC_LINKER_FLAGS_<CONFIG>",
		"description": "Flags, die zum Erstellen statischer Bibliotheken verwendet werden sollen. Diese Flags werden beim Erstellen einer statischen Bibliothek in der <CONFIG>-Konfiguration an das Archivierungsprogramm übergeben."
	},
	"CMAKE_STATIC_LINKER_FLAGS_<CONFIG>_INIT": {
		"name": "CMAKE_STATIC_LINKER_FLAGS_<CONFIG>_INIT",
		"description": "Wert, mit dem der Cacheeintrag CMAKE_STATIC_LINKER_FLAGS_ beim erstmaligen Konfigurieren eines Buildbaums initialisiert wird. Diese Variable muss durch eine Toolkettendatei festgelegt werden. Je nach Umgebung und Zielplattform fügt CMake dem Wert am Anfang oder Ende Inhalte hinzu."
	},
	"CMAKE_STATIC_LINKER_FLAGS_INIT": {
		"name": "CMAKE_STATIC_LINKER_FLAGS_INIT",
		"description": "Wert, mit dem der Cacheeintrag CMAKE_STATIC_LINKER_FLAGS beim erstmaligen Konfigurieren eines Buildbaums initialisiert wird. Diese Variable muss durch eine Toolkettendatei festgelegt werden. Je nach Umgebung und Zielplattform fügt CMake dem Wert am Anfang oder Ende Inhalte hinzu."
	},
	"CMAKE_SUBLIME_TEXT_2_ENV_SETTINGS": {
		"name": "CMAKE_SUBLIME_TEXT_2_ENV_SETTINGS",
		"description": "Diese Variable enthält eine Liste mit Umgebungsvariablen als Liste mit Token mit der Syntax \"var=value\"."
	},
	"CMAKE_SUBLIME_TEXT_2_EXCLUDE_BUILD_TREE": {
		"name": "CMAKE_SUBLIME_TEXT_2_EXCLUDE_BUILD_TREE",
		"description": "Wenn diese Variable am Ende der Datei \"CMakeLists.txt\" (oberste Ebene) ON ergibt, schließt der zusätzliche Generator Sublime Text 2 den Buildbaum aus \".sublime-project\" aus (falls innerhalb des Quellbaums)."
	},
	"CMAKE_SUPPRESS_REGENERATION": {
		"name": "CMAKE_SUPPRESS_REGENERATION",
		"description": "Ist CMAKE_SUPPRESS_REGENERATION auf OFF gesetzt, fügt CMake ein spezielles Ziel hinzu, von dem alle anderen Ziele abhängig sind. Dieses Ziel überprüft das Buildsystem und führt CMake optional erneut aus, um das Buildsystem bei einer Änderung der Zielspezifikation der Quelle erneut zu generieren."
	},
	"CMAKE_Swift_COMPILATION_MODE": {
		"name": "CMAKE_Swift_COMPILATION_MODE",
		"description": "Geben Sie an, wie Swift ein Ziel kompiliert. Diese Variable wird verwendet, um die Swift_COMPILATION_MODE Eigenschaft für Ziele während der Erstellung zu initialisieren."
	},
	"CMAKE_Swift_LANGUAGE_VERSION": {
		"name": "CMAKE_Swift_LANGUAGE_VERSION",
		"description": "Hiermit wird die Swift-Sprachversion festgelegt. Ohne Festlegung wird die älteste Legacyversion angenommen, die bekanntermaßen in der Xcode-Hostversion verfügbar ist:"
	},
	"CMAKE_Swift_MODULE_DIRECTORY": {
		"name": "CMAKE_Swift_MODULE_DIRECTORY",
		"description": "Hiermit wird das Swift-Modulausgabeverzeichnis angegeben."
	},
	"CMAKE_Swift_NUM_THREADS": {
		"name": "CMAKE_Swift_NUM_THREADS",
		"description": "Die Anzahl von Threads für die parallele Kompilierung von Swift-Zielen."
	},
	"CMAKE_SYSROOT": {
		"name": "CMAKE_SYSROOT",
		"description": "Pfad, der im --sysroot-Flag an den Compiler übergeben wird."
	},
	"CMAKE_SYSROOT_COMPILE": {
		"name": "CMAKE_SYSROOT_COMPILE",
		"description": "Pfad, der bei der Kompilierung von Quelldateien im --sysroot-Flag an den Compiler übergeben wird. Dies entspricht CMAKE_SYSROOT, dient jedoch nur dem Kompilieren von Quellen und nicht dem Verknüpfen."
	},
	"CMAKE_SYSROOT_LINK": {
		"name": "CMAKE_SYSROOT_LINK",
		"description": "Pfad, der beim Verknüpfen im --sysroot-Flag an den Compiler übergeben wird. Dies entspricht CMAKE_SYSROOT, dient jedoch nur dem Verknüpfen und nicht dem Kompilieren von Quellen."
	},
	"CMAKE_SYSTEM": {
		"name": "CMAKE_SYSTEM",
		"description": "Zusammengesetzter Name des Betriebssystems, für das CMake kompiliert."
	},
	"CMAKE_SYSTEM_APPBUNDLE_PATH": {
		"name": "CMAKE_SYSTEM_APPBUNDLE_PATH",
		"description": "Suchpfad für macOS-Anwendungsbundles, der von den Befehlen \"find_program\" und \"find_package\" verwendet wird. Er enthält standardmäßig die Standardverzeichnisse des aktuellen Systems. Eine Modifizierung durch das Projekt ist nicht vorgesehen. Nutzen Sie hierfür CMAKE_APPBUNDLE_PATH."
	},
	"CMAKE_SYSTEM_FRAMEWORK_PATH": {
		"name": "CMAKE_SYSTEM_FRAMEWORK_PATH",
		"description": "Suchpfad für macOS-Frameworks, der von den Befehlen \"find_library\", \"find_package\", \"find_path\" und \"find_file\" verwendet wird. Er enthält standardmäßig die Standardverzeichnisse des aktuellen Systems. Eine Modifizierung durch das Projekt ist nicht vorgesehen. Nutzen Sie hierfür CMAKE_FRAMEWORK_PATH."
	},
	"CMAKE_SYSTEM_IGNORE_PATH": {
		"name": "CMAKE_SYSTEM_IGNORE_PATH",
		"description": "Semikolon-getrennte Liste von Verzeichnissen, die von den verschiedenen find...()-Befehlen ignoriert werden sollen."
	},
	"CMAKE_SYSTEM_IGNORE_PREFIX_PATH": {
		"name": "CMAKE_SYSTEM_IGNORE_PREFIX_PATH",
		"description": "Semikolon-getrennte Liste von Suchpräfixen, die von den Befehlen find_program, find_library, find_file und find_path ignoriert werden sollen. Die Präfixe werden auch vom Konfigurationsmodus des Befehls find_package ignoriert (der Modulmodus ist davon nicht betroffen). Um stattdessen bestimmte Verzeichnisse zu ignorieren, siehe CMAKE_IGNORE_NONPREFIX_VAR."
	},
	"CMAKE_SYSTEM_INCLUDE_PATH": {
		"name": "CMAKE_SYSTEM_INCLUDE_PATH",
		"description": "Eine mittels Semikolon getrennte Liste mit Verzeichnissen unter Angabe eines Suchpfads für die Befehle \"find_file\" und \"find_path\". Standardmäßig sind die Standardverzeichnisse des aktuellen Systems enthalten. Eine Modifizierung durch das Projekt ist nicht vorgesehen. Nutzen Sie hierfür CMAKE_INCLUDE_PATH. Siehe auch CMAKE_SYSTEM_PREFIX_PATH."
	},
	"CMAKE_SYSTEM_LIBRARY_PATH": {
		"name": "CMAKE_SYSTEM_LIBRARY_PATH",
		"description": "Eine mittels Semikolon getrennte Liste mit Verzeichnissen unter Angabe eines Suchpfads für den Befehl \"find_library\". Standardmäßig sind die Standardverzeichnisse des aktuellen Systems enthalten. Eine Modifizierung durch das Projekt ist nicht vorgesehen. Nutzen Sie hierfür CMAKE_LIBRARY_PATH. Siehe auch CMAKE_SYSTEM_PREFIX_PATH."
	},
	"CMAKE_SYSTEM_NAME": {
		"name": "CMAKE_SYSTEM_NAME",
		"description": "Der Name des Betriebssystems, für das CMake Buildvorgänge durchführt. Siehe Variable CMAKE_SYSTEM_VERSION, um die Version des Betriebssystems zu erfahren."
	},
	"CMAKE_SYSTEM_PREFIX_PATH": {
		"name": "CMAKE_SYSTEM_PREFIX_PATH",
		"description": "Eine mittels Semikolon getrennte Liste mit Verzeichnissen unter Angabe von Installationspräfixen, die von den Befehlen \"find_package\", \"find_program\", \"find_library\", \"find_file\" und \"find_path\" durchsucht werden. Jeder Befehl fügt wie in der zugehörigen Dokumentation angegeben entsprechende Unterverzeichnisse (z. B. \"bin\", \"lib\" oder \"include\") hinzu."
	},
	"CMAKE_SYSTEM_PROCESSOR": {
		"name": "CMAKE_SYSTEM_PROCESSOR",
		"description": "Wenn keine Crosskompilierung ausgeführt wird, weist diese Variable den gleichen Wert wie die Variable CMAKE_HOST_SYSTEM_PROCESSOR auf. In vielen Fällen entspricht dies der Zielarchitektur für den Build, dies ist jedoch nicht unbedingt der Fall. (Unter Windows kann der Host beispielsweise auch dann AMD64 aufweisen, wenn ein MSVC-cl-Compiler mit einem 32-Bit-Ziel verwendet wird.)"
	},
	"CMAKE_SYSTEM_PROGRAM_PATH": {
		"name": "CMAKE_SYSTEM_PROGRAM_PATH",
		"description": "Eine mittels Semikolon getrennte Liste mit Verzeichnissen unter Angabe eines Suchpfads für den Befehl \"find_program\". Standardmäßig sind die Standardverzeichnisse des aktuellen Systems enthalten. Eine Modifizierung durch das Projekt ist nicht vorgesehen. Nutzen Sie hierfür CMAKE_PROGRAM_PATH. Siehe auch CMAKE_SYSTEM_PREFIX_PATH."
	},
	"CMAKE_SYSTEM_VERSION": {
		"name": "CMAKE_SYSTEM_VERSION",
		"description": "Die Version des Betriebssystems, für das CMake Buildvorgänge durchführt. Siehe Variable CMAKE_SYSTEM_NAME, um die Version des Betriebssystems zu erfahren."
	},
	"CMAKE_TASKING_TOOLSET": {
		"name": "CMAKE_TASKING_TOOLSET",
		"description": "Wählen Sie das Aufgabentoolset aus, das den Compiler bereitstellt."
	},
	"CMAKE_TEST_LAUNCHER": {
		"name": "CMAKE_TEST_LAUNCHER",
		"description": "Diese Variable wird verwendet, um die TEST_LAUNCHER Zieleigenschaft ausführbarer Ziele beim Erstellen zu initialisieren. Hiermit wird ein Startprogramm zum Ausführen von Tests angegeben, das durch den Befehl \"add_test\" hinzugefügt wird und auf dem ein ausführbares Ziel ausgeführt wird."
	},
	"CMAKE_TLS_CAINFO": {
		"name": "CMAKE_TLS_CAINFO",
		"description": "Geben Sie den Standardwert für die TLS_CAINFO Optionen der Datei- und Dateibefehle an. Die Festlegung ist standardmäßig aufgehoben."
	},
	"CMAKE_TLS_VERIFY": {
		"name": "CMAKE_TLS_VERIFY",
		"description": "Geben Sie den Standardwert für die TLS_VERIFY Optionen für Datei-und Dateibefehle an. Wenn diese Variable nicht festgelegt ist, überprüfen die Befehle die Umgebungsvariable CMAKE_TLS_VERIFY. Wenn keines festgelegt ist, ist der Standardwert deaktiviert."
	},
	"CMAKE_TLS_VERSION": {
		"name": "CMAKE_TLS_VERSION",
		"description": "Geben Sie den Standardwert für die TLS_VERSION Optionen für Datei-und Dateibefehle an. Wenn diese Variable nicht festgelegt ist, überprüfen die Befehle die Umgebungsvariable CMAKE_TLS_VERSION."
	},
	"CMAKE_TOOLCHAIN_FILE": {
		"name": "CMAKE_TOOLCHAIN_FILE",
		"description": "Der für cmake bereitgestellte Pfad zur Toolkettendatei."
	},
	"CMAKE_TRY_COMPILE_CONFIGURATION": {
		"name": "CMAKE_TRY_COMPILE_CONFIGURATION",
		"description": "Buildkonfiguration für try_compile- und try_run-Projekte."
	},
	"CMAKE_TRY_COMPILE_NO_PLATFORM_VARIABLES": {
		"name": "CMAKE_TRY_COMPILE_NO_PLATFORM_VARIABLES",
		"description": "Wird auf einen Wert WAHR festgelegt, um den Befehl „try_compile“ anzuweisen, keine Plattformvariablen an das Testprojekt zu verteilen."
	},
	"CMAKE_TRY_COMPILE_PLATFORM_VARIABLES": {
		"name": "CMAKE_TRY_COMPILE_PLATFORM_VARIABLES",
		"description": "Liste mit Variablen, die die Quelldateisignatur des Befehls \"try_compile\" im Testprojekt verteilen muss, um die gleiche Plattform wie beim Hostprojekt als Ziel anzugeben."
	},
	"CMAKE_TRY_COMPILE_TARGET_TYPE": {
		"name": "CMAKE_TRY_COMPILE_TARGET_TYPE",
		"description": "Zieltyp, der mittels Quelldateisignatur für try_compile-Aufrufe generiert wird. Gültige Werte sind:"
	},
	"CMAKE_TWEAK_VERSION": {
		"name": "CMAKE_TWEAK_VERSION",
		"description": "Auf \"0\" gesetzt, um eine Kompatibilität mit Code zu erzielen, der für ältere Versionen von CMake (mit möglicherweise höher definierten Werten) geschrieben wurde."
	},
	"CMAKE_UNITY_BUILD": {
		"name": "CMAKE_UNITY_BUILD",
		"description": "Mit dieser Variablen wird die UNITY_BUILD-Eigenschaft für Ziele bei deren Erstellung initialisiert. Durch eine Festlegung auf TRUE wird die Batchkompilierung mehrerer Quellen innerhalb jedes Ziels aktiviert. Dieses Feature wird als Unity- oder Jumbo-Build bezeichnet."
	},
	"CMAKE_UNITY_BUILD_BATCH_SIZE": {
		"name": "CMAKE_UNITY_BUILD_BATCH_SIZE",
		"description": "Mit dieser Variablen wird die UNITY_BUILD-Eigenschaft für Ziele bei deren Erstellung initialisiert. Sie gibt die standardmäßige Obergrenze für die Anzahl von Quelldateien an, die bei der Aktivierung von Unity-Builds für ein Ziel in einer einzigen Unity-Quelldatei kombiniert werden können."
	},
	"CMAKE_UNITY_BUILD_UNIQUE_ID": {
		"name": "CMAKE_UNITY_BUILD_UNIQUE_ID",
		"description": "Mit dieser Variablen wird die UNITY_BUILD_UNIQUE_ID-Eigenschaft für Ziele bei deren Erstellung initialisiert. Sie gibt den Namen des eindeutigen Bezeichners an, der für jede Datei in einem Unity-Build generiert wird."
	},
	"CMAKE_USER_MAKE_RULES_OVERRIDE": {
		"name": "CMAKE_USER_MAKE_RULES_OVERRIDE",
		"description": "Geben Sie eine CMake-Datei an, mit der die Plattforminformationen überschrieben werden."
	},
	"CMAKE_USER_MAKE_RULES_OVERRIDE_<LANG>": {
		"name": "CMAKE_USER_MAKE_RULES_OVERRIDE_<LANG>",
		"description": "Geben Sie eine CMake-Datei an, mit der die Plattforminformationen für <LANG> überschrieben werden."
	},
	"CMAKE_USE_RELATIVE_PATHS": {
		"name": "CMAKE_USE_RELATIVE_PATHS",
		"description": "Diese Variable hat keine Auswirkungen. Die in früheren Versionen teilweise zu beobachtenden Auswirkungen wurden in CMake 3.4 entfernt."
	},
	"CMAKE_VERBOSE_MAKEFILE": {
		"name": "CMAKE_VERBOSE_MAKEFILE",
		"description": "Aktivieren Sie die ausführliche Ausgabe von Makefile-Builds."
	},
	"CMAKE_VERIFY_INTERFACE_HEADER_SETS": {
		"name": "CMAKE_VERIFY_INTERFACE_HEADER_SETS",
		"description": "Diese Variable wird verwendet, um die VERIFY_INTERFACE_HEADER_SETS-Eigenschaft von Zielen zu initialisieren, wenn sie erstellt werden. Wenn sie auf WAHR festgelegt wird, wird die Überprüfung des Headersatzes aktiviert."
	},
	"CMAKE_VERSION": {
		"name": "CMAKE_VERSION",
		"description": "Die CMake-Versionszeichenfolge in Form von drei nicht-negativen ganzzahligen Komponenten, getrennt durch \".\" und möglicherweise gefolgt von \"-\" und anderen Informationen. Die ersten beiden Komponenten repräsentieren die Featureebene, während die dritte Komponente entweder eine Fehlerkorrekturebene oder ein Entwicklungsdatum darstellt."
	},
	"CMAKE_VISIBILITY_INLINES_HIDDEN": {
		"name": "CMAKE_VISIBILITY_INLINES_HIDDEN",
		"description": "Standardwert der Zieleigenschaft VISIBILITY_INLINES_HIDDEN, wenn ein Ziel erstellt wird."
	},
	"CMAKE_VS_DEBUGGER_COMMAND": {
		"name": "CMAKE_VS_DEBUGGER_COMMAND",
		"description": "Diese Variable wird verwendet, um die VS_DEBUGGER_COMMAND-Eigenschaft für jedes Ziel zu initialisieren, während sie erstellt wird. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_VS_DEBUGGER_COMMAND_ARGUMENTS": {
		"name": "CMAKE_VS_DEBUGGER_COMMAND_ARGUMENTS",
		"description": "Diese Variable wird verwendet, um die VS_DEBUGGER_COMMAND_ARGUMENTS-Eigenschaft für jedes Ziel zu initialisieren, während sie erstellt wird. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_VS_DEBUGGER_ENVIRONMENT": {
		"name": "CMAKE_VS_DEBUGGER_ENVIRONMENT",
		"description": "Diese Variable wird verwendet, um die VS_DEBUGGER_ENVIRONMENT-Eigenschaft für jedes Ziel zu initialisieren, während sie erstellt wird. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_VS_DEBUGGER_WORKING_DIRECTORY": {
		"name": "CMAKE_VS_DEBUGGER_WORKING_DIRECTORY",
		"description": "Diese Variable wird verwendet, um die VS_DEBUGGER_WORKING_DIRECTORY-Eigenschaft für jedes Ziel zu initialisieren, während sie erstellt wird. Schlagen Sie unter dieser Zieleigenschaft nach, um weitere Informationen zu erhalten."
	},
	"CMAKE_VS_DEVENV_COMMAND": {
		"name": "CMAKE_VS_DEVENV_COMMAND",
		"description": "Die Generatoren für Visual Studio 12 2013 und höher setzen diese Variable auf den Befehl \"devenv.com\", der mit der entsprechenden Version von Visual Studio installiert ist. Bei Editionen von Visual Studio Express ist diese Variable möglicherweise leer, weil dieses Tool nicht bereitgestellt wird."
	},
	"CMAKE_VS_GLOBALS": {
		"name": "CMAKE_VS_GLOBALS",
		"description": "Liste mit Key=Value-Datensätzen, die pro Ziel als Zieleigenschaften VS_GLOBAL_ mit \"variable=Key\" und dem Wert \"Value\" gesetzt werden."
	},
	"CMAKE_VS_INCLUDE_INSTALL_TO_DEFAULT_BUILD": {
		"name": "CMAKE_VS_INCLUDE_INSTALL_TO_DEFAULT_BUILD",
		"description": "Schließen Sie das INSTALL-Ziel in den Standardbuild mit ein."
	},
	"CMAKE_VS_INCLUDE_PACKAGE_TO_DEFAULT_BUILD": {
		"name": "CMAKE_VS_INCLUDE_PACKAGE_TO_DEFAULT_BUILD",
		"description": "Schließen Sie das PACKAGE-Ziel in den Standardbuild mit ein."
	},
	"CMAKE_VS_INTEL_Fortran_PROJECT_VERSION": {
		"name": "CMAKE_VS_INTEL_Fortran_PROJECT_VERSION",
		"description": "Beim Generieren für Visual Studio 12 2013 oder höher mit installiertem Intel Fortran-Plug-In wird hierüber die Dateiformatversion des .vfproj-Projekts angegeben. Dies ist für die interne Verwendung durch CMake vorgesehen und darf nicht vom Projektcode verwendet werden."
	},
	"CMAKE_VS_JUST_MY_CODE_DEBUGGING": {
		"name": "CMAKE_VS_JUST_MY_CODE_DEBUGGING",
		"description": "Hiermit wird nur eigener Code mit dem Visual Studio-Debugger aktiviert."
	},
	"CMAKE_VS_MSBUILD_COMMAND": {
		"name": "CMAKE_VS_MSBUILD_COMMAND",
		"description": "Die Generatoren für Visual Studio 12 2013 und höher setzen diese Variable auf den Befehl „MSBuild.exe“, der mit der entsprechenden Version von Visual Studio installiert wird."
	},
	"CMAKE_VS_NO_COMPILE_BATCHING": {
		"name": "CMAKE_VS_NO_COMPILE_BATCHING",
		"description": "Deaktivieren Sie die Batchverarbeitung für das Kompilieren, wenn Sie Visual Studio-Generatoren verwenden."
	},
	"CMAKE_VS_NsightTegra_VERSION": {
		"name": "CMAKE_VS_NsightTegra_VERSION",
		"description": "Wenn beim Verwenden eines Visual Studio-Generators die Variable CMAKE_SYSTEM_NAME auf Android festgelegt ist, enthält diese Variable die Versionsnummer der installierten NVIDIA Nsight Tegra Visual Studio Edition."
	},
	"CMAKE_VS_NUGET_PACKAGE_RESTORE": {
		"name": "CMAKE_VS_NUGET_PACKAGE_RESTORE",
		"description": "Bei Verwendung eines Visual Studio-Generators steuert diese Cache-Variable, ob msbuild automatisch versuchen soll, NuGet-Pakete vor einem Build wiederherzustellen. NuGet-Pakete können mithilfe der VS_PACKAGE_REFERENCES-Eigenschaft auf einem Ziel definiert werden. Wenn keine Paketreferenzen definiert sind, hat diese Einstellung keine Auswirkung."
	},
	"CMAKE_VS_PLATFORM_NAME": {
		"name": "CMAKE_VS_PLATFORM_NAME",
		"description": "Der Name der Visual Studio-Zielplattform, die vom aktuellen Generator verwendet wird."
	},
	"CMAKE_VS_PLATFORM_NAME_DEFAULT": {
		"name": "CMAKE_VS_PLATFORM_NAME_DEFAULT",
		"description": "Standardwert für den Namen der Visual Studio-Zielplattform, die vom aktuellen Generator verwendet wird. Der Wert der Variablen CMAKE_GENERATOR_PLATFORM wird nicht berücksichtigt. Für Visual Studio-Generatoren für VS 2017 und niedriger ist dies immer Win32. Für VS 2019 und höher basiert dieser Wert auf der Hostplattform."
	},
	"CMAKE_VS_PLATFORM_TOOLSET": {
		"name": "CMAKE_VS_PLATFORM_TOOLSET",
		"description": "Name des Toolsets für Visual Studio."
	},
	"CMAKE_VS_PLATFORM_TOOLSET_CUDA": {
		"name": "CMAKE_VS_PLATFORM_TOOLSET_CUDA",
		"description": "Die Version des NVIDIA CUDA-Toolkits, deren Visual Studio-Toolset zu verwenden ist."
	},
	"CMAKE_VS_PLATFORM_TOOLSET_CUDA_CUSTOM_DIR": {
		"name": "CMAKE_VS_PLATFORM_TOOLSET_CUDA_CUSTOM_DIR",
		"description": "Der Pfad zum eigenständigen NVIDIA CUDA-Toolkit (z. B. extrahiert aus dem Installer)."
	},
	"CMAKE_VS_PLATFORM_TOOLSET_FORTRAN": {
		"name": "CMAKE_VS_PLATFORM_TOOLSET_FORTRAN",
		"description": "Der Fortrancompiler, der von Visual Studio Projekten verwendet werden soll."
	},
	"CMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE": {
		"name": "CMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE",
		"description": "Die für Visual Studio bevorzugte Toolarchitektur."
	},
	"CMAKE_VS_PLATFORM_TOOLSET_VERSION": {
		"name": "CMAKE_VS_PLATFORM_TOOLSET_VERSION",
		"description": "Version des Toolsets für die Visual Studio-Plattform."
	},
	"CMAKE_VS_SDK_EXCLUDE_DIRECTORIES": {
		"name": "CMAKE_VS_SDK_EXCLUDE_DIRECTORIES",
		"description": "Diese Variable ermöglicht das Überschreiben von Exclude-Standardverzeichnissen von Visual Studio."
	},
	"CMAKE_VS_SDK_EXECUTABLE_DIRECTORIES": {
		"name": "CMAKE_VS_SDK_EXECUTABLE_DIRECTORIES",
		"description": "Diese Variable ermöglicht das Überschreiben von Executable-Standardverzeichnissen von Visual Studio."
	},
	"CMAKE_VS_SDK_INCLUDE_DIRECTORIES": {
		"name": "CMAKE_VS_SDK_INCLUDE_DIRECTORIES",
		"description": "Diese Variable ermöglicht Überschreiben von Include-Standardverzeichnissen von Visual Studio."
	},
	"CMAKE_VS_SDK_LIBRARY_DIRECTORIES": {
		"name": "CMAKE_VS_SDK_LIBRARY_DIRECTORIES",
		"description": "Diese Variable ermöglicht das Überschreiben von Standardbibliotheksverzeichnissen von Visual Studio."
	},
	"CMAKE_VS_SDK_LIBRARY_WINRT_DIRECTORIES": {
		"name": "CMAKE_VS_SDK_LIBRARY_WINRT_DIRECTORIES",
		"description": "Diese Variable ermöglicht das Überschreiben von WinRT-Standardbibliotheksverzeichnissen von Visual Studio."
	},
	"CMAKE_VS_SDK_REFERENCE_DIRECTORIES": {
		"name": "CMAKE_VS_SDK_REFERENCE_DIRECTORIES",
		"description": "Diese Variable ermöglicht das Überschreiben von Standardverweisverzeichnissen von Visual Studio."
	},
	"CMAKE_VS_SDK_SOURCE_DIRECTORIES": {
		"name": "CMAKE_VS_SDK_SOURCE_DIRECTORIES",
		"description": "Diese Variable ermöglicht das Überschreiben von Standardquellverzeichnissen von Visual Studio."
	},
	"CMAKE_VS_TARGET_FRAMEWORK_IDENTIFIER": {
		"name": "CMAKE_VS_TARGET_FRAMEWORK_IDENTIFIER",
		"description": "Visual Studio Zielframeworkbezeichner."
	},
	"CMAKE_VS_TARGET_FRAMEWORK_TARGETS_VERSION": {
		"name": "CMAKE_VS_TARGET_FRAMEWORK_TARGETS_VERSION",
		"description": "Visual Studio Zielframework-Zielversion."
	},
	"CMAKE_VS_TARGET_FRAMEWORK_VERSION": {
		"name": "CMAKE_VS_TARGET_FRAMEWORK_VERSION",
		"description": "Visual Studio Zielframeworkversion."
	},
	"CMAKE_VS_USE_DEBUG_LIBRARIES": {
		"name": "CMAKE_VS_USE_DEBUG_LIBRARIES",
		"description": "Geben Sie für Visual Studio-Generatoren an, welche Konfigurationen als Debugkonfigurationen betrachtet werden. Hiermit wird die Einstellung \"UseDebugLibraries\" in jeder Konfiguration einer .vcxproj Datei gesteuert."
	},
	"CMAKE_VS_VERSION_BUILD_NUMBER": {
		"name": "CMAKE_VS_VERSION_BUILD_NUMBER",
		"description": "Visual Studio-Version."
	},
	"CMAKE_VS_WINDOWS_TARGET_PLATFORM_MIN_VERSION": {
		"name": "CMAKE_VS_WINDOWS_TARGET_PLATFORM_MIN_VERSION",
		"description": "Weisen Sie Visual Studio-Generatoren an, die angegebene Mindestversion der Windows-Zielplattform zu verwenden."
	},
	"CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION": {
		"name": "CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION",
		"description": "Visual Studio: Windows-Zielplattformversion"
	},
	"CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION_MAXIMUM": {
		"name": "CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION_MAXIMUM",
		"description": "Hiermit wird die maximal zulässige Windows 10 SDK-Version für VS 2015 und höher überschrieben."
	},
	"CMAKE_VS_WINRT_BY_DEFAULT": {
		"name": "CMAKE_VS_WINRT_BY_DEFAULT",
		"description": "Hiermit werden Visual Studio-Generatoren für VS 2010 und höher darüber informiert, dass die Zielplattform standardmäßig eine WinRT-Kompilierung aktiviert und diese explizit deaktiviert werden muss, wenn /ZW oder VS_WINRT_COMPONENT ausgelassen wird (im Gegensatz zur Aktivierung, wenn eine dieser Optionen vorhanden ist)."
	},
	"CMAKE_WARN_DEPRECATED": {
		"name": "CMAKE_WARN_DEPRECATED",
		"description": "Legt fest, ob aufgrund veralteter Funktionen Warnmeldungen angezeigt werden."
	},
	"CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION": {
		"name": "CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION",
		"description": "Das Skript \"cmake_install.cmake\" veranlassen, einen Warnhinweis anzuzeigen, wenn eine Datei mit einem absoluten Wert für INSTALL DESTINATION gefunden wird."
	},
	"CMAKE_WATCOM_RUNTIME_LIBRARY": {
		"name": "CMAKE_WATCOM_RUNTIME_LIBRARY",
		"description": "Wählen Sie die Watcom-Laufzeitbibliothek für die Verwendung durch Compiler aus, welche die Watcom-ABI als Ziel verwenden. Mit dieser Variablen wird die WATCOM_RUNTIME_LIBRARY-Eigenschaft für alle Ziele bei deren Erstellung initialisiert. Sie wird auch durch Aufrufe des Befehls „try_compile“ im Testprojekt weitergegeben."
	},
	"CMAKE_WIN32_EXECUTABLE": {
		"name": "CMAKE_WIN32_EXECUTABLE",
		"description": "Standardwert für WIN32_EXECUTABLE von Zielen."
	},
	"CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS": {
		"name": "CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS",
		"description": "Standardwert der Zieleigenschaft WINDOWS_EXPORT_ALL_SYMBOLS. Mit dieser Variable wird die Eigenschaft während des Erstellens auf allen Zielen initialisiert."
	},
	"CMAKE_XCODE_ATTRIBUTE_<an-attribute>": {
		"name": "CMAKE_XCODE_ATTRIBUTE_<an-attribute>",
		"description": "Legen Sie die Attribute eines Xcode-Ziels direkt fest."
	},
	"CMAKE_XCODE_BUILD_SYSTEM": {
		"name": "CMAKE_XCODE_BUILD_SYSTEM",
		"description": "Auswahl des Xcode-Buildsystems."
	},
	"CMAKE_XCODE_GENERATE_SCHEME": {
		"name": "CMAKE_XCODE_GENERATE_SCHEME",
		"description": "Wenn diese Variable aktiviert ist, generiert der Xcode-Generator Schemadateien. Diese sind nützlich, um Aktionen über die Befehlszeile aufzurufen, zu analysieren, zu archivieren, zu Testzwecken zu erstellen und zu testen."
	},
	"CMAKE_XCODE_GENERATE_TOP_LEVEL_PROJECT_ONLY": {
		"name": "CMAKE_XCODE_GENERATE_TOP_LEVEL_PROJECT_ONLY",
		"description": "Ist diese Einstellung aktiviert, generiert der Xcode-Generator nur eine Xcode-Projektdatei für den obersten project()-Befehl, anstatt für jeden project()-Befehl eine solche Datei zu generieren."
	},
	"CMAKE_XCODE_LINK_BUILD_PHASE_MODE": {
		"name": "CMAKE_XCODE_LINK_BUILD_PHASE_MODE",
		"description": "Mit dieser Variablen wird die XCODE_LINK_BUILD_PHASE_MODE-Eigenschaft für Ziele initialisiert. Sie wirkt sich auf die Methoden aus, die vom Xcode-Generator zum Verknüpfen verschiedener Arten von Bibliotheken verwendet werden. Der Standardwert lautet NONE."
	},
	"CMAKE_XCODE_PLATFORM_TOOLSET": {
		"name": "CMAKE_XCODE_PLATFORM_TOOLSET",
		"description": "Auswahl des Compilers für Xcode."
	},
	"CMAKE_XCODE_SCHEME_ADDRESS_SANITIZER": {
		"name": "CMAKE_XCODE_SCHEME_ADDRESS_SANITIZER",
		"description": "Legt fest, ob im Diagnoseabschnitt des generierten Xcode-Schemas \"Address Sanitizer\" aktiviert wird."
	},
	"CMAKE_XCODE_SCHEME_ADDRESS_SANITIZER_USE_AFTER_RETURN": {
		"name": "CMAKE_XCODE_SCHEME_ADDRESS_SANITIZER_USE_AFTER_RETURN",
		"description": "Legt fest, ob im Diagnoseabschnitt des generierten Xcode-Schemas \"Detect use of stack after return\" aktiviert wird."
	},
	"CMAKE_XCODE_SCHEME_DEBUG_DOCUMENT_VERSIONING": {
		"name": "CMAKE_XCODE_SCHEME_DEBUG_DOCUMENT_VERSIONING",
		"description": "Gibt an, ob bei Verwendung des Dokumentversionsbrowsers im Abschnitt mit den Optionen des generierten Xcode-Schemas die Einstellung zum Zulassen des Debuggens aktiviert wird."
	},
	"CMAKE_XCODE_SCHEME_DISABLE_MAIN_THREAD_CHECKER": {
		"name": "CMAKE_XCODE_SCHEME_DISABLE_MAIN_THREAD_CHECKER",
		"description": "Legt fest, ob \"Main Thread Checker\" im Abschnitt \"Diagnostics\" des generierten Xcode-Schemas deaktiviert wird."
	},
	"CMAKE_XCODE_SCHEME_DYNAMIC_LIBRARY_LOADS": {
		"name": "CMAKE_XCODE_SCHEME_DYNAMIC_LIBRARY_LOADS",
		"description": "Legt fest, ob im Diagnoseabschnitt des generierten Xcode-Schemas \"Dynamic Library Loads\" aktiviert wird."
	},
	"CMAKE_XCODE_SCHEME_DYNAMIC_LINKER_API_USAGE": {
		"name": "CMAKE_XCODE_SCHEME_DYNAMIC_LINKER_API_USAGE",
		"description": "Legt fest, ob im Diagnoseabschnitt des generierten Xcode-Schemas \"Dynamic Linker API usage\" aktiviert wird."
	},
	"CMAKE_XCODE_SCHEME_ENABLE_GPU_API_VALIDATION": {
		"name": "CMAKE_XCODE_SCHEME_ENABLE_GPU_API_VALIDATION",
		"description": "Eigenschaftswert für Metal: API-Validierung im Abschnitt „Optionen“ des generierten Xcode-Schemas."
	},
	"CMAKE_XCODE_SCHEME_ENABLE_GPU_FRAME_CAPTURE_MODE": {
		"name": "CMAKE_XCODE_SCHEME_ENABLE_GPU_FRAME_CAPTURE_MODE",
		"description": "Eigenschaftswert für die GPU-Frame-Erfassung im Abschnitt „Optionen“ des generierten Xcode-Schemas. Beispielwerte sind Metal und Disabled."
	},
	"CMAKE_XCODE_SCHEME_ENABLE_GPU_SHADER_VALIDATION": {
		"name": "CMAKE_XCODE_SCHEME_ENABLE_GPU_SHADER_VALIDATION",
		"description": "Eigenschaftswert für Metal: Shader-Validierung im Abschnitt „Optionen“ des generierten Xcode-Schemas."
	},
	"CMAKE_XCODE_SCHEME_ENVIRONMENT": {
		"name": "CMAKE_XCODE_SCHEME_ENVIRONMENT",
		"description": "Geben Sie Umgebungsvariablen an, die dem Argumentenabschnitt des generierten Xcode-Schemas hinzugefügt werden."
	},
	"CMAKE_XCODE_SCHEME_GUARD_MALLOC": {
		"name": "CMAKE_XCODE_SCHEME_GUARD_MALLOC",
		"description": "Legt fest, ob im Diagnoseabschnitt des generierten Xcode-Schemas \"Guard Malloc\" aktiviert wird."
	},
	"CMAKE_XCODE_SCHEME_LAUNCH_CONFIGURATION": {
		"name": "CMAKE_XCODE_SCHEME_LAUNCH_CONFIGURATION",
		"description": "Legen Sie die Buildkonfiguration fest, um das Ziel auszuführen."
	},
	"CMAKE_XCODE_SCHEME_LAUNCH_MODE": {
		"name": "CMAKE_XCODE_SCHEME_LAUNCH_MODE",
		"description": "Eigenschaftswert für Start im Abschnitt „Info“ des generierten Xcode-Schemas."
	},
	"CMAKE_XCODE_SCHEME_MAIN_THREAD_CHECKER_STOP": {
		"name": "CMAKE_XCODE_SCHEME_MAIN_THREAD_CHECKER_STOP",
		"description": "Legt fest, ob im Abschnitt \"Diagnostics\" des generierten Xcode-Schemas bei Problemen die Main Thread Checker-Option \"Pause\" aktiviert wird."
	},
	"CMAKE_XCODE_SCHEME_MALLOC_GUARD_EDGES": {
		"name": "CMAKE_XCODE_SCHEME_MALLOC_GUARD_EDGES",
		"description": "Legt fest, ob im Diagnoseabschnitt des generierten Xcode-Schemas \"Malloc Guard Edges\" aktiviert wird."
	},
	"CMAKE_XCODE_SCHEME_MALLOC_SCRIBBLE": {
		"name": "CMAKE_XCODE_SCHEME_MALLOC_SCRIBBLE",
		"description": "Legt fest, ob im Diagnoseabschnitt des generierten Xcode-Schemas \"Malloc Scribble\" aktiviert wird."
	},
	"CMAKE_XCODE_SCHEME_MALLOC_STACK": {
		"name": "CMAKE_XCODE_SCHEME_MALLOC_STACK",
		"description": "Legt fest, ob im Diagnoseabschnitt des generierten Xcode-Schemas \"Malloc Stack\" aktiviert wird."
	},
	"CMAKE_XCODE_SCHEME_THREAD_SANITIZER": {
		"name": "CMAKE_XCODE_SCHEME_THREAD_SANITIZER",
		"description": "Legt fest, ob im Diagnoseabschnitt des generierten Xcode-Schemas \"Thread Sanitizer\" aktiviert wird."
	},
	"CMAKE_XCODE_SCHEME_THREAD_SANITIZER_STOP": {
		"name": "CMAKE_XCODE_SCHEME_THREAD_SANITIZER_STOP",
		"description": "Legt fest, ob im Abschnitt \"Diagnostics\" des generierten Xcode-Schemas bei Problemen die Option \"Thread Sanitizer – Pause\" aktiviert wird."
	},
	"CMAKE_XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER": {
		"name": "CMAKE_XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER",
		"description": "Legt fest, ob im Abschnitt \"Diagnostics\" des generierten Xcode-Schemas \"Undefined Behavior Sanitizer\" aktiviert wird."
	},
	"CMAKE_XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER_STOP": {
		"name": "CMAKE_XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER_STOP",
		"description": "Legt fest, ob im Abschnitt \"Diagnostics\" des generierten Xcode-Schemas bei Problemen die Undefined Behavior Sanitizer-Option \"Pause\" aktiviert wird."
	},
	"CMAKE_XCODE_SCHEME_WORKING_DIRECTORY": {
		"name": "CMAKE_XCODE_SCHEME_WORKING_DIRECTORY",
		"description": "Hiermit wird das Arbeitsverzeichnis der Ausführungs- und Profilaktionen im generierten Xcode-Schema angegeben."
	},
	"CMAKE_XCODE_SCHEME_ZOMBIE_OBJECTS": {
		"name": "CMAKE_XCODE_SCHEME_ZOMBIE_OBJECTS",
		"description": "Legt fest, ob im Diagnoseabschnitt des generierten Xcode-Schemas \"Zombie Objects\" aktiviert wird."
	},
	"CMAKE_XCODE_XCCONFIG": {
		"name": "CMAKE_XCODE_XCCONFIG",
		"description": "Wenn diese Einstellung festgelegt ist, registriert der Xcode-Generator die angegebene Datei als globale XCConfig-Datei. Für weitere Informationen über XCConfig-Dateien auf Zielebene siehe „XCODE_XCCONFIG-Zieleigenschaft“."
	},
	"CPACK_ABSOLUTE_DESTINATION_FILES": {
		"name": "CPACK_ABSOLUTE_DESTINATION_FILES",
		"description": "Liste der Dateien, die mithilfe eines ABSOLUTE DESTINATION-Pfads installiert wurden."
	},
	"CPACK_COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY": {
		"name": "CPACK_COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY",
		"description": "Boolesche Umschaltung, um das Verzeichnis der obersten Ebene ein-/auszuschließen (bei Komponenten)."
	},
	"CPACK_CUSTOM_INSTALL_VARIABLES": {
		"name": "CPACK_CUSTOM_INSTALL_VARIABLES",
		"description": "CPack-Variablen (festgelegt über z. B. cpack -D, CPackConfig.cmake oder CPACK_PROJECT_CONFIG_FILE Skripte) sind nicht direkt sichtbar in Installationsskripts. Stattdessen kann eine Liste von varName=value-Paaren in der variablen CPACK_CUSTOM_INSTALL_VARIABLES übergeben werden. Bei der Installation führt jedes Listenelement dazu, dass eine Variable des angegebenen Namens (varName) auf den angegebenen Wert festgelegt wird. Das „=“-Zeichen kann für einen leeren Wert ausgelassen werden."
	},
	"CPACK_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION": {
		"name": "CPACK_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION",
		"description": "CPack veranlassen, eine Fehlermeldung anzuzeigen, wenn eine Datei mit einem absoluten Wert von INSTALL DESTINATION gefunden wird."
	},
	"CPACK_INCLUDE_TOPLEVEL_DIRECTORY": {
		"name": "CPACK_INCLUDE_TOPLEVEL_DIRECTORY",
		"description": "Boolesche Umschaltung, um Verzeichnis der obersten Ebene ein-/auszuschließen."
	},
	"CPACK_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS": {
		"name": "CPACK_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS",
		"description": "Standardberechtigungen für Verzeichnisse, die beim Verpacken implizit erstellt werden."
	},
	"CPACK_PACKAGING_INSTALL_PREFIX": {
		"name": "CPACK_PACKAGING_INSTALL_PREFIX",
		"description": "Das im Buildpaket verwendete Präfix."
	},
	"CPACK_SET_DESTDIR": {
		"name": "CPACK_SET_DESTDIR",
		"description": "Boolesche Umschaltung, durch die CPack beim Verpacken den Mechanismus DESTDIR verwendet."
	},
	"CPACK_WARN_ON_ABSOLUTE_INSTALL_DESTINATION": {
		"name": "CPACK_WARN_ON_ABSOLUTE_INSTALL_DESTINATION",
		"description": "CPack veranlassen, einen Warnhinweis anzuzeigen, wenn eine Datei mit einem absoluten Wert von INSTALL DESTINATION gefunden wird."
	},
	"CTEST_BINARY_DIRECTORY": {
		"name": "CTEST_BINARY_DIRECTORY",
		"description": "Geben Sie die CTest-BuildDirectory-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_BUILD_COMMAND": {
		"name": "CTEST_BUILD_COMMAND",
		"description": "Geben Sie die CTest-MakeCommand-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_BUILD_NAME": {
		"name": "CTEST_BUILD_NAME",
		"description": "Geben Sie die CTest-BuildName-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_BZR_COMMAND": {
		"name": "CTEST_BZR_COMMAND",
		"description": "Geben Sie die CTest-BZRCommand-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_BZR_UPDATE_OPTIONS": {
		"name": "CTEST_BZR_UPDATE_OPTIONS",
		"description": "Geben Sie die CTest-BZRUpdateOptions-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_CHANGE_ID": {
		"name": "CTEST_CHANGE_ID",
		"description": "Geben Sie die CTest-ChangeId-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_CHECKOUT_COMMAND": {
		"name": "CTEST_CHECKOUT_COMMAND",
		"description": "Geben Sie an, wie der Befehl \"ctest_start\" das Quellverzeichnis in einem ctest-Dashboard-Clientskript auscheckt oder initialisiert."
	},
	"CTEST_CONFIGURATION_TYPE": {
		"name": "CTEST_CONFIGURATION_TYPE",
		"description": "Geben Sie die CTest-DefaultCTestConfigurationType-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_CONFIGURE_COMMAND": {
		"name": "CTEST_CONFIGURE_COMMAND",
		"description": "Geben Sie die CTest-ConfigureCommand-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_COVERAGE_COMMAND": {
		"name": "CTEST_COVERAGE_COMMAND",
		"description": "Geben Sie die CTest-CoverageCommand-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_COVERAGE_EXTRA_FLAGS": {
		"name": "CTEST_COVERAGE_EXTRA_FLAGS",
		"description": "Geben Sie die CTest-CoverageExtraFlags-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_CURL_OPTIONS": {
		"name": "CTEST_CURL_OPTIONS",
		"description": "Geben Sie die CTest-CurlOptions-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_CUSTOM_COVERAGE_EXCLUDE": {
		"name": "CTEST_CUSTOM_COVERAGE_EXCLUDE",
		"description": "Eine Liste mit regulären Ausdrücken, die verwendet werden, um Dateien nach ihrem Pfad von der durch den Befehl \"ctest_coverage\" ausgegebenen Abdeckung auszuschließen."
	},
	"CTEST_CUSTOM_ERROR_EXCEPTION": {
		"name": "CTEST_CUSTOM_ERROR_EXCEPTION",
		"description": "Eine Liste mit regulären Ausdrücken, die zum Ausschließen verwendet wird, wenn durch den Befehl „ctest_build“ Fehlermeldungen in Buildausgaben erkannt werden."
	},
	"CTEST_CUSTOM_ERROR_MATCH": {
		"name": "CTEST_CUSTOM_ERROR_MATCH",
		"description": "Eine Liste mit regulären Ausdrücken, die verwendet werden, um mit dem Befehl „ctest_build“ Fehlermeldungen in Buildausgaben zu erkennen."
	},
	"CTEST_CUSTOM_ERROR_POST_CONTEXT": {
		"name": "CTEST_CUSTOM_ERROR_POST_CONTEXT",
		"description": "Die Anzahl an Zeilen, die als Kontext einer Fehlermeldung folgen, die durch den Befehl „ctest_build“ ausgelöst wird. Der Standard ist 10."
	},
	"CTEST_CUSTOM_ERROR_PRE_CONTEXT": {
		"name": "CTEST_CUSTOM_ERROR_PRE_CONTEXT",
		"description": "Die Anzahl an Zeilen, die als Kontext einer Fehlermeldung vorausgehen, die durch den Befehl „ctest_build“ ausgelöst wird. Der Standard ist 10."
	},
	"CTEST_CUSTOM_MAXIMUM_FAILED_TEST_OUTPUT_SIZE": {
		"name": "CTEST_CUSTOM_MAXIMUM_FAILED_TEST_OUTPUT_SIZE",
		"description": "Beim Speichern der Ausgabe eines fehlerhaften Tests ist dies die maximale Größe in Bytes, die vom Befehl „ctest_test“ erfasst wird. Der Standardwert ist 307 200 (300 KiB). Informationen zu möglichen Abschneidemodi finden Sie unter CTEST_CUSTOM_TEST_OUTPUT_TRUNCATION."
	},
	"CTEST_CUSTOM_MAXIMUM_NUMBER_OF_ERRORS": {
		"name": "CTEST_CUSTOM_MAXIMUM_NUMBER_OF_ERRORS",
		"description": "Die maximale Anzahl an Fehlern, die in einem einzelnen Buildschritt erkannt werden. Danach wird die Ausgabe vom Befehl \"ctest_test\" gekürzt. Der Standard ist 50."
	},
	"CTEST_CUSTOM_MAXIMUM_NUMBER_OF_WARNINGS": {
		"name": "CTEST_CUSTOM_MAXIMUM_NUMBER_OF_WARNINGS",
		"description": "Die maximale Anzahl an Warnmeldungen, die in einem einzelnen Buildschritt erkannt werden. Danach wird die Ausgabe vom Befehl \"ctest_test\" gekürzt. Der Standard ist 50."
	},
	"CTEST_CUSTOM_MAXIMUM_PASSED_TEST_OUTPUT_SIZE": {
		"name": "CTEST_CUSTOM_MAXIMUM_PASSED_TEST_OUTPUT_SIZE",
		"description": "Beim Speichern der Ausgabe eines bestandenen Tests ist dies die maximale Größe in Bytes, die vom Befehl „ctest_test“ erfasst wird. Der Standardwert ist 1024 (1 KiB). Informationen zu möglichen Abschneidemodi finden Sie unter CTEST_CUSTOM_TEST_OUTPUT_TRUNCATION."
	},
	"CTEST_CUSTOM_MEMCHECK_IGNORE": {
		"name": "CTEST_CUSTOM_MEMCHECK_IGNORE",
		"description": "Eine Liste mit regulären Ausdrücken, um Tests während des Befehls \"ctest_memcheck\" auszuschließen."
	},
	"CTEST_CUSTOM_POST_MEMCHECK": {
		"name": "CTEST_CUSTOM_POST_MEMCHECK",
		"description": "Eine Liste mit Befehlen, die am Ende des Befehls \"ctest_memcheck\" ausgeführt werden."
	},
	"CTEST_CUSTOM_POST_TEST": {
		"name": "CTEST_CUSTOM_POST_TEST",
		"description": "Eine Liste mit Befehlen, die am Ende des Befehls \"ctest_test\" ausgeführt werden."
	},
	"CTEST_CUSTOM_PRE_MEMCHECK": {
		"name": "CTEST_CUSTOM_PRE_MEMCHECK",
		"description": "Eine Liste mit Befehlen, die zu Beginn des Befehls \"ctest_memcheck\" ausgeführt werden."
	},
	"CTEST_CUSTOM_PRE_TEST": {
		"name": "CTEST_CUSTOM_PRE_TEST",
		"description": "Eine Liste mit Befehlen, die zu Beginn des Befehls \"ctest_test\" ausgeführt werden."
	},
	"CTEST_CUSTOM_TESTS_IGNORE": {
		"name": "CTEST_CUSTOM_TESTS_IGNORE",
		"description": "Eine Liste von Testnamen, die aus der Gruppe von Tests ausgeschlossen werden sollen, die vom Befehl ctest_test ausgeführt werden."
	},
	"CTEST_CUSTOM_TEST_OUTPUT_TRUNCATION": {
		"name": "CTEST_CUSTOM_TEST_OUTPUT_TRUNCATION",
		"description": "Legen Sie den Testausgabekürzungsmodus für den Fall fest, dass eine maximale Größe über die Variablen CTEST_CUSTOM_MAXIMUM_PASSED_TEST_OUTPUT_SIZE oder CTEST_CUSTOM_MAXIMUM_FAILED_TEST_OUTPUT_SIZE konfiguriert wird. Standardmäßig wird das Ende der Ausgabe abgeschnitten. Andere mögliche Werte sind „Mitte“ und „Kopf“."
	},
	"CTEST_CUSTOM_WARNING_EXCEPTION": {
		"name": "CTEST_CUSTOM_WARNING_EXCEPTION",
		"description": "Eine Liste der regulären Ausdrücke, die bei der Erkennung von Warnmeldungen in Buildausgaben durch den Befehl \"ctest_build\" ausgeschlossen werden sollen."
	},
	"CTEST_CUSTOM_WARNING_MATCH": {
		"name": "CTEST_CUSTOM_WARNING_MATCH",
		"description": "Eine Liste der regulären Ausdrücke, die zur Erkennung von Warnmeldungen in Buildausgaben durch den Befehl \"ctest_build\" verwendet werden sollen."
	},
	"CTEST_CVS_CHECKOUT": {
		"name": "CTEST_CVS_CHECKOUT",
		"description": "Veraltet. Verwenden Sie stattdessen CTEST_CHECKOUT_COMMAND."
	},
	"CTEST_CVS_COMMAND": {
		"name": "CTEST_CVS_COMMAND",
		"description": "Geben Sie die CTest-CVSCommand-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_CVS_UPDATE_OPTIONS": {
		"name": "CTEST_CVS_UPDATE_OPTIONS",
		"description": "Geben Sie die CTest-CVSUpdateOptions-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_DROP_LOCATION": {
		"name": "CTEST_DROP_LOCATION",
		"description": "Geben Sie die CTest-DropLocation-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_DROP_METHOD": {
		"name": "CTEST_DROP_METHOD",
		"description": "Geben Sie die CTest-DropMethod-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_DROP_SITE": {
		"name": "CTEST_DROP_SITE",
		"description": "Geben Sie die CTest-DropSite-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_DROP_SITE_CDASH": {
		"name": "CTEST_DROP_SITE_CDASH",
		"description": "Geben Sie die CTest-IsCDash-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_DROP_SITE_PASSWORD": {
		"name": "CTEST_DROP_SITE_PASSWORD",
		"description": "Geben Sie die CTest-DropSitePassword-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_DROP_SITE_USER": {
		"name": "CTEST_DROP_SITE_USER",
		"description": "Geben Sie die CTest-DropSiteUser-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_EXTRA_COVERAGE_GLOB": {
		"name": "CTEST_EXTRA_COVERAGE_GLOB",
		"description": "Eine Liste mit regulären Ausdrücken zum Finden von Dateien, die durch den Befehl \"ctest_coverage\" abzudecken sind."
	},
	"CTEST_GIT_COMMAND": {
		"name": "CTEST_GIT_COMMAND",
		"description": "Geben Sie die CTest-GITCommand-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_GIT_INIT_SUBMODULES": {
		"name": "CTEST_GIT_INIT_SUBMODULES",
		"description": "Geben Sie die CTest-GITInitSubmodules-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_GIT_UPDATE_CUSTOM": {
		"name": "CTEST_GIT_UPDATE_CUSTOM",
		"description": "Geben Sie die CTest-GITUpdateCustom-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_GIT_UPDATE_OPTIONS": {
		"name": "CTEST_GIT_UPDATE_OPTIONS",
		"description": "Geben Sie die CTest-GITUpdateOptions-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_HG_COMMAND": {
		"name": "CTEST_HG_COMMAND",
		"description": "Geben Sie die CTest-HGCommand-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_HG_UPDATE_OPTIONS": {
		"name": "CTEST_HG_UPDATE_OPTIONS",
		"description": "Geben Sie die CTest-HGUpdateOptions-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_LABELS_FOR_SUBPROJECTS": {
		"name": "CTEST_LABELS_FOR_SUBPROJECTS",
		"description": "Geben Sie die CTest-LabelsForSubprojects-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_MEMORYCHECK_COMMAND": {
		"name": "CTEST_MEMORYCHECK_COMMAND",
		"description": "Geben Sie die CTest-MemoryCheckCommand-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_MEMORYCHECK_COMMAND_OPTIONS": {
		"name": "CTEST_MEMORYCHECK_COMMAND_OPTIONS",
		"description": "Geben Sie die CTest-MemoryCheckCommandOptions-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_MEMORYCHECK_SANITIZER_OPTIONS": {
		"name": "CTEST_MEMORYCHECK_SANITIZER_OPTIONS",
		"description": "Geben Sie die CTest-MemoryCheckSanitizerOptions-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_MEMORYCHECK_SUPPRESSIONS_FILE": {
		"name": "CTEST_MEMORYCHECK_SUPPRESSIONS_FILE",
		"description": "Geben Sie die CTest-MemoryCheckSuppressionFile-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_MEMORYCHECK_TYPE": {
		"name": "CTEST_MEMORYCHECK_TYPE",
		"description": "Hiermit wird die Einstellung \"CTest MemoryCheckType\" in einem ctest-Dashboardclientskript angegeben. Folgende Werte sind gültig: Valgrind, Purify, BoundsChecker, DrMemory, CudaSanitizer, ThreadSanitizer, AddressSanitizer, LeakSanitizer, MemorySanitizer, UndefinedBehaviorSanitizer."
	},
	"CTEST_NIGHTLY_START_TIME": {
		"name": "CTEST_NIGHTLY_START_TIME",
		"description": "Geben Sie die CTest-NightlyStartTime-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_P4_CLIENT": {
		"name": "CTEST_P4_CLIENT",
		"description": "Geben Sie die CTest-P4Client-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_P4_COMMAND": {
		"name": "CTEST_P4_COMMAND",
		"description": "Geben Sie die CTest-P4Command-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_P4_OPTIONS": {
		"name": "CTEST_P4_OPTIONS",
		"description": "Geben Sie die CTest-P4Options-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_P4_UPDATE_OPTIONS": {
		"name": "CTEST_P4_UPDATE_OPTIONS",
		"description": "Geben Sie die CTest-P4UpdateOptions-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_RESOURCE_SPEC_FILE": {
		"name": "CTEST_RESOURCE_SPEC_FILE",
		"description": "Hiermit wird die Einstellung \"CTest ResourceSpecFile\" in einem ctest-Dashboardclientskript angegeben."
	},
	"CTEST_RUN_CURRENT_SCRIPT": {
		"name": "CTEST_RUN_CURRENT_SCRIPT",
		"description": "Wird diese Einstellung auf \"0\" gesetzt, wird ctest nicht erneut ausgeführt, wenn durch das Aufrufen von \"ctest -S\" das Ende eines Skripts erreicht wird."
	},
	"CTEST_SCP_COMMAND": {
		"name": "CTEST_SCP_COMMAND",
		"description": "Dies ist eine veraltete Option (wird nicht verwendet)."
	},
	"CTEST_SCRIPT_DIRECTORY": {
		"name": "CTEST_SCRIPT_DIRECTORY",
		"description": "Das Verzeichnis, welches das CTest-Skript der obersten Ebene enthält. Das Konzept ähnelt CMAKE_SOURCE_DIR."
	},
	"CTEST_SITE": {
		"name": "CTEST_SITE",
		"description": "Geben Sie die CTest-Site-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_SOURCE_DIRECTORY": {
		"name": "CTEST_SOURCE_DIRECTORY",
		"description": "Geben Sie die CTest-SourceDirectory-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_SUBMIT_INACTIVITY_TIMEOUT": {
		"name": "CTEST_SUBMIT_INACTIVITY_TIMEOUT",
		"description": "Geben Sie die CTest SubmitInactivityTimeout-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_SUBMIT_URL": {
		"name": "CTEST_SUBMIT_URL",
		"description": "Hiermit wird die Einstellung \"CTest SubmitURL\" in einem ctest-Dashboardclientskript angegeben."
	},
	"CTEST_SVN_COMMAND": {
		"name": "CTEST_SVN_COMMAND",
		"description": "Geben Sie die CTest-SVNCommand-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_SVN_OPTIONS": {
		"name": "CTEST_SVN_OPTIONS",
		"description": "Geben Sie die CTest-SVNOptions-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_SVN_UPDATE_OPTIONS": {
		"name": "CTEST_SVN_UPDATE_OPTIONS",
		"description": "Geben Sie die CTest-SVNUpdateOptions-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_TEST_LOAD": {
		"name": "CTEST_TEST_LOAD",
		"description": "Geben Sie die Einstellung \"TestLoad\" im CTest-Test-Schritt eines ctest-Dashboard-Clientskripts an. Dies legt den Standardwert für die Option TEST_LOAD des Befehls \"ctest_test\" fest."
	},
	"CTEST_TEST_TIMEOUT": {
		"name": "CTEST_TEST_TIMEOUT",
		"description": "Geben Sie die CTest-TimeOut-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_TLS_VERIFY": {
		"name": "CTEST_TLS_VERIFY",
		"description": "Geben Sie die CTest-TLSVerify-Einstellung in einem ctest-Dashboardclientskript oder im Projekt-CMakeLists.txt-Code an, bevor Sie das CTest-Modul einschließen. Der Wert ist ein boolescher Wert, der angibt, ob das Serverzertifikat bei der Übermittlung an ein Dashboard über https:// URLs überprüft werden soll."
	},
	"CTEST_TLS_VERSION": {
		"name": "CTEST_TLS_VERSION",
		"description": "Geben Sie die CTest-TLSVersion-Einstellung in einem ctest-Dashboardclientskript oder im Projekt-CMakeLists.txt-Code an, bevor Sie das CTest-Modul einschließen. Der Wert ist eine tls-Mindestversion, die beim Übermitteln an eine Dashboard über https:// URLs zulässig ist."
	},
	"CTEST_TRIGGER_SITE": {
		"name": "CTEST_TRIGGER_SITE",
		"description": "Dies ist eine veraltete Option (wird nicht verwendet)."
	},
	"CTEST_UPDATE_COMMAND": {
		"name": "CTEST_UPDATE_COMMAND",
		"description": "Geben Sie die CTest-UpdateCommand-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_UPDATE_OPTIONS": {
		"name": "CTEST_UPDATE_OPTIONS",
		"description": "Geben Sie die CTest-UpdateOptions-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CTEST_UPDATE_VERSION_ONLY": {
		"name": "CTEST_UPDATE_VERSION_ONLY",
		"description": "Hiermit wird die Einstellung \"CTest UpdateVersionOnly\" in einem ctest-Dashboardclientskript angegeben."
	},
	"CTEST_UPDATE_VERSION_OVERRIDE": {
		"name": "CTEST_UPDATE_VERSION_OVERRIDE",
		"description": "Hiermit wird die Einstellung \"CTest UpdateVersionOverride\" in einem ctest-Dashboardclientskript angegeben."
	},
	"CTEST_USE_LAUNCHERS": {
		"name": "CTEST_USE_LAUNCHERS",
		"description": "Geben Sie die CTest-UseLaunchers-Einstellung in einem ctest-Dashboard-Clientskript an."
	},
	"CYGWIN": {
		"name": "CYGWIN",
		"description": "WAHR für Cygwin."
	},
	"ENV": {
		"name": "ENV",
		"description": "Der Operator zum Lesen von Umgebungsvariablen."
	},
	"EXECUTABLE_OUTPUT_PATH": {
		"name": "EXECUTABLE_OUTPUT_PATH",
		"description": "Variable für alten Speicherort einer ausführbaren Datei."
	},
	"GHSMULTI": {
		"name": "GHSMULTI",
		"description": "1 bei Verwendung des Green Hills MULTI-Generators."
	},
	"IOS": {
		"name": "IOS",
		"description": "Legen Sie diese Variable auf 1 fest, wenn das Zielsystem (CMAKE_SYSTEM_NAME) iOS ist."
	},
	"LIBRARY_OUTPUT_PATH": {
		"name": "LIBRARY_OUTPUT_PATH",
		"description": "Variable für alten Speicherort der Bibliothek."
	},
	"LINUX": {
		"name": "LINUX",
		"description": "Wird auf WAHR festgelegt, wenn das Zielsystem Linux ist."
	},
	"MINGW": {
		"name": "MINGW",
		"description": "Legen Sie diesen Wert auf TRUE fest, wenn mindestens eine Sprache mit einem Compiler aktiviert ist, der auf GNU ABI unter Windows (MinGW) ausgerichtet ist."
	},
	"MSVC": {
		"name": "MSVC",
		"description": "Legen Sie diesen Wert auf TRUE fest, wenn es sich beim Compiler um eine Version von Microsoft Visual C++ oder einen anderen Compiler handelt, der die cl-Befehlszeilensyntax von Visual C++ simuliert."
	},
	"MSVC10": {
		"name": "MSVC10",
		"description": "Nicht empfohlen. Verwenden Sie stattdessen die Variable MSVC_VERSION."
	},
	"MSVC11": {
		"name": "MSVC11",
		"description": "Nicht empfohlen. Verwenden Sie stattdessen die Variable MSVC_VERSION."
	},
	"MSVC12": {
		"name": "MSVC12",
		"description": "Nicht empfohlen. Verwenden Sie stattdessen die Variable MSVC_VERSION."
	},
	"MSVC14": {
		"name": "MSVC14",
		"description": "Nicht empfohlen. Verwenden Sie stattdessen die Variable MSVC_VERSION."
	},
	"MSVC60": {
		"name": "MSVC60",
		"description": "Nicht empfohlen. Verwenden Sie stattdessen die Variable MSVC_VERSION."
	},
	"MSVC70": {
		"name": "MSVC70",
		"description": "Nicht empfohlen. Verwenden Sie stattdessen die Variable MSVC_VERSION."
	},
	"MSVC71": {
		"name": "MSVC71",
		"description": "Nicht empfohlen. Verwenden Sie stattdessen die Variable MSVC_VERSION."
	},
	"MSVC80": {
		"name": "MSVC80",
		"description": "Nicht empfohlen. Verwenden Sie stattdessen die Variable MSVC_VERSION."
	},
	"MSVC90": {
		"name": "MSVC90",
		"description": "Nicht empfohlen. Verwenden Sie stattdessen die Variable MSVC_VERSION."
	},
	"MSVC_IDE": {
		"name": "MSVC_IDE",
		"description": "\"True\", wenn die Microsoft Visual C++-IDE verwendet wird."
	},
	"MSVC_TOOLSET_VERSION": {
		"name": "MSVC_TOOLSET_VERSION",
		"description": "Die verwendete Toolsetversion von Microsoft Visual C/C++ (falls zutreffend). Werden MSVC-ähnliche Varianten verwendet, wird die Variable basierend auf der Compilerversion festgelegt, die durch die Variable MSVC_VERSION angegeben ist."
	},
	"MSVC_VERSION": {
		"name": "MSVC_VERSION",
		"description": "Die verwendete Version von Microsoft Visual C/C++ (falls zutreffend). Falls ein Visual C++ simulierender Compiler verwendet wird, wird diese Variable auf die Toolsetversion festgelegt, die durch die Präprozessordefinition _MSC_VER bestimmt ist."
	},
	"MSYS": {
		"name": "MSYS",
		"description": "Lautet TRUE, wenn der MSYS Makefiles-Generator verwendet wird."
	},
	"<PackageName>_ROOT": {
		"name": "<PackageName>_ROOT",
		"description": "Aufrufe an find_package(<PackageName>) suchen in Präfixen, die durch die CMake-Variable <PackageName>_ROOT angegeben sind. Hierbei ist <PackageName> der Name (Groß-/Kleinschreibung beibehalten) des Aufrufs „find_package“, und _ROOT ist ein Literal. Beispielsweise sucht „find_package(Foo)“ nach Präfixen, die in der CMake-Variable „Foo_ROOT“ (sofern gesetzt) angegeben sind. Siehe Richtlinie CMP0074."
	},
	"<PROJECT-NAME>_BINARY_DIR": {
		"name": "<PROJECT-NAME>_BINARY_DIR",
		"description": "Binärverzeichnis der obersten Ebene des benannten Projekts."
	},
	"<PROJECT-NAME>_DESCRIPTION": {
		"name": "<PROJECT-NAME>_DESCRIPTION",
		"description": "Wert, der an die DESCRIPTION-Option des neuesten Aufrufs an den Befehl \"project\" mit dem Projektnamen <PROJECT-NAME> übergeben wurde (falls zutreffend)."
	},
	"<PROJECT-NAME>_HOMEPAGE_URL": {
		"name": "<PROJECT-NAME>_HOMEPAGE_URL",
		"description": "Wert, der an die HOMEPAGE_URL-Option des neuesten Aufrufs an den Befehl \"project\" mit dem Projektnamen <PROJECT-NAME> übergeben wurde (falls zutreffend)."
	},
	"<PROJECT-NAME>_IS_TOP_LEVEL": {
		"name": "<PROJECT-NAME>_IS_TOP_LEVEL",
		"description": "Eine boolesche Variable, die angibt, ob das benannte Projekt in einer CMakeLists.txt-Datei der obersten Ebene aufgerufen wurde."
	},
	"<PROJECT-NAME>_SOURCE_DIR": {
		"name": "<PROJECT-NAME>_SOURCE_DIR",
		"description": "Quellverzeichnis der obersten Ebene des benannten Projekts."
	},
	"<PROJECT-NAME>_VERSION": {
		"name": "<PROJECT-NAME>_VERSION",
		"description": "Wert, der an die VERSION-Option des neuesten Aufrufs an den Befehl \"project\" mit dem Projektnamen <PROJECT-NAME> übergeben wurde (falls zutreffend)."
	},
	"<PROJECT-NAME>_VERSION_MAJOR": {
		"name": "<PROJECT-NAME>_VERSION_MAJOR",
		"description": "Erste Versionsnummernkomponente der Variable <PROJECT-NAME>_VERSION, wie sie vom Befehl \"project\" festgelegt wurde."
	},
	"<PROJECT-NAME>_VERSION_MINOR": {
		"name": "<PROJECT-NAME>_VERSION_MINOR",
		"description": "Zweite Versionsnummernkomponente der Variable <PROJECT-NAME>_VERSION, wie sie vom Befehl \"project\" festgelegt wurde."
	},
	"<PROJECT-NAME>_VERSION_PATCH": {
		"name": "<PROJECT-NAME>_VERSION_PATCH",
		"description": "Dritte Versionsnummernkomponente der Variable <PROJECT-NAME>_VERSION, wie sie vom Befehl \"project\" festgelegt wurde."
	},
	"<PROJECT-NAME>_VERSION_TWEAK": {
		"name": "<PROJECT-NAME>_VERSION_TWEAK",
		"description": "Vierte Versionsnummernkomponente der Variable <PROJECT-NAME>_VERSION, wie sie vom Befehl \"project\" festgelegt wurde."
	},
	"PROJECT_BINARY_DIR": {
		"name": "PROJECT_BINARY_DIR",
		"description": "Der vollständige Pfad zum Buildverzeichnis für das Projekt."
	},
	"PROJECT_DESCRIPTION": {
		"name": "PROJECT_DESCRIPTION",
		"description": "Kurze Projektbeschreibung, die an den Befehl \"project\" übergeben wird."
	},
	"PROJECT_HOMEPAGE_URL": {
		"name": "PROJECT_HOMEPAGE_URL",
		"description": "Die URL der Homepage des Projekts."
	},
	"PROJECT_IS_TOP_LEVEL": {
		"name": "PROJECT_IS_TOP_LEVEL",
		"description": "Eine boolesche Variable, die angibt, ob der zuletzt aufgerufene Projektbefehl, im aktuellen Bereich oder darüber, sich in der obersten Ebene CMakeLists.txt Datei befand."
	},
	"PROJECT_NAME": {
		"name": "PROJECT_NAME",
		"description": "An den Projektbefehl übergebener Name des Projekts."
	},
	"PROJECT_SOURCE_DIR": {
		"name": "PROJECT_SOURCE_DIR",
		"description": "Dies ist das Quellverzeichnis des letzten Aufrufs des Befehls \"project\", der im aktuellen Verzeichnisbereich oder einem seiner übergeordneten Elemente ausgeführt wurde. Hinweis: Aufrufe von \"project\" innerhalb des Bereichs eines untergeordneten Verzeichnisses (z. B. aus einem add_subdirectory-Aufruf aus dem aktuellen Bereich) bleiben hierbei unberücksichtigt."
	},
	"PROJECT_VERSION": {
		"name": "PROJECT_VERSION",
		"description": "Wert, der an die VERSION-Option des neuesten Aufrufs an den Befehl \"project\" übergeben wurde (falls zutreffend)."
	},
	"PROJECT_VERSION_MAJOR": {
		"name": "PROJECT_VERSION_MAJOR",
		"description": "Erste Versionsnummernkomponente der Variable PROJECT_VERSION, wie sie vom Befehl \"project\" festgelegt wurde."
	},
	"PROJECT_VERSION_MINOR": {
		"name": "PROJECT_VERSION_MINOR",
		"description": "Zweite Versionsnummernkomponente der Variable PROJECT_VERSION, wie sie vom Befehl \"project\" festgelegt wurde."
	},
	"PROJECT_VERSION_PATCH": {
		"name": "PROJECT_VERSION_PATCH",
		"description": "Dritte Versionsnummernkomponente der Variable PROJECT_VERSION, wie sie vom Befehl \"project\" festgelegt wurde."
	},
	"PROJECT_VERSION_TWEAK": {
		"name": "PROJECT_VERSION_TWEAK",
		"description": "Vierte Versionsnummernkomponente der Variable PROJECT_VERSION, wie sie vom Befehl \"project\" festgelegt wurde."
	},
	"UNIX": {
		"name": "UNIX",
		"description": "Setzen Sie diese Einstellung auf \"true\", wenn das Zielsystem UNIX oder UNIX-ähnlich ist (z. B. APPLE und CYGWIN). Fragen Sie die Variable CMAKE_SYSTEM_NAME ab, wenn ein spezifischeres Verständnis des Zielsystems erforderlich ist."
	},
	"WIN32": {
		"name": "WIN32",
		"description": "Auf \"true\" festlegen, wenn das Zielsystem Windows ist (einschließlich Win64)."
	},
	"WINCE": {
		"name": "WINCE",
		"description": "\"True\", wenn die Variable CMAKE_SYSTEM_NAME auf \"WindowsCE\" gesetzt ist."
	},
	"WINDOWS_PHONE": {
		"name": "WINDOWS_PHONE",
		"description": "\"True\", wenn die Variable CMAKE_SYSTEM_NAME auf \"WindowsPhone\" gesetzt ist."
	},
	"WINDOWS_STORE": {
		"name": "WINDOWS_STORE",
		"description": "\"True\", wenn die Variable CMAKE_SYSTEM_NAME auf \"WindowsStore\" gesetzt ist."
	},
	"XCODE": {
		"name": "XCODE",
		"description": "\"True\", wenn der Xcode-Generator verwendet wird."
	},
	"XCODE_VERSION": {
		"name": "XCODE_VERSION",
		"description": "Version von Xcode (nur Xcode-Generator)."
	},
	"ADVANCED": {
		"name": "ADVANCED",
		"description": "\"True\", wenn der Eintrag auf grafischen Benutzeroberflächen standardmäßig auszublenden ist."
	},
	"HELPSTRING": {
		"name": "HELPSTRING",
		"description": "Hilfe, die in Zusammenhang mit Eintrag auf grafischen Benutzeroberflächen steht."
	},
	"MODIFIED": {
		"name": "MODIFIED",
		"description": "Interne Verwaltungseigenschaft. Nicht setzen oder abrufen."
	},
	"STRINGS": {
		"name": "STRINGS",
		"description": "Zählen Sie mögliche STRING-Eingabewerte für die Auswahl der grafischen Benutzeroberfläche auf."
	},
	"TYPE": {
		"name": "TYPE",
		"description": "Der Widgettyp für die Eingabe in grafischen Benutzeroberflächen."
	},
	"VALUE": {
		"name": "VALUE",
		"description": "Wert eines Cacheeintrags."
	},
	"ADDITIONAL_CLEAN_FILES": {
		"name": "ADDITIONAL_CLEAN_FILES",
		"description": "Eine durch Semikolon getrennte Liste der Dateien oder Verzeichnisse, die im Rahmen des globalen Bereinigungsziels entfernt werden. Diese Eigenschaft ist nützlich, um generierte Dateien oder Verzeichnisse anzugeben, die von mehreren Zielen oder von CMake selbst verwendet oder die in einer Weise generiert werden, die eine Erfassung der Ausgaben oder Nebenprodukte benutzerdefinierter Befehle nicht zulässt."
	},
	"ADDITIONAL_MAKE_CLEAN_FILES": {
		"name": "ADDITIONAL_MAKE_CLEAN_FILES",
		"description": "Zusätzliche Dateien, die während der Bereinigungsphase entfernt werden."
	},
	"BINARY_DIR": {
		"name": "BINARY_DIR",
		"description": "Diese schreibgeschützte Verzeichniseigenschaft meldet den absoluten Pfad zum Binärverzeichnis. Dieses Verzeichnis entspricht der Quelle, für die Daten gelesen werden."
	},
	"BUILDSYSTEM_TARGETS": {
		"name": "BUILDSYSTEM_TARGETS",
		"description": "Diese schreibgeschützte Verzeichniseigenschaft enthält eine durch Semikolon getrennte Liste der Buildsystemziele, die dem Verzeichnis durch Aufrufe der Befehle \"add_library\", \"add_executable\" und \"add_custom_target\" hinzugefügt wurden. Die Liste enthält keine importierten oder Aliasziele, dafür jedoch Schnittstellenbibliotheken. Jeder Eintrag in der Liste ist der logische Name eines Ziels, das an die Option TARGET des Befehls \"get_property\" übergeben werden kann."
	},
	"CACHE_VARIABLES": {
		"name": "CACHE_VARIABLES",
		"description": "Liste der im aktuellen Verzeichnis verfügbaren Cachevariablen."
	},
	"CLEAN_NO_CUSTOM": {
		"name": "CLEAN_NO_CUSTOM",
		"description": "Auf \"true\" setzen, damit Makefile-Generatoren die Ausgaben benutzerdefinierter Befehle während des Bereinigungsvorgangs für dieses Verzeichnis nicht entfernen. Bei anderen Generatoren wird diese Einstellung ignoriert, da keine Implementierung möglich ist."
	},
	"CMAKE_CONFIGURE_DEPENDS": {
		"name": "CMAKE_CONFIGURE_DEPENDS",
		"description": "Informieren Sie CMake über zusätzliche Eingabedateien für den Konfigurationsprozess. Wird eine benannte Datei modifiziert, führt das Buildsystem CMake erneut aus, um die Datei erneut zu konfigurieren und das Buildsystem nochmals zu generieren."
	},
	"COMPILE_DEFINITIONS": {
		"name": "COMPILE_DEFINITIONS",
		"description": "Präprozessordefinitionen zum Kompilieren der Quellen eines Ziels."
	},
	"COMPILE_DEFINITIONS_<CONFIG>": {
		"name": "COMPILE_DEFINITIONS_<CONFIG>",
		"description": "Ignoriert. Siehe CMake-Richtlinie CMP0043."
	},
	"COMPILE_OPTIONS": {
		"name": "COMPILE_OPTIONS",
		"description": "Liste mit Optionen, die an den Compiler zu übergeben sind."
	},
	"DEFINITIONS": {
		"name": "DEFINITIONS",
		"description": "Nur für Kompatibilität mit CMake 2.4. Verwenden Sie stattdessen COMPILE_DEFINITIONS."
	},
	"EXCLUDE_FROM_ALL": {
		"name": "EXCLUDE_FROM_ALL",
		"description": "Wenn Sie diese Verzeichniseigenschaft für ein Unterverzeichnis auf TRUE festlegen, werden die zugehörigen Ziele aus dem Ziel \"all\" der entsprechenden Vorgängerelemente ausgeschlossen. Bei einem Ausschluss führt beispielsweise \"make\" im übergeordneten Verzeichnis nicht dazu, dass standardmäßig Ziele im Unterverzeichnis erstellt werden. Diese Eigenschaft hat keine Auswirkung auf das Ziel \"all\" des Unterverzeichnisses selbst. Beispielsweise werden bei Ausführung von \"make\" im Unterverzeichnis weiterhin die zugehörigen Ziele erstellt."
	},
	"IMPLICIT_DEPENDS_INCLUDE_TRANSFORM": {
		"name": "IMPLICIT_DEPENDS_INCLUDE_TRANSFORM",
		"description": "Hiermit werden #include-Zeilentransformationen für Abhängigkeiten in einem Verzeichnis angegeben."
	},
	"IMPORTED_TARGETS": {
		"name": "IMPORTED_TARGETS",
		"description": "Diese schreibgeschützte Verzeichniseigenschaft enthält eine durch Semikolons getrennte Liste importierter Ziele, die dem Verzeichnis durch Aufrufe der Befehle add_library und add_executable hinzugefügt wurden. Jeder Eintrag in der Liste ist der logische Name eines Ziels, der für die Übergabe an die Option get_property Befehl TARGET geeignet ist, wenn er im selben Verzeichnis aufgerufen wird."
	},
	"INCLUDE_DIRECTORIES": {
		"name": "INCLUDE_DIRECTORIES",
		"description": "Liste mit Präprozessor-Includedatei-Suchverzeichnissen."
	},
	"INCLUDE_REGULAR_EXPRESSION": {
		"name": "INCLUDE_REGULAR_EXPRESSION",
		"description": "Includedatei, die einen regulären Ausdruck scannt."
	},
	"INTERPROCEDURAL_OPTIMIZATION": {
		"name": "INTERPROCEDURAL_OPTIMIZATION",
		"description": "Diese Verzeichniseigenschaft ist nicht mehr vorhanden."
	},
	"INTERPROCEDURAL_OPTIMIZATION_<CONFIG>": {
		"name": "INTERPROCEDURAL_OPTIMIZATION_<CONFIG>",
		"description": "Diese Verzeichniseigenschaft ist nicht mehr vorhanden."
	},
	"LABELS": {
		"name": "LABELS",
		"description": "Hiermit wird eine Liste der Textbezeichnungen angegeben, die einem Verzeichnis und allen zugehörigen Unterverzeichnissen zugeordnet sind. Dies entspricht dem Festlegen der LABELS-Eigenschaft für das Ziel und der Testeigenschaft LABELS für alle Ziele und Tests im aktuellen Verzeichnis und in den Unterverzeichnissen. Hinweis: Es müssen Launcher aktiviert sein, um Bezeichnungen an Ziele weiterzugeben."
	},
	"LINK_DIRECTORIES": {
		"name": "LINK_DIRECTORIES",
		"description": "Eine Liste der Suchverzeichnisse für den Linker."
	},
	"LINK_OPTIONS": {
		"name": "LINK_OPTIONS",
		"description": "Eine Liste der Optionen, die für den Schritt zum Verknüpfen von als Zielen verwendeten freigegebenen Bibliotheken, Modulen und ausführbaren Dateien sowie im Schritt zur Geräteverknüpfung verwendet werden."
	},
	"LISTFILE_STACK": {
		"name": "LISTFILE_STACK",
		"description": "Der aktuelle Stapel mit Listendateien, der verarbeitet wird."
	},
	"MACROS": {
		"name": "MACROS",
		"description": "Liste mit Makrobefehlen, die im aktuellen Verzeichnis verfügbar sind."
	},
	"PARENT_DIRECTORY": {
		"name": "PARENT_DIRECTORY",
		"description": "Quellverzeichnis, das das aktuelle Unterverzeichnis hinzugefügt hat."
	},
	"RULE_LAUNCH_COMPILE": {
		"name": "RULE_LAUNCH_COMPILE",
		"description": "Geben Sie ein Startprogramm für Kompilierungsregeln an."
	},
	"RULE_LAUNCH_CUSTOM": {
		"name": "RULE_LAUNCH_CUSTOM",
		"description": "Geben Sie ein Startprogramm für benutzerdefinierte Regeln an."
	},
	"RULE_LAUNCH_LINK": {
		"name": "RULE_LAUNCH_LINK",
		"description": "Geben Sie ein Startprogramm für Verknüpfungsregeln an."
	},
	"SOURCE_DIR": {
		"name": "SOURCE_DIR",
		"description": "Diese schreibgeschützte Verzeichniseigenschaft meldet den absoluten Pfad zu dem Quellverzeichnis, das gelesen wird."
	},
	"SUBDIRECTORIES": {
		"name": "SUBDIRECTORIES",
		"description": "Diese schreibgeschützte Verzeichniseigenschaft enthält eine durch Semikolon getrennte Liste der Unterverzeichnisse, die bisher von den Befehlen \"add_subdirectory\" und \"subdirs\" verarbeitet wurden. Jeder Eintrag ist der absolute Pfad zum Quellverzeichnis (in der die Datei \"CMakeLists.txt\" enthalten ist). Eine Übergabe an die DIRECTORY-Option des Befehls \"get_property\" ist möglich."
	},
	"SYSTEM": {
		"name": "SYSTEM",
		"description": "Diese Verzeichniseigenschaft wird verwendet, um die SYSTEM-Zieleigenschaft für nicht importierte Ziele zu initialisieren, die in diesem Verzeichnis erstellt wurden. Sie wird durch „add_subdirectory“ und „FetchContent_Declare“ auf WAHR festgelegt, wenn die Option SYSTEM als Argument für diese Befehle angegeben wird."
	},
	"TESTS": {
		"name": "TESTS",
		"description": "Eine Liste mit Tests."
	},
	"TEST_INCLUDE_FILE": {
		"name": "TEST_INCLUDE_FILE",
		"description": "Veraltet. Verwenden Sie stattdessen TEST_INCLUDE_FILES."
	},
	"TEST_INCLUDE_FILES": {
		"name": "TEST_INCLUDE_FILES",
		"description": "Eine Liste mit CMake-Dateien, die beim Ausführen von ctest berücksichtigt werden."
	},
	"VARIABLES": {
		"name": "VARIABLES",
		"description": "Liste mit im aktuellen Verzeichnis definierten Variablen."
	},
	"VS_GLOBAL_SECTION_POST_<section>": {
		"name": "VS_GLOBAL_SECTION_POST_<section>",
		"description": "Geben Sie in Visual Studio einen globalen Abschnitt \"postSolution\" an."
	},
	"VS_GLOBAL_SECTION_PRE_<section>": {
		"name": "VS_GLOBAL_SECTION_PRE_<section>",
		"description": "Geben Sie in Visual Studio einen globalen Abschnitt \"preSolution\" an."
	},
	"VS_STARTUP_PROJECT": {
		"name": "VS_STARTUP_PROJECT",
		"description": "Geben Sie die Standard-Startprojekt einer Visual Studio-Lösung an."
	},
	"ALLOW_DUPLICATE_CUSTOM_TARGETS": {
		"name": "ALLOW_DUPLICATE_CUSTOM_TARGETS",
		"description": "Zulassen, dass doppelte benutzerdefinierte Ziele erstellt werden."
	},
	"AUTOGEN_SOURCE_GROUP": {
		"name": "AUTOGEN_SOURCE_GROUP",
		"description": "Name der source_group für AUTOMOC-, AUTORCC- und AUTOUIC-generierten Dateien."
	},
	"AUTOGEN_TARGETS_FOLDER": {
		"name": "AUTOGEN_TARGETS_FOLDER",
		"description": "Name von FOLDER für *_autogen-Ziele, die von CMake automatisch bei Zielen hinzugefügt werden, für die AUTOMOC deaktiviert ist."
	},
	"AUTOMOC_SOURCE_GROUP": {
		"name": "AUTOMOC_SOURCE_GROUP",
		"description": "Name der source_group für durch AUTOMOC generierte Dateien."
	},
	"AUTOMOC_TARGETS_FOLDER": {
		"name": "AUTOMOC_TARGETS_FOLDER",
		"description": "Name von FOLDER für *_autogen-Ziele, die von CMake automatisch bei Zielen hinzugefügt werden, für die AUTOMOC deaktiviert ist."
	},
	"AUTORCC_SOURCE_GROUP": {
		"name": "AUTORCC_SOURCE_GROUP",
		"description": "Name der source_group für durch AUTORCC generierte Dateien."
	},
	"AUTOUIC_SOURCE_GROUP": {
		"name": "AUTOUIC_SOURCE_GROUP",
		"description": "Name der source_group für durch AUTOMOC-generierte Dateien."
	},
	"CMAKE_CUDA_KNOWN_FEATURES": {
		"name": "CMAKE_CUDA_KNOWN_FEATURES",
		"description": "Eine Liste der CUDA-Features, die in dieser Version von CMake bekannt sind."
	},
	"CMAKE_CXX_KNOWN_FEATURES": {
		"name": "CMAKE_CXX_KNOWN_FEATURES",
		"description": "Liste mit C++-Features, die dieser Version von CMake bekannt sind."
	},
	"CMAKE_C_KNOWN_FEATURES": {
		"name": "CMAKE_C_KNOWN_FEATURES",
		"description": "Liste mit C-Features, die dieser Version von CMake bekannt sind."
	},
	"CMAKE_HIP_KNOWN_FEATURES": {
		"name": "CMAKE_HIP_KNOWN_FEATURES",
		"description": "Liste mit HIP-Features, die dieser Version von CMake bekannt sind."
	},
	"CMAKE_ROLE": {
		"name": "CMAKE_ROLE",
		"description": "Hiermit wird angegeben, in welchem Modus sich das aktuell ausgeführte Skript befindet. Es kann einer der folgenden Werte verwendet werden:"
	},
	"DEBUG_CONFIGURATIONS": {
		"name": "DEBUG_CONFIGURATIONS",
		"description": "Geben Sie die Konfigurationen für das Debuggen an."
	},
	"DISABLED_FEATURES": {
		"name": "DISABLED_FEATURES",
		"description": "Liste mit Features, die während der Ausführung von CMake deaktiviert sind."
	},
	"ECLIPSE_EXTRA_CPROJECT_CONTENTS": {
		"name": "ECLIPSE_EXTRA_CPROJECT_CONTENTS",
		"description": "Zusätzliche Inhalte, die in die generierte Eclipse-cproject-Datei von Eclipse eingefügt werden."
	},
	"ECLIPSE_EXTRA_NATURES": {
		"name": "ECLIPSE_EXTRA_NATURES",
		"description": "Liste mit Features, die der generierten Eclipse-cproject-Datei hinzugefügt werden."
	},
	"ENABLED_FEATURES": {
		"name": "ENABLED_FEATURES",
		"description": "Liste mit Features, die während der Ausführung von CMake aktiviert sind."
	},
	"ENABLED_LANGUAGES": {
		"name": "ENABLED_LANGUAGES",
		"description": "Schreibgeschützte Eigenschaft, die die Liste der aktuell aktivierten Sprachen enthält"
	},
	"FIND_LIBRARY_USE_LIB32_PATHS": {
		"name": "FIND_LIBRARY_USE_LIB32_PATHS",
		"description": "Legt fest, ob der Befehl \"find_library\" lib32-Verzeichnisse automatisch durchsucht."
	},
	"FIND_LIBRARY_USE_LIB64_PATHS": {
		"name": "FIND_LIBRARY_USE_LIB64_PATHS",
		"description": "Legt fest, ob der Befehl \"find_library\" lib64-Verzeichnisse automatisch durchsucht."
	},
	"FIND_LIBRARY_USE_LIBX32_PATHS": {
		"name": "FIND_LIBRARY_USE_LIBX32_PATHS",
		"description": "Legt fest, ob der Befehl \"find_library\" libx32-Verzeichnisse automatisch durchsucht."
	},
	"FIND_LIBRARY_USE_OPENBSD_VERSIONING": {
		"name": "FIND_LIBRARY_USE_OPENBSD_VERSIONING",
		"description": "Gibt an, ob \"find_library\" freigegebene OpenBSD-ähnliche Bibliotheken findet."
	},
	"GENERATOR_IS_MULTI_CONFIG": {
		"name": "GENERATOR_IS_MULTI_CONFIG",
		"description": "Schreibgeschützte Eigenschaft, die bei Generatoren mit mehreren Konfigurationen \"true\" ist."
	},
	"GLOBAL_DEPENDS_DEBUG_MODE": {
		"name": "GLOBAL_DEPENDS_DEBUG_MODE",
		"description": "Aktivieren Sie den globalen Debugmodus für Zielabhängigkeitsdiagramme."
	},
	"GLOBAL_DEPENDS_NO_CYCLES": {
		"name": "GLOBAL_DEPENDS_NO_CYCLES",
		"description": "Verweigern Sie globale Zielabhängigkeitsdiagrammzyklen."
	},
	"INSTALL_PARALLEL": {
		"name": "INSTALL_PARALLEL",
		"description": "Aktiviert die Parallelinstallationsoption für den Ninja-Generator."
	},
	"IN_TRY_COMPILE": {
		"name": "IN_TRY_COMPILE",
		"description": "Schreibgeschützte Eigenschaft, die während einer \"Kompilieren versuchen\"-Konfiguration \"true\" ist."
	},
	"JOB_POOLS": {
		"name": "JOB_POOLS",
		"description": "Nur Ninja: Liste der verfügbaren Pools."
	},
	"PACKAGES_FOUND": {
		"name": "PACKAGES_FOUND",
		"description": "Liste mit Paketen, die während der CMake-Ausführung gefunden wurden."
	},
	"PACKAGES_NOT_FOUND": {
		"name": "PACKAGES_NOT_FOUND",
		"description": "Liste mit Paketen, die während der CMake-Ausführung nicht gefunden wurden."
	},
	"PREDEFINED_TARGETS_FOLDER": {
		"name": "PREDEFINED_TARGETS_FOLDER",
		"description": "Name von FOLDER für Ziele, die von CMake automatisch hinzugefügt werden."
	},
	"PROPAGATE_TOP_LEVEL_INCLUDES_TO_TRY_COMPILE": {
		"name": "PROPAGATE_TOP_LEVEL_INCLUDES_TO_TRY_COMPILE",
		"description": "Wenn diese globale Eigenschaft auf TRUE festgelegt ist, wird die Variable CMAKE_PROJECT_TOP_LEVEL_INCLUDES in try_compile-Aufrufen weitergegeben, die die Signatur des ganzen Projekts verwenden. Aufrufe der Quelldateisignatur sind von dieser Eigenschaft nicht betroffen. PROPAGATE_TOP_LEVEL_INCLUDES_TO_TRY_COMPILE ist standardmäßig nicht festgelegt."
	},
	"REPORT_UNDEFINED_PROPERTIES": {
		"name": "REPORT_UNDEFINED_PROPERTIES",
		"description": "Durch das Festlegen dieser Einstellung werden alle undefinierten Eigenschaften an diese Datei gemeldet."
	},
	"RULE_MESSAGES": {
		"name": "RULE_MESSAGES",
		"description": "Geben Sie an, ob für jede make-Regel eine Meldung gemeldet werden soll."
	},
	"TARGET_ARCHIVES_MAY_BE_SHARED_LIBS": {
		"name": "TARGET_ARCHIVES_MAY_BE_SHARED_LIBS",
		"description": "Legen Sie fest, ob freigegebene Bibliotheken wie Archive benannt werden können."
	},
	"TARGET_MESSAGES": {
		"name": "TARGET_MESSAGES",
		"description": "Geben Sie an, ob die Vervollständigung der einzelnen Ziele gemeldet werden soll."
	},
	"TARGET_SUPPORTS_SHARED_LIBS": {
		"name": "TARGET_SUPPORTS_SHARED_LIBS",
		"description": "Unterstützt die Zielplattform freigegebene Bibliotheken?"
	},
	"USE_FOLDERS": {
		"name": "USE_FOLDERS",
		"description": "Steuert, ob die FOLDER-Zieleigenschaft verwendet werden soll, um Ziele in Ordnern zu organisieren. Der Wert von USE_FOLDERS am Ende der Datei „CMakeLists.txt“ der obersten Ebene bestimmt das Verhalten."
	},
	"XCODE_EMIT_EFFECTIVE_PLATFORM_NAME": {
		"name": "XCODE_EMIT_EFFECTIVE_PLATFORM_NAME",
		"description": "Kontrollieren Sie die Ausgabe von EFFECTIVE_PLATFORM_NAME durch den Xcode-Generator."
	},
	"CPACK_DESKTOP_SHORTCUTS": {
		"name": "CPACK_DESKTOP_SHORTCUTS",
		"description": "Gibt eine Liste mit Verknüpfungsnamen an, die für diese Datei auf dem Desktop erstellt werden."
	},
	"CPACK_NEVER_OVERWRITE": {
		"name": "CPACK_NEVER_OVERWRITE",
		"description": "Fordern Sie an, dass diese Datei bei \"install\" oder \"reinstall\" nicht überschrieben wird."
	},
	"CPACK_PERMANENT": {
		"name": "CPACK_PERMANENT",
		"description": "Fordern Sie an dass diese Datei bei \"uninstall\" nicht entfernt wird."
	},
	"CPACK_STARTUP_SHORTCUTS": {
		"name": "CPACK_STARTUP_SHORTCUTS",
		"description": "Gibt eine Liste mit Verknüpfungsnamen an, die im Startordner für diese Datei erstellt werden."
	},
	"CPACK_START_MENU_SHORTCUTS": {
		"name": "CPACK_START_MENU_SHORTCUTS",
		"description": "Gibt eine Liste mit Verknüpfungsnamen an, die im Startmenü für diese Datei erstellt werden."
	},
	"CPACK_WIX_ACL": {
		"name": "CPACK_WIX_ACL",
		"description": "Gibt Zugriffsberechtigungen für Dateien oder Verzeichnisse an, die durch einen WiX-Installer installiert wurden."
	},
	"ABSTRACT": {
		"name": "ABSTRACT",
		"description": "Ist diese Quelldatei eine abstrakte Klasse?"
	},
	"AUTORCC_OPTIONS": {
		"name": "AUTORCC_OPTIONS",
		"description": "Zusätzliche Optionen für rcc beim Verwenden von AUTORCC"
	},
	"AUTOUIC_OPTIONS": {
		"name": "AUTOUIC_OPTIONS",
		"description": "Zusätzliche Optionen für uic beim Verwenden von AUTOUIC"
	},
	"COMPILE_FLAGS": {
		"name": "COMPILE_FLAGS",
		"description": "Zusätzliche Flags, die beim Kompilieren dieser Quelldatei hinzugefügt werden sollen."
	},
	"CXX_SCAN_FOR_MODULES": {
		"name": "CXX_SCAN_FOR_MODULES",
		"description": "CXX_SCAN_FOR_MODULES ist ein boolescher Wert, der angibt, ob CMake die Quelle auf C++-Modulabhängigkeiten überprüft. Zielweite Einstellungen finden Sie auch im CXX_SCAN_FOR_MODULES."
	},
	"EXTERNAL_OBJECT": {
		"name": "EXTERNAL_OBJECT",
		"description": "Ist die Einstellung auf \"true\" gesetzt, handelt es sich um eine Objektdatei."
	},
	"Fortran_FORMAT": {
		"name": "Fortran_FORMAT",
		"description": "Auf FIXED oder FREE setzen, um das Fortran-Quelllayout anzugeben."
	},
	"Fortran_PREPROCESS": {
		"name": "Fortran_PREPROCESS",
		"description": "Hiermit wird gesteuert, ob die Fortran-Quelldatei ohne Bedingungen vorverarbeitet werden soll."
	},
	"GENERATED": {
		"name": "GENERATED",
		"description": "Wird diese Quelldatei als Teil des build- oder CMake-Prozesses generiert?"
	},
	"HEADER_FILE_ONLY": {
		"name": "HEADER_FILE_ONLY",
		"description": "Ist diese Quelldatei nur eine Headerdatei?"
	},
	"KEEP_EXTENSION": {
		"name": "KEEP_EXTENSION",
		"description": "Die Ausgabedatei soll die gleiche Erweiterung wie die Quelldatei haben."
	},
	"LANGUAGE": {
		"name": "LANGUAGE",
		"description": "Hiermit geben Sie die Programmiersprache an, in der eine Quelldatei geschrieben ist."
	},
	"LOCATION": {
		"name": "LOCATION",
		"description": "Der vollständige Pfad zu einer Quelldatei."
	},
	"MACOSX_PACKAGE_LOCATION": {
		"name": "MACOSX_PACKAGE_LOCATION",
		"description": "Platzieren Sie eine Quelldatei in einem Anwendungsbundle (MACOSX_BUNDLE), Core Foundation-Paket (BUNDLE) oder Frameworkpaket (FRAMEWORK). Dies ist auf macOS oder iOS anwendbar."
	},
	"OBJECT_DEPENDS": {
		"name": "OBJECT_DEPENDS",
		"description": "Zusätzliche Dateien, von denen eine kompilierte Objektdatei abhängig ist."
	},
	"OBJECT_OUTPUTS": {
		"name": "OBJECT_OUTPUTS",
		"description": "Zusätzliche Ausgaben für eine Ninja- oder Makefile-Generatorregel."
	},
	"SKIP_AUTOGEN": {
		"name": "SKIP_AUTOGEN",
		"description": "Schließen Sie die Quelldatei aus der Verarbeitung mit AUTOMOC, AUTOUIC und AUTORCC aus (bei Qt-Projekten)."
	},
	"SKIP_AUTOMOC": {
		"name": "SKIP_AUTOMOC",
		"description": "Schließen Sie die Quelldatei aus der Verarbeitung mit AUTOMOC aus (bei Qt-Projekten)."
	},
	"SKIP_AUTORCC": {
		"name": "SKIP_AUTORCC",
		"description": "Schließen Sie die Quelldatei aus der Verarbeitung mit AUTORCC aus (bei Qt-Projekten)."
	},
	"SKIP_AUTOUIC": {
		"name": "SKIP_AUTOUIC",
		"description": "Schließen Sie die Quelldatei aus der Verarbeitung mit AUTOUIC aus (bei Qt-Projekten)."
	},
	"SKIP_LINTING": {
		"name": "SKIP_LINTING",
		"description": "Mit dieser Eigenschaft können Sie eine bestimmte Quelldatei aus dem Lintenprozess ausschließen. Der Lintenprozess umfasst das Ausführen von Tools wie <LANG>_CPPLINT, <LANG>_CLANG_TIDY, <LANG>_CPPCHECK und <LANG>_INCLUDE_WHAT_YOU_USE in den Quelldateien sowie das Kompilieren von Headerdateien als Teil von VERIFY_INTERFACE_HEADER_SETS. Wenn Sie SKIP_LINTING für eine Quelldatei festlegen, werden die erwähnten Lintentools für diese bestimmte Datei nicht ausgeführt."
	},
	"SKIP_PRECOMPILE_HEADERS": {
		"name": "SKIP_PRECOMPILE_HEADERS",
		"description": "Gibt an, ob diese Quelldatei vom PRECOMPILE_HEADERS-Feature übersprungen wird."
	},
	"SKIP_UNITY_BUILD_INCLUSION": {
		"name": "SKIP_UNITY_BUILD_INCLUSION",
		"description": "Durch eine Festlegung dieser Eigenschaft auf TRUE wird sichergestellt, dass die Quelldatei von Unity-Builds übersprungen wird, wenn die UNITY_BUILD-Eigenschaft des zugeordneten Ziels TRUE lautet. Die Quelldatei wird stattdessen separat und auf die gleiche Weise kompiliert wie bei deaktivierten Unity-Builds."
	},
	"Swift_DEPENDENCIES_FILE": {
		"name": "Swift_DEPENDENCIES_FILE",
		"description": "Diese Eigenschaft legt den Pfad der Swift-Abhängigkeitsdatei (swiftdeps) für die Quelle fest. Ist kein Pfad angegeben, wird standardmäßig \"<OBJECT>.swiftdeps\" verwendet."
	},
	"Swift_DIAGNOSTICS_FILE": {
		"name": "Swift_DIAGNOSTICS_FILE",
		"description": "Diese Eigenschaft steuert, wo die Swift-Diagnose serialisiert wird."
	},
	"SYMBOLIC": {
		"name": "SYMBOLIC",
		"description": "Ist dies nur ein Name für eine Regel?"
	},
	"UNITY_GROUP": {
		"name": "UNITY_GROUP",
		"description": "Diese Eigenschaft steuert, welchem Bucket die Quelle zugeordnet wird, wenn UNITY_BUILD_MODE auf GROUP festgelegt ist."
	},
	"VS_COPY_TO_OUT_DIR": {
		"name": "VS_COPY_TO_OUT_DIR",
		"description": "Legt das <CopyToOutputDirectory>-Tag für eine Quelldatei in einer Visual Studio-Projektdatei fest. Gültige Werte sind Never, Always und PreserveNewest."
	},
	"VS_CSHARP_<tagname>": {
		"name": "VS_CSHARP_<tagname>",
		"description": "Quelldateispezifische Konfiguration für Visual Studio und CSharp."
	},
	"VS_DEPLOYMENT_CONTENT": {
		"name": "VS_DEPLOYMENT_CONTENT",
		"description": "Hiermit wird eine Quelldatei als Inhalt markiert, der über eine Windows Phone- oder Windows Store-Anwendung bereitgestellt wird, wenn für die Erstellung ein Visual Studio-Generator (<cmake-generators(7)>) verwendet wurde. Der Wert muss entweder auf 1 oder 0 festgelegt werden, und es können Generatorausdrücke (<cmake-generator-expressions(7)>) verwendet werden, damit die Auswahl auf der Buildkonfiguration basiert. Der .vcxproj-Dateieintrag für die Quelldatei wird für die Werte 1 bzw. 0 entweder als DeploymentContent oder ExcludedFromBuild gekennzeichnet."
	},
	"VS_DEPLOYMENT_LOCATION": {
		"name": "VS_DEPLOYMENT_LOCATION",
		"description": "Hiermit wird der Bereitstellungsort für eine Inhaltsquelldatei bei einer Windows Phone- oder Windows Store-Anwendung angegeben, wenn für die Erstellung ein Visual Studio-Generator (<cmake-generators(7)>) verwendet wurde. Diese Eigenschaft ist nur bei Verwendung von VS_DEPLOYMENT_CONTENT anwendbar. Der Wert repräsentiert den relativen Pfad zum App-Paket und gilt für alle Konfigurationen."
	},
	"VS_INCLUDE_IN_VSIX": {
		"name": "VS_INCLUDE_IN_VSIX",
		"description": "Mit dieser booleschen Eigenschaft kann angegeben werden, ob die Datei in ein VSIX-Erweiterungspaket (Visual Studio Integration Extension) einbezogen wird. Dies ist für die Entwicklung von Visual Studio-Erweiterungen erforderlich."
	},
	"VS_RESOURCE_GENERATOR": {
		"name": "VS_RESOURCE_GENERATOR",
		"description": "Diese Eigenschaft gibt den Ressourcengenerator an, der bei dieser Datei verwendet werden soll. Die Standardeinstellung ist PublicResXFileCodeGenerator."
	},
	"VS_SETTINGS": {
		"name": "VS_SETTINGS",
		"description": "Legen Sie alle Elementmetadaten für eine Datei fest."
	},
	"VS_SHADER_DISABLE_OPTIMIZATIONS": {
		"name": "VS_SHADER_DISABLE_OPTIMIZATIONS",
		"description": "Deaktivieren Sie Compileroptimierungen für eine .hlsl-Quelldatei. Dies fügt der Befehlszeile des FxCompiler-Tools das -Od-Flag hinzu. Geben Sie für diese Eigenschaft den Wert \"true\" an, um die Compileroptimierungen zu deaktivieren."
	},
	"VS_SHADER_ENABLE_DEBUG": {
		"name": "VS_SHADER_ENABLE_DEBUG",
		"description": "Aktivieren Sie Debuginformationen für eine .hlsl-Quelldatei. Dies fügt der Befehlszeile des FxCompiler-Tools das -Zi-Flag hinzu. Geben Sie den Wert \"true\" an, um Debuginformationen für den kompilierten Shader zu generieren."
	},
	"VS_SHADER_ENTRYPOINT": {
		"name": "VS_SHADER_ENTRYPOINT",
		"description": "Gibt den Namen des Einstiegspunkts für den Shader einer .hlsl-Quelldatei an."
	},
	"VS_SHADER_FLAGS": {
		"name": "VS_SHADER_FLAGS",
		"description": "Hiermit werden zusätzliche Visual Studio-Shaderflags einer HLSL-Quelldatei festgelegt."
	},
	"VS_SHADER_MODEL": {
		"name": "VS_SHADER_MODEL",
		"description": "Gibt das Shadermodell einer .hlsl-Quelldatei an. Einige Shadertypen können nur mit aktuellen Shadermodellen verwendet werden."
	},
	"VS_SHADER_OBJECT_FILE_NAME": {
		"name": "VS_SHADER_OBJECT_FILE_NAME",
		"description": "Gibt einen Dateinamen für die kompilierte Shader-Objektdatei einer .hlsl-Quelldatei an. Dies fügt der Befehlszeile des FxCompiler-Tools das -Fo-Flag hinzu."
	},
	"VS_SHADER_OUTPUT_HEADER_FILE": {
		"name": "VS_SHADER_OUTPUT_HEADER_FILE",
		"description": "Legen Sie den Dateinamen der Ausgabeheaderdatei fest, die den Objektcode einer .hlsl-Quelldatei enthält."
	},
	"VS_SHADER_TYPE": {
		"name": "VS_SHADER_TYPE",
		"description": "Hiermit wird der Visual Studio-Shadertyp einer HLSL-Quelldatei festgelegt."
	},
	"VS_SHADER_VARIABLE_NAME": {
		"name": "VS_SHADER_VARIABLE_NAME",
		"description": "Legen Sie den Namen der Variable in der Headerdatei fest, die den Objektcode einer .hlsl-Quelldatei enthält."
	},
	"VS_TOOL_OVERRIDE": {
		"name": "VS_TOOL_OVERRIDE",
		"description": "Überschreiben Sie das Visual Studio-Standardtool, das auf die Quelldatei angewendet wird, mit einem neuen Tool, das nicht auf der Dateierweiterung basiert."
	},
	"VS_XAML_TYPE": {
		"name": "VS_XAML_TYPE",
		"description": "Hiermit wird eine XAML-Quelldatei mit einem anderen Typ als dem Standardwert \"Page\" gekennzeichnet. Die gängigste Verwendung ist eine Festlegung der Standarddatei \"App.xaml\" als \"ApplicationDefinition\"."
	},
	"WRAP_EXCLUDE": {
		"name": "WRAP_EXCLUDE",
		"description": "Schließen Sie diese Quelldatei von allen Code-Wrapping-Techniken aus."
	},
	"XCODE_EXPLICIT_FILE_TYPE": {
		"name": "XCODE_EXPLICIT_FILE_TYPE",
		"description": "Hiermit wird das Xcode-Attribut \"explicitFileType\" für dessen Verweis auf eine Quelldatei festgelegt. CMake berechnet basierend auf der Dateierweiterung einen Standardwert, der Wert kann jedoch mit dieser Eigenschaft explizit angegeben werden."
	},
	"XCODE_FILE_ATTRIBUTES": {
		"name": "XCODE_FILE_ATTRIBUTES",
		"description": "Hiermit werden der Xcode-Einstellung ATTRIBUTES für dessen Verweis auf eine Quelldatei Werte hinzugefügt. Diese Eigenschaft kann unter anderem dazu genutzt werden, die Rolle für eine MIG-Datei festzulegen:"
	},
	"XCODE_LAST_KNOWN_FILE_TYPE": {
		"name": "XCODE_LAST_KNOWN_FILE_TYPE",
		"description": "Legen Sie das Xcode-lastKnownFileType-Attribut für dessen Verweis auf eine Quelldatei fest. CMake berechnet basierend auf der Dateierweiterung einen Standardwert, kann jedoch auch explizit mit dieser Eigenschaft Berechnungen durchführen."
	},
	"ATTACHED_FILES": {
		"name": "ATTACHED_FILES",
		"description": "Fügen Sie einer Dashboardübermittlung eine Dateiliste an."
	},
	"ATTACHED_FILES_ON_FAIL": {
		"name": "ATTACHED_FILES_ON_FAIL",
		"description": "Fügen Sie einer Dashboardübermittlung eine Dateiliste an, falls der Test fehlschlägt."
	},
	"COST": {
		"name": "COST",
		"description": "Diese Eigenschaft beschreibt die Kosten eines Tests. Wenn parallele Tests aktiviert sind, werden Tests im Testsatz in absteigender Reihenfolge der Kosten ausgeführt. Projekte können die Kosten eines Tests explizit definieren, indem diese Eigenschaft auf einen Gleitkommawert festgelegt wird."
	},
	"DEPENDS": {
		"name": "DEPENDS",
		"description": "Gibt an, dass dieser Test erst nach allen in der Liste aufgeführten Tests ausgeführt wird."
	},
	"DISABLED": {
		"name": "DISABLED",
		"description": "Wird diese Eigenschaft auf TRUE festgelegt, wird der Test übersprungen und der Status auf \"Not Run\" festgelegt. Ein Test mit dem Status DISABLED wird in der Gesamtzahl der Tests nicht berücksichtigt, und sein Abschlussstatus wird als \"Disabled\" an CDash gemeldet."
	},
	"ENVIRONMENT": {
		"name": "ENVIRONMENT",
		"description": "Geben Sie Umgebungsvariablen an, die zum Ausführen eines Tests zu definieren sind."
	},
	"ENVIRONMENT_MODIFICATION": {
		"name": "ENVIRONMENT_MODIFICATION",
		"description": "Geben Sie Umgebungsvariablen an, die zum Ausführen eines Tests geändert werden sollen. Beachten Sie, dass die von dieser Eigenschaft ausgeführten Vorgänge ausgeführt werden, nachdem die ENVIRONMENT-Eigenschaft bereits angewendet wurde."
	},
	"FAIL_REGULAR_EXPRESSION": {
		"name": "FAIL_REGULAR_EXPRESSION",
		"description": "Wenn die Testausgabe (stdout oder stderr) diesem regulären Ausdruck entspricht, tritt unabhängig vom Beendigungscode des Prozesses ein Testfehler auf. Tests, die das durch TIMEOUT angegebene Timeout überschreiten, schlagen unabhängig von FAIL_REGULAR_EXPRESSION fehl. Alle Testfehler ungleich Null für Rückgabecode oder Systemebene, einschließlich Segmentierungsfehlern, Signalabbrüchen oder Heapfehlern, führen auch dann zu einem Testfehler, wenn der reguläre Ausdruck nicht übereinstimmt."
	},
	"FIXTURES_CLEANUP": {
		"name": "FIXTURES_CLEANUP",
		"description": "Gibt eine Liste mit Fixtures an, für die der Test als Bereinigungstest zu verstehen ist. Diese Fixturenamen unterscheiden sich von den Testfallnamen und müssen keine Ähnlichkeit mit den Namen von Tests aufweisen, die mit ihnen in Zusammenhang stehen."
	},
	"FIXTURES_REQUIRED": {
		"name": "FIXTURES_REQUIRED",
		"description": "Gibt eine Liste mit Fixtures an, die für den Test vorausgesetzt wird. Bei Fixturenamen muss die Groß- und Kleinschreibung beachtet werden, und sie müssen keine Ähnlichkeit mit den Namen von Tests haben."
	},
	"FIXTURES_SETUP": {
		"name": "FIXTURES_SETUP",
		"description": "Gibt eine Liste mit Fixtures an, für die der Test als Einrichtungstest zu verstehen ist. Diese Fixturenamen unterscheiden sich von den Testfallnamen und müssen keine Ähnlichkeit mit den Namen von Tests aufweisen, die mit ihnen in Zusammenhang stehen."
	},
	"GENERATED_RESOURCE_SPEC_FILE": {
		"name": "GENERATED_RESOURCE_SPEC_FILE",
		"description": "Pfad zu der von diesem Test generierten dynamischen Ressourcenspezifikationsdatei <ctest-resource-dynamically-generated-spec-file>."
	},
	"MEASUREMENT": {
		"name": "MEASUREMENT",
		"description": "Geben Sie eine CDASH-Maßeinheit und einen CDASH-Wert an, der für einen Test gemeldet werden soll."
	},
	"PASS_REGULAR_EXPRESSION": {
		"name": "PASS_REGULAR_EXPRESSION",
		"description": "Die Testausgabe (stdout oder stderr) muss mit diesem regulären Ausdruck übereinstimmen, damit der Test erfolgreich ausgeführt werden kann. Der Beendigungscode des Prozesses wird ignoriert. Tests, die das durch TIMEOUT angegebene Timeout überschreiten, können unabhängig von PASS_REGULAR_EXPRESSION weiterhin fehlschlagen. Testfehler auf Systemebene, einschließlich Segmentierungsfehlern, Signalabbrüchen oder Heapfehlern, können den Test auch dann nicht bestehen, wenn PASS_REGULAR_EXPRESSION übereinstimmen."
	},
	"PROCESSORS": {
		"name": "PROCESSORS",
		"description": "Mit dieser Einstellung legen Sie fest, wie viele Prozessslots für den Test erforderlich sind. Die Standardeinstellung ist 1 Prozessor."
	},
	"PROCESSOR_AFFINITY": {
		"name": "PROCESSOR_AFFINITY",
		"description": "Setzen Sie diese Einstellung auf einen \"true\"-Wert, damit CTest den Testvorgang mit CPU-Affinität für einen festen Satz an Prozessoren startet. Wenn CTest aktiviert ist und für die aktuelle Plattform unterstützt wird, platziert CTest beim Starten des Testprozesses einen Satz Prozessoren in der CPU-Affinitätsmaske. Die Anzahl an Prozessoren im Satz wird durch die Testeigenschaft PROCESSORS oder die Anzahl an Prozessoren festgelegt, die CTest zur Verfügung stehen (je nachdem, welcher Wert kleiner ist). Der Satz der ausgewählten Prozessoren wird von den Prozessoren getrennt, die anderen parallel ausgeführten Tests zugeordnet sind, bei denen die Eigenschaft PROCESSOR_AFFINITY ebenfalls aktiviert ist."
	},
	"REQUIRED_FILES": {
		"name": "REQUIRED_FILES",
		"description": "Eine Liste der Dateien, die zum Ausführen des Tests erforderlich sind. Die Dateinamen sind relativ zum Test WORKING_DIRECTORY, sofern kein absoluter Pfad angegeben wurde."
	},
	"RESOURCE_GROUPS": {
		"name": "RESOURCE_GROUPS",
		"description": "Hiermit werden die für einen Test erforderlichen Ressourcen in einer für den Test sinnvollen Gruppierung angegeben. Weitere Informationen zur Integration dieser Eigenschaft in das CTest-Feature für die Ressourcenzuweisung finden Sie unter <ctest-resource-allocation>."
	},
	"RESOURCE_LOCK": {
		"name": "RESOURCE_LOCK",
		"description": "Geben Sie eine Liste mit Ressourcen an, die durch diesen Test gesperrt werden."
	},
	"RUN_SERIAL": {
		"name": "RUN_SERIAL",
		"description": "Führen Sie diesen Test nicht gleichzeitig mit anderen Tests aus."
	},
	"SKIP_REGULAR_EXPRESSION": {
		"name": "SKIP_REGULAR_EXPRESSION",
		"description": "Wenn die Testausgabe (stderr oder stdout) diesem regulären Ausdruck entspricht, wird der Test unabhängig vom Beendigungscode des Prozesses als übersprungen markiert. Tests, die das durch TIMEOUT angegebene Timeout überschreiten, können unabhängig von SKIP_REGULAR_EXPRESSION weiterhin fehlschlagen. Testfehler auf Systemebene, einschließlich Segmentierungsfehlern, Signalabbrüchen oder Heapfehlern, können den Test auch dann als fehlerhaft kennzeichnen, wenn der reguläre Ausdruck übereinstimmt."
	},
	"SKIP_RETURN_CODE": {
		"name": "SKIP_RETURN_CODE",
		"description": "Rückgabecode, der einen Test als \"übersprungen\" kennzeichnet."
	},
	"TIMEOUT": {
		"name": "TIMEOUT",
		"description": "Gibt an, wie viele Sekunden dieser Test dauert."
	},
	"TIMEOUT_AFTER_MATCH": {
		"name": "TIMEOUT_AFTER_MATCH",
		"description": "Ändern Sie die Timeoutdauer eines Tests, nachdem in der Ausgabe eine übereinstimmende Zeile gefunden wurde."
	},
	"TIMEOUT_SIGNAL_GRACE_PERIOD": {
		"name": "TIMEOUT_SIGNAL_GRACE_PERIOD",
		"description": "Wenn die TIMEOUT_SIGNAL_NAME-Testeigenschaft festgelegt ist, gibt diese Eigenschaft die Anzahl der Sekunden an, die nach dem Senden des benutzerdefinierten Signals auf das Beenden eines Testprozesses gewartet werden soll. Andernfalls hat diese Eigenschaft keine Bedeutung."
	},
	"TIMEOUT_SIGNAL_NAME": {
		"name": "TIMEOUT_SIGNAL_NAME",
		"description": "Geben Sie ein benutzerdefiniertes Signal an, das an einen Testprozess gesendet werden soll, wenn das Timeout erreicht ist. Dies ist nur auf Plattformen verfügbar, die POSIX-Signale unterstützen. Es ist unter Windows nicht verfügbar."
	},
	"WILL_FAIL": {
		"name": "WILL_FAIL",
		"description": "Bei \"true\" werden die Erfolg-/Fehlertestkriterien invertiert. Tests, für die WILL_FAIL true ist, schlagen mit Rückgabecode 0 fehl, und bestehen mit Rückgabecode ungleich 0. Tests, die das durch TIMEOUT angegebene Timeout überschreiten, können unabhängig von WILL_FAIL weiterhin fehlschlagen. Testfehler auf Systemebene, einschließlich Segmentierungsfehlern, Signalabbrüchen oder Heapfehlern, können den Test auch dann als fehlerhaft kennzeichnen, wenn WILL_FAIL true ist."
	},
	"WORKING_DIRECTORY": {
		"name": "WORKING_DIRECTORY",
		"description": "Das Verzeichnis, von dem die zu testende ausführbare Datei aufgerufen wird."
	},
	"AIX_EXPORT_ALL_SYMBOLS": {
		"name": "AIX_EXPORT_ALL_SYMBOLS",
		"description": "In AIX exportiert CMake automatisch alle Symbole aus freigegebenen Bibliotheken und ausführbaren Dateien, bei denen die ENABLE_EXPORTS-Zieleigenschaft aktiviert ist. Deaktivieren Sie diese boolesche Eigenschaft explizit, um dieses Verhalten zu unterdrücken und standardmäßig keine Symbole zu exportieren. In diesem Fall wird vorausgesetzt, dass das Projekt andere Methoden zum Exportieren von Symbolen verwendet."
	},
	"ALIASED_TARGET": {
		"name": "ALIASED_TARGET",
		"description": "Name des Ziels, das durch dieses Ziel repräsentiert wird."
	},
	"ALIAS_GLOBAL": {
		"name": "ALIAS_GLOBAL",
		"description": "Eine schreibgeschützte Eigenschaft, die angibt, ob ein ALIAS-Ziel global sichtbar ist."
	},
	"ANDROID_ANT_ADDITIONAL_OPTIONS": {
		"name": "ANDROID_ANT_ADDITIONAL_OPTIONS",
		"description": "Legen Sie die zusätzlichen Optionen für das Buildsystem Android Ant fest. Dies ist ein Zeichenfolgenwert, der alle Befehlszeilenoptionen für den Ant-Build enthält. Diese Eigenschaft wird durch den Wert der Variable CMAKE_ANDROID_ANT_ADDITIONAL_OPTIONS initialisiert, wenn sie beim Erstellen eines Ziels gesetzt wird."
	},
	"ANDROID_API": {
		"name": "ANDROID_API",
		"description": "Bei der Crosskompilierung für Android mit NVIDIA Nsight Tegra Visual Studio Edition legt diese Eigenschaft die Version der Android-Ziel-API fest (z. B. 15). Die Versionsnummer muss eine positive dezimale Ganzzahl sein. Diese Eigenschaft wird durch den Wert der Variable CMAKE_ANDROID_API initialisiert, wenn sie beim Erstellen eines Ziels festgelegt wird."
	},
	"ANDROID_API_MIN": {
		"name": "ANDROID_API_MIN",
		"description": "Legen Sie die Mindest-API-Version von Android fest (z. B. 9). Die Versionsnummer muss eine positive dezimale Ganzzahl sein. Diese Eigenschaft wird durch den Wert der Variable CMAKE_ANDROID_API_MIN initialisiert, wenn sie beim Erstellen eines Ziels festgelegt wird. Nativer Code wird mit dieser API-Version erstellt."
	},
	"ANDROID_ARCH": {
		"name": "ANDROID_ARCH",
		"description": "Bei der Crosskompilierung für Android mit NVIDIA Nsight Tegra Visual Studio Edition legt diese Eigenschaft die Android-Zielarchitektur fest."
	},
	"ANDROID_ASSETS_DIRECTORIES": {
		"name": "ANDROID_ASSETS_DIRECTORIES",
		"description": "Legen Sie fest, dass die Android-Ressourcenverzeichnisse vor dem Buildvorgang in den Ordner mit den Hauptressourcen kopiert werden. Dies ist eine Zeichenfolgeneigenschaft, die die mittels Semikolon getrennten Verzeichnispfade enthält. Diese Eigenschaft wird durch den Wert der Variable CMAKE_ANDROID_ASSETS_DIRECTORIES initialisiert, wenn sie beim Erstellen eines Ziels festgelegt wird."
	},
	"ANDROID_GUI": {
		"name": "ANDROID_GUI",
		"description": "Bei der Crosskompilierung für Android mit NVIDIA Nsight Tegra Visual Studio Edition gibt diese Eigenschaft an, ob unter Android eine ausführbare Datei als Anwendungspaket erstellt wird."
	},
	"ANDROID_JAR_DEPENDENCIES": {
		"name": "ANDROID_JAR_DEPENDENCIES",
		"description": "Legen Sie die Android-Eigenschaft fest, die JAR-Abhängigkeiten angibt. Dies ist eine Eigenschaft mit Zeichenfolgenwert. Diese Eigenschaft wird durch den Wert der Variable CMAKE_ANDROID_JAR_DEPENDENCIES initialisiert, wenn sie beim Erstellen eines Ziels festgelegt wird."
	},
	"ANDROID_JAR_DIRECTORIES": {
		"name": "ANDROID_JAR_DIRECTORIES",
		"description": "Legen Sie die Android-Eigenschaft fest, die Verzeichnisse für die Suche von JAR-Bibliotheken angibt."
	},
	"ANDROID_JAVA_SOURCE_DIR": {
		"name": "ANDROID_JAVA_SOURCE_DIR",
		"description": "Legen Sie die Android-Eigenschaft fest, die die Stammverzeichnisse des Java-Quellcodes definiert. Dies ist eine Zeichenfolgeneigenschaft, die die mittels Semikolon getrennten Verzeichnispfade enthält. Diese Eigenschaft wird durch den Wert der Variable CMAKE_ANDROID_JAVA_SOURCE_DIR initialisiert, wenn sie beim Erstellen eines Ziels festgelegt wird."
	},
	"ANDROID_NATIVE_LIB_DEPENDENCIES": {
		"name": "ANDROID_NATIVE_LIB_DEPENDENCIES",
		"description": "Legen Sie die Android-Eigenschaft fest, die die .so-Abhängigkeiten angibt. Dies ist eine Zeichenfolgeneigenschaft."
	},
	"ANDROID_NATIVE_LIB_DIRECTORIES": {
		"name": "ANDROID_NATIVE_LIB_DIRECTORIES",
		"description": "Legen Sie die Android-Eigenschaft fest, die Verzeichnisse für die Suche von .so-Bibliotheken angibt."
	},
	"ANDROID_PROCESS_MAX": {
		"name": "ANDROID_PROCESS_MAX",
		"description": "Legen Sie die Android-Eigenschaft fest, die die maximale Anzahl paralleler Compilerprozesse des Android-NDK definiert (z. B. 4). Diese Eigenschaft wird durch den Wert der Variable CMAKE_ANDROID_PROCESS_MAX initialisiert, wenn sie beim Erstellen eines Ziels festgelegt wird."
	},
	"ANDROID_PROGUARD": {
		"name": "ANDROID_PROGUARD",
		"description": "Wird diese Eigenschaft auf \"true\" gesetzt, wird der Code durch das ProGuard-Tool verkleinert, optimiert und verschleiert, indem ungenutzter Code entfernt wird und die Namen von Klassen, Feldern und Methoden durch semantisch unklare Namen ersetzt werden. Diese Eigenschaft wird durch den Wert der Variable CMAKE_ANDROID_PROGUARD initialisiert, wenn sie beim Erstellen eines Ziels festgelegt wird."
	},
	"ANDROID_PROGUARD_CONFIG_PATH": {
		"name": "ANDROID_PROGUARD_CONFIG_PATH",
		"description": "Legen Sie die Android-Eigenschaft fest, die den Speicherort der ProGuard-Konfigurationsdatei enthält. Lassen Sie sie leer, um den Standard zu verwenden. Dies ist eine Zeichenfolgeneigenschaft, die den Pfad der ProGuard-Konfigurationsdatei enthält. Diese Eigenschaft wird durch den Wert der Variable CMAKE_ANDROID_PROGUARD_CONFIG_PATH initialisiert, wenn sie beim Erstellen eines Ziels festgelegt wird."
	},
	"ANDROID_SECURE_PROPS_PATH": {
		"name": "ANDROID_SECURE_PROPS_PATH",
		"description": "Legen Sie die Android-Eigenschaft fest, die den Speicherort der Datei der sicheren Eigenschaften angibt. Dies ist eine Zeichenfolgeneigenschaft, die den Dateipfad enthält. Diese Eigenschaft wird durch den Wert der Variable CMAKE_ANDROID_SECURE_PROPS_PATH initialisiert, wenn sie beim Erstellen eines Ziels festgelegt wird."
	},
	"ANDROID_SKIP_ANT_STEP": {
		"name": "ANDROID_SKIP_ANT_STEP",
		"description": "Legen Sie die Android-Eigenschaft fest, die definiert, ob der Ant-Buildschritt übersprungen wird. Dies ist eine boolesche Eigenschaft, deren Initialisierung durch den Wert der Variable CMAKE_ANDROID_SKIP_ANT_STEP erfolgt, wenn sie beim Erstellen eines Ziels festgelegt wird."
	},
	"ANDROID_STL_TYPE": {
		"name": "ANDROID_STL_TYPE",
		"description": "Bei der Crosskompilierung für Android mit NVIDIA Nsight Tegra Visual Studio Edition gibt diese Eigenschaft die Art des STL-Supports für das Projekt an. Dies ist eine Zeichenfolgeneigenschaft, die auf einen der folgenden Werte gesetzt werden kann:"
	},
	"ARCHIVE_OUTPUT_DIRECTORY": {
		"name": "ARCHIVE_OUTPUT_DIRECTORY",
		"description": "Das Ausgabeverzeichnis, in dem XXX-Zieldateien erstellt werden."
	},
	"ARCHIVE_OUTPUT_DIRECTORY_<CONFIG>": {
		"name": "ARCHIVE_OUTPUT_DIRECTORY_<CONFIG>",
		"description": "Ausgabeverzeichnis je Konfiguration für ARCHIVE-Zieldateien."
	},
	"ARCHIVE_OUTPUT_NAME": {
		"name": "ARCHIVE_OUTPUT_NAME",
		"description": "Ausgabename für XXX-Zieldateien."
	},
	"ARCHIVE_OUTPUT_NAME_<CONFIG>": {
		"name": "ARCHIVE_OUTPUT_NAME_<CONFIG>",
		"description": "Ausgabename je Konfiguration für ARCHIVE-Zieldateien."
	},
	"AUTOGEN_BETTER_GRAPH_MULTI_CONFIG": {
		"name": "AUTOGEN_BETTER_GRAPH_MULTI_CONFIG",
		"description": "AUTOGEN_BETTER_GRAPH_MULTI_CONFIG ist eine boolesche Eigenschaft, die auf einem Ziel festgelegt werden kann, um bessere Abhängigkeitsdiagramm für Generatoren mit mehreren Konfigurationen zu erhalten. Wenn diese Eigenschaft aktiviert ist, generiert CMake mehr Konfigurationsziele. Daher ist die Abhängigkeitsdiagramm für Generatoren mit mehreren Konfigurationen genauer, und einige Neukompilierungen werden vermieden."
	},
	"AUTOGEN_BUILD_DIR": {
		"name": "AUTOGEN_BUILD_DIR",
		"description": "Das Verzeichnis, in dem AUTOMOC, AUTOUIC und AUTORCC Dateien für das Ziel generieren."
	},
	"AUTOGEN_COMMAND_LINE_LENGTH_MAX": {
		"name": "AUTOGEN_COMMAND_LINE_LENGTH_MAX",
		"description": "Grenzwert für die Befehlszeilenlänge für autogen-Ziele, d. h. „moc“ oder „uic“, der die Verwendung von Antwortdateien unter Windows auslöst, anstatt alle Argumente an die Befehlszeile zu übergeben."
	},
	"AUTOGEN_ORIGIN_DEPENDS": {
		"name": "AUTOGEN_ORIGIN_DEPENDS",
		"description": "Wechseln Sie zum Weiterleiten von Ursprungszielabhängigkeiten an das entsprechende <ORIGIN>_autogen-Ziel."
	},
	"AUTOGEN_PARALLEL": {
		"name": "AUTOGEN_PARALLEL",
		"description": "Die Anzahl paralleler moc- oder uic-Prozesse, die bei Verwendung von AUTOMOC und AUTOUIC gestartet werden."
	},
	"AUTOGEN_TARGET_DEPENDS": {
		"name": "AUTOGEN_TARGET_DEPENDS",
		"description": "Zusätzliche Zielabhängigkeiten des entsprechenden <ORIGIN>_autogen-Ziels."
	},
	"AUTOGEN_USE_SYSTEM_INCLUDE": {
		"name": "AUTOGEN_USE_SYSTEM_INCLUDE",
		"description": "AUTOGEN_USE_SYSTEM_INCLUDE ist eine boolesche Eigenschaft, die für ein Ziel festgelegt werden kann, um anzugeben, dass das Includeverzeichnis des autogen-Ziels als System-Includeverzeichnis oder normales Includeverzeichnis zum Ziel hinzugefügt werden soll."
	},
	"AUTOMOC": {
		"name": "AUTOMOC",
		"description": "Hiermit wird angegeben, ob das Ziel mit AUTOMOC verarbeitet werden soll (für Qt-Projekte)."
	},
	"AUTOMOC_COMPILER_PREDEFINES": {
		"name": "AUTOMOC_COMPILER_PREDEFINES",
		"description": "Von AUTOMOC verwendeter boolescher Wert, der bestimmt, ob die Vordefinitionsdatei \"moc_predefs.h\" des Compilers generiert wird."
	},
	"AUTOMOC_DEPEND_FILTERS": {
		"name": "AUTOMOC_DEPEND_FILTERS",
		"description": "Von AUTOMOC verwendete Filterdefinitionen zur Extraktion von Dateinamen aus einer Quelldatei, die als zusätzliche Abhängigkeiten der MOC-Datei der Quelldatei registriert sind."
	},
	"AUTOMOC_EXECUTABLE": {
		"name": "AUTOMOC_EXECUTABLE",
		"description": "AUTOMOC_EXECUTABLE ist ein Dateipfad, der für Dateien mit AUTOMOC-Aktivierung auf die ausführbare moc-Datei verweist. Durch das Festlegen dieser Eigenschaft überspringt CMake die automatische Erkennung der moc-Binärdatei sowie die üblicherweise ausgeführten Integritätsprüfungen, mit denen die Verfügbarkeit und ordnungsgemäße Funktion der Binärdatei sichergestellt wird."
	},
	"AUTOMOC_MACRO_NAMES": {
		"name": "AUTOMOC_MACRO_NAMES",
		"description": "Eine durch Semikolon getrennte Liste mit Makronamen. Sie wird von AUTOMOC verwendet, um zu bestimmen, ob eine C++-Datei von „moc“ verarbeitet werden muss."
	},
	"AUTOMOC_MOC_OPTIONS": {
		"name": "AUTOMOC_MOC_OPTIONS",
		"description": "Zusätzliche Optionen für moc beim Verwenden von AUTOMOC"
	},
	"AUTOMOC_PATH_PREFIX": {
		"name": "AUTOMOC_PATH_PREFIX",
		"description": "Wenn diese Eigenschaft auf ON festgelegt ist, generiert CMake für Qt-Ziele mit AUTOMOC-Aktivierung die Pfadpräfixoption \"-p\" für \"moc\"."
	},
	"AUTORCC": {
		"name": "AUTORCC",
		"description": "Hiermit wird angegeben, ob das Ziel mit AUTORCC verarbeitet werden soll (für Qt-Projekte)."
	},
	"AUTORCC_EXECUTABLE": {
		"name": "AUTORCC_EXECUTABLE",
		"description": "AUTORCC_EXECUTABLE ist ein Dateipfad, der für Dateien mit AUTORCC-Aktivierung auf die ausführbare rcc-Datei verweist. Durch das Festlegen dieser Eigenschaft überspringt CMake die automatische Erkennung der rcc-Binärdatei sowie die üblicherweise ausgeführten Integritätsprüfungen, mit denen die Verfügbarkeit und ordnungsgemäße Funktion der Binärdatei sichergestellt wird."
	},
	"AUTOUIC": {
		"name": "AUTOUIC",
		"description": "Hiermit wird angegeben, ob das Ziel mit AUTOUIC verarbeitet werden soll (für Qt-Projekte)."
	},
	"AUTOUIC_EXECUTABLE": {
		"name": "AUTOUIC_EXECUTABLE",
		"description": "AUTOUIC_EXECUTABLE ist ein Dateipfad, der für Dateien mit AUTOUIC-Aktivierung auf die ausführbare uic-Datei verweist. Durch das Festlegen dieser Eigenschaft überspringt CMake die automatische Erkennung der uic-Binärdatei sowie die üblicherweise ausgeführten Integritätsprüfungen, mit denen die Verfügbarkeit und ordnungsgemäße Funktion der Binärdatei sichergestellt wird."
	},
	"AUTOUIC_SEARCH_PATHS": {
		"name": "AUTOUIC_SEARCH_PATHS",
		"description": "Suchpfadliste, die von AUTOUIC verwendet wird, um enthaltene .ui-Dateien zu finden."
	},
	"BUILD_RPATH": {
		"name": "BUILD_RPATH",
		"description": "Eine durch Semikolons getrennte Liste mit RPATH-Einträgen (Runtime Path), die binären Dateien hinzugefügt werden sollen, die in der Buildstruktur verknüpft sind (für Plattformen, die dies unterstützen). Standardmäßig legt CMake den Laufzeitpfad von Binärdateien in der Buildstruktur so fest, dass er Suchpfade enthält, von denen es weiß, dass sie erforderlich sind, um die freigegebenen Bibliotheken zu finden, die sie verknüpfen. Projekte können BUILD_RPATH festlegen, um zusätzliche Suchpfade anzugeben."
	},
	"BUILD_RPATH_USE_ORIGIN": {
		"name": "BUILD_RPATH_USE_ORIGIN",
		"description": "Gibt an, ob relative Pfade für den RPATH-Wert des Builds verwendet werden sollen."
	},
	"BUILD_WITH_INSTALL_NAME_DIR": {
		"name": "BUILD_WITH_INSTALL_NAME_DIR",
		"description": "BUILD_WITH_INSTALL_NAME_DIR ist ein boolescher Wert, der angibt, ob die macOS-Variable install_name eines Ziels im Buildbaum das von INSTALL_NAME_DIR bereitgestellte Verzeichnis verwendet. Diese Einstellung gilt nur für Ziele unter macOS."
	},
	"BUILD_WITH_INSTALL_RPATH": {
		"name": "BUILD_WITH_INSTALL_RPATH",
		"description": "BUILD_WITH_INSTALL_RPATH ist ein boolescher Wert, der angibt, ob das Ziel im Buildbaum mit INSTALL_RPATH verknüpft wird. Dies hat Vorrang gegenüber SKIP_BUILD_RPATH und macht eine erneute Verknüpfung vor der Installation überflüssig."
	},
	"BUNDLE": {
		"name": "BUNDLE",
		"description": "Dieses Ziel ist ein CFBundle unter macOS."
	},
	"BUNDLE_EXTENSION": {
		"name": "BUNDLE_EXTENSION",
		"description": "Die Dateierweiterung, die unter macOS und iOS zum Benennen eines BUNDLE-, FRAMEWORK- oder MACOSX_BUNDLE-Ziels verwendet wird."
	},
	"COMMON_LANGUAGE_RUNTIME": {
		"name": "COMMON_LANGUAGE_RUNTIME",
		"description": "Durch das Festlegen dieser Zieleigenschaft wird das Ziel für einen Buildvorgang mit C++/CLI-Unterstützung konfiguriert."
	},
	"COMPATIBLE_INTERFACE_BOOL": {
		"name": "COMPATIBLE_INTERFACE_BOOL",
		"description": "Eigenschaften, die mit ihrer Verknüpfungsschnittstelle kompatibel sein müssen"
	},
	"COMPATIBLE_INTERFACE_NUMBER_MAX": {
		"name": "COMPATIBLE_INTERFACE_NUMBER_MAX",
		"description": "Eigenschaften, deren Maximalwert der Verknüpfungsschnittstelle verwendet wird."
	},
	"COMPATIBLE_INTERFACE_NUMBER_MIN": {
		"name": "COMPATIBLE_INTERFACE_NUMBER_MIN",
		"description": "Eigenschaften, deren Minimalwert der Verknüpfungsschnittstelle verwendet wird."
	},
	"COMPATIBLE_INTERFACE_STRING": {
		"name": "COMPATIBLE_INTERFACE_STRING",
		"description": "Eigenschaften, die mit ihrer Verknüpfungsschnittstelle zeichenfolgenkompatibel sein müssen"
	},
	"COMPILE_FEATURES": {
		"name": "COMPILE_FEATURES",
		"description": "Für dieses Ziel aktivierte Compilerfeatures."
	},
	"COMPILE_PDB_NAME": {
		"name": "COMPILE_PDB_NAME",
		"description": "Ausgabename für die MS-Debugsymbol-.pdb-Datei, die der Compiler beim Erstellen von Quelldateien generiert."
	},
	"COMPILE_PDB_NAME_<CONFIG>": {
		"name": "COMPILE_PDB_NAME_<CONFIG>",
		"description": "Ausgabename (pro Konfiguration) für die MS-Debugsymbol-.pdb-Datei, die der Compiler beim Erstellen von Quelldateien generiert."
	},
	"COMPILE_PDB_OUTPUT_DIRECTORY": {
		"name": "COMPILE_PDB_OUTPUT_DIRECTORY",
		"description": "Ausgabeverzeichnis für die MS-Debugsymbol-.pdb-Datei, die der Compiler beim Erstellen von Quelldateien generiert."
	},
	"COMPILE_PDB_OUTPUT_DIRECTORY_<CONFIG>": {
		"name": "COMPILE_PDB_OUTPUT_DIRECTORY_<CONFIG>",
		"description": "Ausgabeverzeichnis (pro Konfiguration) für die MS-Debugsymbol-.pdb-Datei, die der Compiler beim Erstellen von Quelldateien generiert."
	},
	"COMPILE_WARNING_AS_ERROR": {
		"name": "COMPILE_WARNING_AS_ERROR",
		"description": "Geben Sie an, ob Warnungen bei der Kompilierung als Fehler behandelt werden sollen. Wenn diese Option aktiviert ist, wird eine Kennzeichnung hinzugefügt, um Warnungen bei der Kompilierung als Fehler zu behandeln. Wenn die Option „cmake --compile-no-warning-as-error“ in der Befehlszeile von cmake angegeben ist, wird diese Eigenschaft ignoriert."
	},
	"<CONFIG>_OUTPUT_NAME": {
		"name": "<CONFIG>_OUTPUT_NAME",
		"description": "Alter Zieldateibasisname (pro Konfiguration). Verwenden Sie stattdessen OUTPUT_NAME_."
	},
	"<CONFIG>_POSTFIX": {
		"name": "<CONFIG>_POSTFIX",
		"description": "Postfix, das für Konfiguration <CONFIG> dem Namen der Zieldatei angehängt wird."
	},
	"CROSSCOMPILING_EMULATOR": {
		"name": "CROSSCOMPILING_EMULATOR",
		"description": "Führen Sie mit dem gegebenen Emulator bei der Crosskompilierung erstellte ausführbare Dateien aus. Für ausführbare Zielsystemdateien wird dieser Befehl den Befehlen \"add_test\", \"add_custom_command\" und \"add_custom_target\" als Präfix hinzugefügt."
	},
	"CUDA_ARCHITECTURES": {
		"name": "CUDA_ARCHITECTURES",
		"description": "Eine Liste der Architekturen, für die der Gerätecode generiert werden soll."
	},
	"CUDA_CUBIN_COMPILATION": {
		"name": "CUDA_CUBIN_COMPILATION",
		"description": "Kompilieren Sie in Objektbibliotheken CUDA-Quellen zu CUBIN-Dateien (anstatt in OBJ-Dateien)."
	},
	"CUDA_EXTENSIONS": {
		"name": "CUDA_EXTENSIONS",
		"description": "Ein boolescher Wert, der angibt, ob compilerspezifische Erweiterungen angefordert werden."
	},
	"CUDA_FATBIN_COMPILATION": {
		"name": "CUDA_FATBIN_COMPILATION",
		"description": "Kompilieren Sie in Objektbibliotheken CUDA-Quellen zu FATBIN-Dateien (anstatt in OBJ-Dateien)."
	},
	"CUDA_OPTIX_COMPILATION": {
		"name": "CUDA_OPTIX_COMPILATION",
		"description": "Kompilieren Sie in Objektbibliotheken CUDA-Quellen zu OPTIXIR-Dateien (anstatt in OBJ-Dateien)."
	},
	"CUDA_PTX_COMPILATION": {
		"name": "CUDA_PTX_COMPILATION",
		"description": "Kompilieren Sie in Objektbibliotheken CUDA-Quellen zu .ptx-Dateien (anstatt in .obj-Dateien)."
	},
	"CUDA_RESOLVE_DEVICE_SYMBOLS": {
		"name": "CUDA_RESOLVE_DEVICE_SYMBOLS",
		"description": "Nur CUDA: Aktiviert bei Bedarf eine Geräteverknüpfung für das spezifische Bibliotheksziel."
	},
	"CUDA_RUNTIME_LIBRARY": {
		"name": "CUDA_RUNTIME_LIBRARY",
		"description": "Hiermit wird die CUDA-Laufzeitbibliothek für Compiler ausgewählt, die CUDA als Zielsprache verwenden."
	},
	"CUDA_SEPARABLE_COMPILATION": {
		"name": "CUDA_SEPARABLE_COMPILATION",
		"description": "Nur CUDA: aktiviert das separate Kompilieren von Gerätecode."
	},
	"CUDA_STANDARD": {
		"name": "CUDA_STANDARD",
		"description": "Der Cuda/C++-Standard, dessen Features zum Erstellen dieses Ziels angefordert werden."
	},
	"CUDA_STANDARD_REQUIRED": {
		"name": "CUDA_STANDARD_REQUIRED",
		"description": "Ein boolescher Wert, der beschreibt, ob der Wert von CUDA_STANDARD eine Anforderung darstellt."
	},
	"CXX_EXTENSIONS": {
		"name": "CXX_EXTENSIONS",
		"description": "Ein boolescher Wert, der angibt, ob compilerspezifische Erweiterungen angefordert werden."
	},
	"CXX_MODULE_DIRS": {
		"name": "CXX_MODULE_DIRS",
		"description": "Semikolon-getrennte Liste der Basisverzeichnisse des Standard-C++-Modulsatzes des Ziels (d. h. des Dateisatzes mit Name und Typ CXX_MODULES). Die Eigenschaft unterstützt Generatorausdrücke <cmake-generator-expressions(7)>."
	},
	"CXX_MODULE_DIRS_<NAME>": {
		"name": "CXX_MODULE_DIRS_<NAME>",
		"description": "Semikolon-getrennte Liste der Basisverzeichnisse des <NAME> C++-Modulsatzes des Ziels, das den Satztyp CXX_MODULES hat. Die Eigenschaft unterstützt Generatorausdrücke <cmake-generator-expressions(7)>."
	},
	"CXX_MODULE_SET": {
		"name": "CXX_MODULE_SET",
		"description": "Semikolon-getrennte Liste von Dateien im Standard-C++-Modulsatz des Ziels (d. h. der Dateisatz mit Name und Typ CXX_MODULES). Wenn einer der Pfade relativ ist, werden sie relativ zum Quellverzeichnis des Ziels berechnet. Die Eigenschaft unterstützt Generatorausdrücke <cmake-generator-expressions(7)>."
	},
	"CXX_MODULE_SETS": {
		"name": "CXX_MODULE_SETS",
		"description": "Schreibgeschützte Liste der PRIVATE- und PUBLIC C++-Modulsätze des Ziels (d. h. alle Dateisätze mit dem Typ CXX_MODULES). Dateien, die in diesen Dateisätzen aufgeführt sind, werden zum Zweck der IDE-Integration als Quelldateien behandelt."
	},
	"CXX_MODULE_SET_<NAME>": {
		"name": "CXX_MODULE_SET_<NAME>",
		"description": "Semikolon-getrennte Liste von Dateien im <NAME> C++-Modulsatz des Ziels, das den Satztyp CXX_MODULES hat. Wenn einer der Pfade relativ ist, werden sie relativ zum Quellverzeichnis des Ziels berechnet. Die Eigenschaft unterstützt Generatorausdrücke <cmake-generator-expressions(7)>."
	},
	"CXX_MODULE_STD": {
		"name": "CXX_MODULE_STD",
		"description": "CXX_MODULE_STD ist ein boolescher Wert, der angibt, ob das Ziel \"std import\", seine C++-Quellen verwenden darf oder nicht."
	},
	"CXX_STANDARD": {
		"name": "CXX_STANDARD",
		"description": "Der C++-Standard, dessen Features zum Erstellen dieses Ziels angefordert werden."
	},
	"CXX_STANDARD_REQUIRED": {
		"name": "CXX_STANDARD_REQUIRED",
		"description": "Ein boolescher Wert, der beschreibt, ob der Wert von CXX_STANDARD eine Anforderung darstellt."
	},
	"C_EXTENSIONS": {
		"name": "C_EXTENSIONS",
		"description": "Ein boolescher Wert, der angibt, ob compilerspezifische Erweiterungen angefordert werden."
	},
	"C_STANDARD": {
		"name": "C_STANDARD",
		"description": "Der C-Standard, dessen Features zum Erstellen dieses Ziels angefordert werden."
	},
	"C_STANDARD_REQUIRED": {
		"name": "C_STANDARD_REQUIRED",
		"description": "Ein boolescher Wert, der beschreibt, ob der Wert von C_STANDARD eine Anforderung ist."
	},
	"DEBUG_POSTFIX": {
		"name": "DEBUG_POSTFIX",
		"description": "Siehe Zieleigenschaft <CONFIG>_POSTFIX."
	},
	"DEFINE_SYMBOL": {
		"name": "DEFINE_SYMBOL",
		"description": "Definieren Sie ein Symbol, wenn Sie die Quellen dieses Ziels kompilieren."
	},
	"DEPLOYMENT_ADDITIONAL_FILES": {
		"name": "DEPLOYMENT_ADDITIONAL_FILES",
		"description": "Legen Sie AdditionalFiles des WinCE-Projekts in DeploymentTool in den .vcproj-Dateien fest, die durch Visual Studio-Generatoren erstellt wurden. Dies ist beim Debuggen auf einem Remote-WinCE-Gerät nützlich. Geben Sie zusätzliche Dateien an, die auf das Gerät kopiert werden, z. Beispiel:"
	},
	"DEPLOYMENT_REMOTE_DIRECTORY": {
		"name": "DEPLOYMENT_REMOTE_DIRECTORY",
		"description": "Legen Sie RemoteDirectory des WinCE-Projekts in DeploymentTool und RemoteExecutable in DebuggerTool in den .vcproj-Dateien fest, die durch den Generator von Visual Studio-Generatoren erstellt wurden. Dies ist beim Debuggen auf einem Remote-WinCE-Gerät nützlich. Beispiel:"
	},
	"DEPRECATION": {
		"name": "DEPRECATION",
		"description": "Meldung zu veralteten Features vom Entwickler des importierten Ziels."
	},
	"DISABLE_PRECOMPILE_HEADERS": {
		"name": "DISABLE_PRECOMPILE_HEADERS",
		"description": "Hiermit wird die Vorkompilierung der Headerdateien deaktiviert, die durch die Eigenschaft PRECOMPILE_HEADERS angegeben werden."
	},
	"DLL_NAME_WITH_SOVERSION": {
		"name": "DLL_NAME_WITH_SOVERSION",
		"description": "Diese Eigenschaft steuert, ob die SOVERSION-Zieleigenschaft dem Dateinamen der generierten DLL-Dateinamen für die Windows-Plattform hinzugefügt wird, die ausgewählt wird, wenn die WIN32-Variable festgelegt wird."
	},
	"DOTNET_SDK": {
		"name": "DOTNET_SDK",
		"description": "Geben Sie das .NET SDK für C#-Projekte an. Beispiel: Microsoft.NET.Sdk."
	},
	"DOTNET_TARGET_FRAMEWORK": {
		"name": "DOTNET_TARGET_FRAMEWORK",
		"description": "Hiermit wird die Version des .NET-Zielframeworks angegeben."
	},
	"DOTNET_TARGET_FRAMEWORK_VERSION": {
		"name": "DOTNET_TARGET_FRAMEWORK_VERSION",
		"description": "Geben Sie die Version des .NET-Zielframeworks an."
	},
	"EchoString": {
		"name": "EchoString",
		"description": "Eine Meldung, die beim Erstellen des Ziels angezeigt wird."
	},
	"ENABLE_EXPORTS": {
		"name": "ENABLE_EXPORTS",
		"description": "Geben Sie an, ob eine ausführbare Datei oder eine freigegebene Bibliothek Symbole exportiert."
	},
	"EXCLUDE_FROM_DEFAULT_BUILD": {
		"name": "EXCLUDE_FROM_DEFAULT_BUILD",
		"description": "Hiermit wird das Ziel von \"Build Solution\" ausgeschlossen."
	},
	"EXCLUDE_FROM_DEFAULT_BUILD_<CONFIG>": {
		"name": "EXCLUDE_FROM_DEFAULT_BUILD_<CONFIG>",
		"description": "Die konfigurationsspezifische Version des Zielausschlusses von \"Build Solution\"."
	},
	"EXPORT_COMPILE_COMMANDS": {
		"name": "EXPORT_COMPILE_COMMANDS",
		"description": "Hiermit aktivieren/deaktivieren Sie die Ausgabe von Kompilierungsbefehlen für ein Ziel während der Erstellung."
	},
	"EXPORT_FIND_PACKAGE_NAME": {
		"name": "EXPORT_FIND_PACKAGE_NAME",
		"description": "Steuern Sie den Paketnamen, der einem Abhängigkeitsziel zugeordnet ist, wenn Sie einen find_dependency Aufruf in der Installation oder im Export exportieren. Dies kann verwendet werden, um einem Paket, das von CMake erstellt und exportiert wird, einen Paketnamen zuzuweisen oder das Paket im find_package Aufruf außer Kraft zu setzen, der das Ziel erstellt hat."
	},
	"EXPORT_NAME": {
		"name": "EXPORT_NAME",
		"description": "Der exportierte Name für Zieldateien."
	},
	"EXPORT_NO_SYSTEM": {
		"name": "EXPORT_NO_SYSTEM",
		"description": "Diese Eigenschaft wirkt sich auf das Verhalten der Installations- und Exportbefehle aus, wenn das Ziel installiert bzw. exportiert wird. Wenn EXPORT_NO_SYSTEM auf WAHR festgelegt ist, generieren diese Befehle ein importiertes Ziel, wobei die SYSTEM-Eigenschaft auf FALSCH festgelegt ist."
	},
	"EXPORT_PROPERTIES": {
		"name": "EXPORT_PROPERTIES",
		"description": "Listen Sie zusätzliche Eigenschaften zum Export für ein Ziel auf."
	},
	"FOLDER": {
		"name": "FOLDER",
		"description": "Für IDEs, die Ziele mithilfe einer Ordnerhierarchie präsentieren, gibt diese Eigenschaft den Namen des Ordners an, unter dem das Ziel platziert werden soll. Um Ordner zu verschachteln, verwenden Sie FOLDER-Werte, z. B. GUI/Dialogfelder, mit /-Zeichen, die Ordnerebenen trennen. Ziele ohne FOLDER-Eigenschaft werden als Entitäten der obersten Ebene angezeigt. Ziele mit demselben FOLDER-Eigenschaftswert werden im selben Ordner wie gleichgeordnete Elemente angezeigt."
	},
	"Fortran_BUILDING_INSTRINSIC_MODULES": {
		"name": "Fortran_BUILDING_INSTRINSIC_MODULES",
		"description": "Weist den CMake Fortran-Präprozessor an, dass das Ziel systeminterne Fortran-Funktionen zum Erstellen eines Fortran-Compilers erstellt."
	},
	"Fortran_MODULE_DIRECTORY": {
		"name": "Fortran_MODULE_DIRECTORY",
		"description": "Geben Sie das Ausgabeverzeichnis für Fortran-Module an, die vom Ziel bereitgestellt werden."
	},
	"FRAMEWORK": {
		"name": "FRAMEWORK",
		"description": "Erstellen Sie unter macOS und iOS eine SHARED- oder STATIC-Bibliothek als Frameworkpaket."
	},
	"FRAMEWORK_MULTI_CONFIG_POSTFIX_<CONFIG>": {
		"name": "FRAMEWORK_MULTI_CONFIG_POSTFIX_<CONFIG>",
		"description": "Ein Postfix, das an den Frameworkdateinamen für die Konfiguration <CONFIG> angehängt werden soll, wenn ein Generator mit Unterstützung für mehrere Konfigurationen (beispielsweise Xcode und Ninja Multi-Config) verwendet wird."
	},
	"FRAMEWORK_VERSION": {
		"name": "FRAMEWORK_VERSION",
		"description": "Version eines Frameworks, das mithilfe der Zieleigenschaft FRAMEWORK erstellt wurde (z. B. A)."
	},
	"GENERATOR_FILE_NAME": {
		"name": "GENERATOR_FILE_NAME",
		"description": "Die Datei des Generators für dieses Ziel."
	},
	"GHS_INTEGRITY_APP": {
		"name": "GHS_INTEGRITY_APP",
		"description": "Ein boolescher Wert, der auf ON oder OFF festgelegt werden kann. Dieser Wert bestimmt, ob eine ausführbare Zieldatei als Integritätsanwendung betrachtet werden sollte."
	},
	"GHS_NO_SOURCE_GROUP_FILE": {
		"name": "GHS_NO_SOURCE_GROUP_FILE",
		"description": "Ein boolescher Wert, der auf ON oder OFF festgelegt werden kann. Dieser Wert steuert, ob die Projektdatei für ein Ziel eine einzelne Datei ist oder aus mehreren Dateien bestehen soll."
	},
	"GNUtoMS": {
		"name": "GNUtoMS",
		"description": "Konvertieren Sie eine GNU-Importbibliothek (.dll.a) in das MS-Format (.lib)."
	},
	"HAS_CXX": {
		"name": "HAS_CXX",
		"description": "Stellen Sie mit dem C++-Linkertool eine Verknüpfung mit dem Ziel her (veraltet)."
	},
	"HEADER_DIRS": {
		"name": "HEADER_DIRS",
		"description": "Semikolon-getrennte Liste der Basisverzeichnisse des Standard-Header-Sets des Ziels (d. h. des Dateisets mit Name und Typ HEADERS). Die Eigenschaft unterstützt Generatorausdrücke <cmake-generator-expressions(7)>."
	},
	"HEADER_DIRS_<NAME>": {
		"name": "HEADER_DIRS_<NAME>",
		"description": "Semikolon-getrennte Liste der Basisverzeichnisse des Header-Sets <NAME> des Ziels, das den Set-Typ HEADERS hat. Die Eigenschaft unterstützt Generatorausdrücke <cmake-generator-expressions(7)>."
	},
	"HEADER_SET": {
		"name": "HEADER_SET",
		"description": "Semikolon-getrennte Liste von Dateien im Standard-Header-Set des Ziels (d. h. das Datei-Set mit Name und Typ HEADERS). Wenn einer der Pfade relativ ist, werden sie relativ zum Quellverzeichnis des Ziels berechnet. Die Eigenschaft unterstützt Generatorausdrücke <cmake-generator-expressions(7)>."
	},
	"HEADER_SETS": {
		"name": "HEADER_SETS",
		"description": "Schreibgeschützte Liste der PRIVATE- und PUBLIC-Header-Sets des Ziels (d. h. alle Datei-Sets mit dem Typ HEADERS). Dateien, die in diesen Dateigruppen aufgeführt sind, werden zum Zweck der IDE-Integration als Quelldateien behandelt. Die HEADER_FILE_ONLY-Eigenschaft der Dateien ist außerdem auf TRUE gesetzt."
	},
	"HEADER_SET_<NAME>": {
		"name": "HEADER_SET_<NAME>",
		"description": "Semikolon-getrennte Liste von Dateien im Header-Set <NAME> des Ziels, das den Set-Typ HEADERS hat. Wenn einer der Pfade relativ ist, werden sie relativ zum Quellverzeichnis des Ziels berechnet. Die Eigenschaft unterstützt Generatorausdrücke <cmake-generator-expressions(7)>."
	},
	"HIP_ARCHITECTURES": {
		"name": "HIP_ARCHITECTURES",
		"description": "Eine Liste der GPU-Architekturen, für die ein Gerätecode generiert werden soll. Architekturnamen werden auf der Grundlage von CMAKE_HIP_PLATFORM interpretiert."
	},
	"HIP_EXTENSIONS": {
		"name": "HIP_EXTENSIONS",
		"description": "Ein boolescher Wert, der angibt, ob compilerspezifische Erweiterungen angefordert werden."
	},
	"HIP_STANDARD": {
		"name": "HIP_STANDARD",
		"description": "Der HIP/C++-Standard, der zum Erstellen dieses Ziels angefordert wurde."
	},
	"HIP_STANDARD_REQUIRED": {
		"name": "HIP_STANDARD_REQUIRED",
		"description": "Boolescher Wert, der beschreibt, ob der Wert von HIP_STANDARD eine Anforderung ist."
	},
	"IMPORTED": {
		"name": "IMPORTED",
		"description": "Schreibgeschützter Hinweis darauf, ob ein Ziel als IMPORTED gekennzeichnet ist."
	},
	"IMPORTED_COMMON_LANGUAGE_RUNTIME": {
		"name": "IMPORTED_COMMON_LANGUAGE_RUNTIME",
		"description": "Zu definierende Eigenschaft, wenn das Ziel C++/CLI verwendet."
	},
	"IMPORTED_CONFIGURATIONS": {
		"name": "IMPORTED_CONFIGURATIONS",
		"description": "Bereitgestellte Konfigurationen für ein importiertes Ziel."
	},
	"IMPORTED_CXX_MODULES_COMPILE_DEFINITIONS": {
		"name": "IMPORTED_CXX_MODULES_COMPILE_DEFINITIONS",
		"description": "Präprozessordefinitionen zum Kompilieren der C++-Modulquellen eines IMPORTED-Ziels."
	},
	"IMPORTED_CXX_MODULES_COMPILE_FEATURES": {
		"name": "IMPORTED_CXX_MODULES_COMPILE_FEATURES",
		"description": "Compilerfunktionen, die für die C++-Module dieses IMPORTIERTEN Ziels aktiviert sind."
	},
	"IMPORTED_CXX_MODULES_COMPILE_OPTIONS": {
		"name": "IMPORTED_CXX_MODULES_COMPILE_OPTIONS",
		"description": "Liste der Optionen, die an den Compiler für die C++-Module dieses IMPORTIERTEN Ziels übergeben werden sollen."
	},
	"IMPORTED_CXX_MODULES_INCLUDE_DIRECTORIES": {
		"name": "IMPORTED_CXX_MODULES_INCLUDE_DIRECTORIES",
		"description": "Liste der Präprozessordateien, die Beim Kompilieren von C++-Modulen für IMPORTIERTE-Ziele Dateisuchverzeichnisse enthalten."
	},
	"IMPORTED_CXX_MODULES_LINK_LIBRARIES": {
		"name": "IMPORTED_CXX_MODULES_LINK_LIBRARIES",
		"description": "Liste der direkten Abhängigkeiten, die für Verwendungsanforderungen für C++-Module in den C++-Modulen des Ziels verwendet werden sollen."
	},
	"IMPORTED_GLOBAL": {
		"name": "IMPORTED_GLOBAL",
		"description": "Hinweis darauf, ob ein als IMPORTED gekennzeichnetes Ziel global sichtbar ist."
	},
	"IMPORTED_IMPLIB": {
		"name": "IMPORTED_IMPLIB",
		"description": "Vollständiger Pfad zur Importbibliothek für ein als IMPORTED gekennzeichnetes Ziel."
	},
	"IMPORTED_IMPLIB_<CONFIG>": {
		"name": "IMPORTED_IMPLIB_<CONFIG>",
		"description": "<CONFIG>-spezifische Version der Eigenschaft IMPORTED_IMPLIB."
	},
	"IMPORTED_LIBNAME": {
		"name": "IMPORTED_LIBNAME",
		"description": "Geben Sie den Namen der Verknüpfungsbibliothek für eine importierte Schnittstellenbibliothek an."
	},
	"IMPORTED_LIBNAME_<CONFIG>": {
		"name": "IMPORTED_LIBNAME_<CONFIG>",
		"description": "<CONFIG>-spezifische Version der Eigenschaft IMPORTED_LIBNAME."
	},
	"IMPORTED_LINK_DEPENDENT_LIBRARIES": {
		"name": "IMPORTED_LINK_DEPENDENT_LIBRARIES",
		"description": "Abhängige freigegebene Bibliotheken einer importierten freigegebenen Bibliothek."
	},
	"IMPORTED_LINK_DEPENDENT_LIBRARIES_<CONFIG>": {
		"name": "IMPORTED_LINK_DEPENDENT_LIBRARIES_<CONFIG>",
		"description": "<CONFIG>-spezifische Version von IMPORTED_LINK_DEPENDENT_LIBRARIES."
	},
	"IMPORTED_LINK_INTERFACE_LANGUAGES": {
		"name": "IMPORTED_LINK_INTERFACE_LANGUAGES",
		"description": "Sprachen, die in eine als IMPORTED gekennzeichnete statische Bibliothek kompiliert wurden."
	},
	"IMPORTED_LINK_INTERFACE_LANGUAGES_<CONFIG>": {
		"name": "IMPORTED_LINK_INTERFACE_LANGUAGES_<CONFIG>",
		"description": "<CONFIG>-spezifische Version von IMPORTED_LINK_INTERFACE_LANGUAGES."
	},
	"IMPORTED_LINK_INTERFACE_LIBRARIES": {
		"name": "IMPORTED_LINK_INTERFACE_LIBRARIES",
		"description": "Transitive Verknüpfungsschnittstelle eines als IMPORTED gekennzeichneten Ziels."
	},
	"IMPORTED_LINK_INTERFACE_LIBRARIES_<CONFIG>": {
		"name": "IMPORTED_LINK_INTERFACE_LIBRARIES_<CONFIG>",
		"description": "<CONFIG>-spezifische Version von IMPORTED_LINK_INTERFACE_LIBRARIES."
	},
	"IMPORTED_LINK_INTERFACE_MULTIPLICITY": {
		"name": "IMPORTED_LINK_INTERFACE_MULTIPLICITY",
		"description": "Wiederholungsanzahl für Zyklen von als IMPORTED gekennzeichneten statischen Bibliotheken."
	},
	"IMPORTED_LINK_INTERFACE_MULTIPLICITY_<CONFIG>": {
		"name": "IMPORTED_LINK_INTERFACE_MULTIPLICITY_<CONFIG>",
		"description": "<CONFIG>-spezifische Version von IMPORTED_LINK_INTERFACE_MULTIPLICITY."
	},
	"IMPORTED_LOCATION": {
		"name": "IMPORTED_LOCATION",
		"description": "Vollständiger Pfad zur Hauptdatei auf dem Datenträger für ein als IMPORTED gekennzeichnetes Ziel."
	},
	"IMPORTED_LOCATION_<CONFIG>": {
		"name": "IMPORTED_LOCATION_<CONFIG>",
		"description": "<CONFIG>-spezifische Version der Eigenschaft IMPORTED_LOCATION."
	},
	"IMPORTED_NO_SONAME": {
		"name": "IMPORTED_NO_SONAME",
		"description": "Hiermit wird angegeben, dass eine als IMPORTED gekennzeichnete freigegebene Zielbibliothek keinen \"soname\" aufweist."
	},
	"IMPORTED_NO_SONAME_<CONFIG>": {
		"name": "IMPORTED_NO_SONAME_<CONFIG>",
		"description": "<CONFIG>-spezifische Version der Eigenschaft IMPORTED_NO_SONAME."
	},
	"IMPORTED_NO_SYSTEM": {
		"name": "IMPORTED_NO_SYSTEM",
		"description": "Wenn IMPORTED_NO_SYSTEM auf einem importierten Ziel auf WAHR festgelegt wird, wird dadurch angegeben, dass es sich nicht um ein Systemziel handelt. Dies hat folgende Auswirkungen:"
	},
	"IMPORTED_OBJECTS": {
		"name": "IMPORTED_OBJECTS",
		"description": "Eine durch Semikolon getrennte Liste mit absoluten Pfaden zu den Objektdateien auf dem Datenträger für eine importierte Objektbibliothek."
	},
	"IMPORTED_OBJECTS_<CONFIG>": {
		"name": "IMPORTED_OBJECTS_<CONFIG>",
		"description": "<CONFIG>-spezifische Version der Eigenschaft IMPORTED_OBJECTS."
	},
	"IMPORTED_SONAME": {
		"name": "IMPORTED_SONAME",
		"description": "Der \"soname\" einer als IMPORTED gekennzeichneten freigegebenen Zielbibliothek."
	},
	"IMPORTED_SONAME_<CONFIG>": {
		"name": "IMPORTED_SONAME_<CONFIG>",
		"description": "<CONFIG>-spezifische Version der Eigenschaft IMPORTED_SONAME."
	},
	"IMPORT_PREFIX": {
		"name": "IMPORT_PREFIX",
		"description": "Gibt an, welche Informationen vor dem Namen der Importbibliothek erscheinen."
	},
	"IMPORT_SUFFIX": {
		"name": "IMPORT_SUFFIX",
		"description": "Gibt an, welche Informationen nach dem Namen der Importbibliothek erscheinen."
	},
	"INSTALL_NAME_DIR": {
		"name": "INSTALL_NAME_DIR",
		"description": "Verzeichnisname für installierte Ziele auf Apple-Plattformen."
	},
	"INSTALL_REMOVE_ENVIRONMENT_RPATH": {
		"name": "INSTALL_REMOVE_ENVIRONMENT_RPATH",
		"description": "Hiermit wird gesteuert, ob über die Toolkette definierte rpath-Werte während der Installation entfernt werden sollen."
	},
	"INSTALL_RPATH": {
		"name": "INSTALL_RPATH",
		"description": "Der rpath zur Verwendung für installierte Ziele."
	},
	"INSTALL_RPATH_USE_LINK_PATH": {
		"name": "INSTALL_RPATH_USE_LINK_PATH",
		"description": "Fügen Sie der Linkersuche und dem installierten rpath Pfade hinzu."
	},
	"INTERFACE_AUTOMOC_MACRO_NAMES": {
		"name": "INTERFACE_AUTOMOC_MACRO_NAMES",
		"description": "Eine durch Semikolons getrennte Liste von Makronamen für AUTOMOC, die an Consumer weitergegeben werden sollen."
	},
	"INTERFACE_AUTOUIC_OPTIONS": {
		"name": "INTERFACE_AUTOUIC_OPTIONS",
		"description": "Liste mit Schnittstellenoptionen, die an uic übergeben werden."
	},
	"INTERFACE_COMPILE_DEFINITIONS": {
		"name": "INTERFACE_COMPILE_DEFINITIONS",
		"description": "Liste mit öffentlichen property_name-Anforderungen für eine Bibliothek."
	},
	"INTERFACE_COMPILE_FEATURES": {
		"name": "INTERFACE_COMPILE_FEATURES",
		"description": "Liste mit öffentlichen property_name-Anforderungen für eine Bibliothek."
	},
	"INTERFACE_COMPILE_OPTIONS": {
		"name": "INTERFACE_COMPILE_OPTIONS",
		"description": "Liste mit öffentlichen property_name-Anforderungen für eine Bibliothek."
	},
	"INTERFACE_CXX_MODULE_SETS": {
		"name": "INTERFACE_CXX_MODULE_SETS",
		"description": "Schreibgeschützte Liste der PUBLIC C++-Modulsätze des Ziels (d. h. alle Dateisätze mit dem Typ CXX_MODULES). Dateien, die in diesen C++-Modulsätzen aufgeführt sind, können mit „install“ installiert und mit „export“ installiert und exportiert werden."
	},
	"INTERFACE_HEADER_SETS": {
		"name": "INTERFACE_HEADER_SETS",
		"description": "Nur-Lese-Liste der INTERFACE- und PUBLIC-Header-Sets des Ziels (d. h. alle Datei-Sets mit dem Typ HEADERS). In diesen Header-Sets aufgelistete Dateien können mit install installiert und mit install and export exportiert werden."
	},
	"INTERFACE_HEADER_SETS_TO_VERIFY": {
		"name": "INTERFACE_HEADER_SETS_TO_VERIFY",
		"description": "Wird verwendet, um anzugeben, welche ÖFFENTLICHEN und SCHNITTSTELLEN-Headersätze eines Ziels überprüft werden sollen."
	},
	"INTERFACE_INCLUDE_DIRECTORIES": {
		"name": "INTERFACE_INCLUDE_DIRECTORIES",
		"description": "Liste mit öffentlichen property_name-Anforderungen für eine Bibliothek."
	},
	"INTERFACE_LINK_DEPENDS": {
		"name": "INTERFACE_LINK_DEPENDS",
		"description": "Zusätzliche öffentliche Schnittstellendateien, von denen eine Zielbinärdatei zur Verknüpfung abhängig ist."
	},
	"INTERFACE_LINK_DIRECTORIES": {
		"name": "INTERFACE_LINK_DIRECTORIES",
		"description": "Liste mit öffentlichen property_name-Anforderungen für eine Bibliothek."
	},
	"INTERFACE_LINK_LIBRARIES": {
		"name": "INTERFACE_LINK_LIBRARIES",
		"description": "Listen Sie öffentliche Schnittstellenbibliotheken für eine Bibliothek auf."
	},
	"INTERFACE_LINK_LIBRARIES_DIRECT": {
		"name": "INTERFACE_LINK_LIBRARIES_DIRECT",
		"description": "Liste der Bibliotheken, die Consumer dieser Bibliothek als direkte Linkabhängigkeiten behandeln sollten."
	},
	"INTERFACE_LINK_LIBRARIES_DIRECT_EXCLUDE": {
		"name": "INTERFACE_LINK_LIBRARIES_DIRECT_EXCLUDE",
		"description": "Liste der Bibliotheken, die Consumer dieser Bibliothek nicht als direkte Linkabhängigkeiten behandeln sollten."
	},
	"INTERFACE_LINK_OPTIONS": {
		"name": "INTERFACE_LINK_OPTIONS",
		"description": "Liste mit öffentlichen property_name-Anforderungen für eine Bibliothek."
	},
	"INTERFACE_POSITION_INDEPENDENT_CODE": {
		"name": "INTERFACE_POSITION_INDEPENDENT_CODE",
		"description": "Gibt an, ob Consumer ein positionsunabhängiges Ziel erstellen müssen"
	},
	"INTERFACE_PRECOMPILE_HEADERS": {
		"name": "INTERFACE_PRECOMPILE_HEADERS",
		"description": "Eine Liste der Schnittstellen-Headerdateien, die für Consumerziele vorkompiliert werden sollen."
	},
	"INTERFACE_SOURCES": {
		"name": "INTERFACE_SOURCES",
		"description": "Liste der Schnittstellenquellen, die in verbrauchende Ziele kompiliert werden."
	},
	"INTERFACE_SYSTEM_INCLUDE_DIRECTORIES": {
		"name": "INTERFACE_SYSTEM_INCLUDE_DIRECTORIES",
		"description": "Liste öffentlicher systembezogener Includeverzeichnisse für eine Bibliothek."
	},
	"IOS_INSTALL_COMBINED": {
		"name": "IOS_INSTALL_COMBINED",
		"description": "Erstellen Sie bei der Installation ein kombiniertes (Gerät und Simulator) Ziel."
	},
	"ISPC_HEADER_DIRECTORY": {
		"name": "ISPC_HEADER_DIRECTORY",
		"description": "Hiermit wird das relative Ausgabeverzeichnis für ISPC-Header angegeben, die vom Ziel bereitgestellt werden."
	},
	"ISPC_HEADER_SUFFIX": {
		"name": "ISPC_HEADER_SUFFIX",
		"description": "Hiermit geben Sie das zu verwendende Ausgabesuffix für Header an, die von ISPC generiert und vom Ziel bereitgestellt werden."
	},
	"ISPC_INSTRUCTION_SETS": {
		"name": "ISPC_INSTRUCTION_SETS",
		"description": "Eine Liste der Befehlssatzarchitekturen, für die Code generiert werden soll."
	},
	"JOB_POOL_COMPILE": {
		"name": "JOB_POOL_COMPILE",
		"description": "Nur Ninja: Pool, der zum Kompilieren verwendet wird."
	},
	"JOB_POOL_LINK": {
		"name": "JOB_POOL_LINK",
		"description": "Nur Ninja: Pool, der zum Verknüpfen verwendet wird."
	},
	"JOB_POOL_PRECOMPILE_HEADER": {
		"name": "JOB_POOL_PRECOMPILE_HEADER",
		"description": "Nur Ninja: Ein Pool, der zum Generieren vorkompilierter Header verwendet wird."
	},
	"<LANG>_CLANG_TIDY": {
		"name": "<LANG>_CLANG_TIDY",
		"description": "Diese Eigenschaft wird nur implementiert, wenn <LANG>einen der folgenden Werte aufweist: C, CXX, OBJC, OBJCXX."
	},
	"<LANG>_CLANG_TIDY_EXPORT_FIXES_DIR": {
		"name": "<LANG>_CLANG_TIDY_EXPORT_FIXES_DIR",
		"description": "Diese Eigenschaft wird nur implementiert, wenn <LANG> „C“, „CXX“, „OBJC“ oder „OBJCXX“ ist und ist nur dann wirksam, wenn <LANG>_CLANG_TIDY festgelegt ist."
	},
	"<LANG>_COMPILER_LAUNCHER": {
		"name": "<LANG>_COMPILER_LAUNCHER",
		"description": "Diese Eigenschaft wird nur implementiert, wenn <LANG>einen der folgenden Werte aufweist: C, CXX, Fortran, HIP, ISPC, OBJC, OBJCXX oder CUDA."
	},
	"<LANG>_CPPCHECK": {
		"name": "<LANG>_CPPCHECK",
		"description": "Diese Eigenschaft wird nur unterstützt, wenn <LANG> C oder CXX ist."
	},
	"<LANG>_CPPLINT": {
		"name": "<LANG>_CPPLINT",
		"description": "Diese Eigenschaft wird nur unterstützt, wenn <LANG> C oder CXX ist."
	},
	"<LANG>_EXTENSIONS": {
		"name": "<LANG>_EXTENSIONS",
		"description": "Die Variationen sind:"
	},
	"<LANG>_INCLUDE_WHAT_YOU_USE": {
		"name": "<LANG>_INCLUDE_WHAT_YOU_USE",
		"description": "Diese Eigenschaft wird nur implementiert, wenn <LANG> C oder CXX ist."
	},
	"<LANG>_LINKER_LAUNCHER": {
		"name": "<LANG>_LINKER_LAUNCHER",
		"description": "Diese Eigenschaft wird nur implementiert, wenn <LANG> einen der folgenden Werte aufweist: C, CXX, OBJC oder OBJCXX."
	},
	"<LANG>_STANDARD": {
		"name": "<LANG>_STANDARD",
		"description": "Die Variationen sind:"
	},
	"<LANG>_STANDARD_REQUIRED": {
		"name": "<LANG>_STANDARD_REQUIRED",
		"description": "Die Variationen sind:"
	},
	"<LANG>_VISIBILITY_PRESET": {
		"name": "<LANG>_VISIBILITY_PRESET",
		"description": "Wert für Kompilierungsflags zur Sichtbarkeit von Symbolen"
	},
	"LIBRARY_OUTPUT_DIRECTORY": {
		"name": "LIBRARY_OUTPUT_DIRECTORY",
		"description": "Das Ausgabeverzeichnis, in dem XXX-Zieldateien erstellt werden."
	},
	"LIBRARY_OUTPUT_DIRECTORY_<CONFIG>": {
		"name": "LIBRARY_OUTPUT_DIRECTORY_<CONFIG>",
		"description": "Ausgabeverzeichnis (pro Konfiguration) für LIBRARY-Zieldateien."
	},
	"LIBRARY_OUTPUT_NAME": {
		"name": "LIBRARY_OUTPUT_NAME",
		"description": "Ausgabename für XXX-Zieldateien."
	},
	"LIBRARY_OUTPUT_NAME_<CONFIG>": {
		"name": "LIBRARY_OUTPUT_NAME_<CONFIG>",
		"description": "Ausgabename (pro Konfiguration) für LIBRARY-Zieldateien."
	},
	"LINKER_LANGUAGE": {
		"name": "LINKER_LANGUAGE",
		"description": "Gibt die Sprache an, deren Compiler den Linker aufruft."
	},
	"LINKER_TYPE": {
		"name": "LINKER_TYPE",
		"description": "Geben Sie an, welcher Linker für den Linkschritt verwendet werden soll. Der Eigenschaftswert kann Generatorausdrücke <cmake-generator-expressions(7)> verwenden."
	},
	"LINK_DEPENDS": {
		"name": "LINK_DEPENDS",
		"description": "Zusätzliche Dateien, von denen eine Zielbinärdatei zur Verknüpfung abhängig ist."
	},
	"LINK_DEPENDS_NO_SHARED": {
		"name": "LINK_DEPENDS_NO_SHARED",
		"description": "Abhängigkeit von verknüpften freigegebenen Bibliotheksdateien verhindern."
	},
	"LINK_FLAGS": {
		"name": "LINK_FLAGS",
		"description": "Zusätzliche Flags zum Verknüpfen dieses Ziels, falls es sich um eine freigegebene Bibliothek, eine freigegebene Modulbibliothek oder eine freigegebene ausführbare Datei handelt. Für statische Bibliotheken muss die Eigenschaft STATIC_LIBRARY_OPTIONS oder STATIC_LIBRARY_FLAGS verwendet werden."
	},
	"LINK_FLAGS_<CONFIG>": {
		"name": "LINK_FLAGS_<CONFIG>",
		"description": "Konfigurationsspezifische Linkerflags für ein SHARED LIBRARY-, MODULE- oder EXECUTABLE-Ziel."
	},
	"LINK_INTERFACE_LIBRARIES": {
		"name": "LINK_INTERFACE_LIBRARIES",
		"description": "Liste öffentlicher Schnittstellenbibliotheken für eine freigegebene Bibliothek oder freigegebene ausführbare Datei."
	},
	"LINK_INTERFACE_LIBRARIES_<CONFIG>": {
		"name": "LINK_INTERFACE_LIBRARIES_<CONFIG>",
		"description": "Liste (pro Konfiguration) öffentlicher Schnittstellenbibliotheken für ein Ziel."
	},
	"LINK_INTERFACE_MULTIPLICITY": {
		"name": "LINK_INTERFACE_MULTIPLICITY",
		"description": "Wiederholungsanzahl für STATIC-Bibliotheken mit zyklischen Abhängigkeiten."
	},
	"LINK_INTERFACE_MULTIPLICITY_<CONFIG>": {
		"name": "LINK_INTERFACE_MULTIPLICITY_<CONFIG>",
		"description": "Wiederholungsanzahl (pro Konfiguration) von STATIC-Bibliotheken."
	},
	"LINK_LIBRARIES": {
		"name": "LINK_LIBRARIES",
		"description": "Liste mit direkten Verknüpfungsabhängigkeiten."
	},
	"LINK_LIBRARIES_ONLY_TARGETS": {
		"name": "LINK_LIBRARIES_ONLY_TARGETS",
		"description": "Erzwingen Sie, dass Link-Elemente, die Zielnamen sein können, tatsächlich vorhandene Ziele sind."
	},
	"LINK_LIBRARY_OVERRIDE": {
		"name": "LINK_LIBRARY_OVERRIDE",
		"description": "Überschreiben Sie die Bibliotheksfunktionen, die Bibliotheken aus LINK_LIBRARY-Generatorausdrücken zugeordnet sind. Dies kann verwendet werden, um inkompatible Bibliotheksfeatures aufzulösen, die sich aus der Angabe verschiedener Features für dieselbe Bibliothek in verschiedenen LINK_LIBRARY-Generatorausdrücken ergeben."
	},
	"LINK_LIBRARY_OVERRIDE_<LIBRARY>": {
		"name": "LINK_LIBRARY_OVERRIDE_<LIBRARY>",
		"description": "Überschreiben Sie das Bibliotheksfeature, das <LIBRARY> zugeordnet ist, mit LINK_LIBRARY-Generatorausdrücken. Dies kann verwendet werden, um inkompatible Bibliotheksfeatures aufzulösen, die sich aus der Angabe verschiedener Features für <LIBRARY> in verschiedenen LINK_LIBRARY-Generatorausdrücken ergeben."
	},
	"LINK_SEARCH_END_STATIC": {
		"name": "LINK_SEARCH_END_STATIC",
		"description": "Beenden Sie eine Verknüpfungszeile so, dass statische Systembibliotheken verwendet werden."
	},
	"LINK_SEARCH_START_STATIC": {
		"name": "LINK_SEARCH_START_STATIC",
		"description": "Nehmen Sie an, dass der Linker standardmäßig nach statischen Bibliotheken sucht."
	},
	"LINK_WHAT_YOU_USE": {
		"name": "LINK_WHAT_YOU_USE",
		"description": "Dies ist eine boolesche Option, die bei Festlegung auf TRUE den Inhalt der Variablen CMAKE_LINK_WHAT_YOU_USE_CHECK automatisch auf dem Ziel ausführt, nachdem sie verknüpft wurde. Darüber hinaus wird das von der Variablen CMAKE_<LANG>_LINK_WHAT_YOU_USE_FLAG angegebene Linkerflag mit dem Linkbefehl an das Ziel übergeben, sodass alle in der Befehlszeile angegebenen Bibliotheken mit dem Ziel verknüpft werden. Dies führt dazu, dass der Link eine Liste von Bibliotheken erstellt, die keine Symbole bereitstellen, die von diesem Ziel verwendet werden, aber mit ihm verknüpft sind."
	},
	"LOCATION_<CONFIG>": {
		"name": "LOCATION_<CONFIG>",
		"description": "Schreibgeschützte Eigenschaft, die einen Zielspeicherort auf dem Datenträger bereitstellt."
	},
	"MACHO_COMPATIBILITY_VERSION": {
		"name": "MACHO_COMPATIBILITY_VERSION",
		"description": "Hiermit wird die kompatible Versionsnummer dieses Ziels für Mach-O-Binärdateien angegeben."
	},
	"MACHO_CURRENT_VERSION": {
		"name": "MACHO_CURRENT_VERSION",
		"description": "Hiermit wird die aktuelle Versionsnummer dieses Ziels für Mach-O-Binärdateien angegeben."
	},
	"MACOSX_BUNDLE": {
		"name": "MACOSX_BUNDLE",
		"description": "Erstellen Sie unter macOS oder iOS eine ausführbare Datei als Anwendungsbundle."
	},
	"MACOSX_BUNDLE_INFO_PLIST": {
		"name": "MACOSX_BUNDLE_INFO_PLIST",
		"description": "Geben Sie für ein macOS- oder iOS-Anwendungsbundle eine benutzerdefinierte Info.plist-Vorlage an"
	},
	"MACOSX_FRAMEWORK_INFO_PLIST": {
		"name": "MACOSX_FRAMEWORK_INFO_PLIST",
		"description": "Geben Sie für ein macOS- oder iOS-Framework eine benutzerdefinierte Info.plist-Vorlage an"
	},
	"MACOSX_RPATH": {
		"name": "MACOSX_RPATH",
		"description": "Gibt an, ob dieses Ziel mit rpaths unter macOS oder iOS während der Laufzeit gefunden wird."
	},
	"MANUALLY_ADDED_DEPENDENCIES": {
		"name": "MANUALLY_ADDED_DEPENDENCIES",
		"description": "Rufen Sie Abhängigkeiten ab, die anderen Zielen der obersten Ebene hinzugefügt wurden."
	},
	"MAP_IMPORTED_CONFIG_<CONFIG>": {
		"name": "MAP_IMPORTED_CONFIG_<CONFIG>",
		"description": "Zuordnung von der Projektkonfiguration zur Konfiguration des importierten Ziels."
	},
	"MSVC_DEBUG_INFORMATION_FORMAT": {
		"name": "MSVC_DEBUG_INFORMATION_FORMAT",
		"description": "Wählen Sie das Format der Debuggen-Informationen, wenn Sie die MSVC-ABI verwenden."
	},
	"MSVC_RUNTIME_LIBRARY": {
		"name": "MSVC_RUNTIME_LIBRARY",
		"description": "Hiermit wird die MSVC-Laufzeitbibliothek für Compiler ausgewählt, die MSVC ABI als Ziel verwenden."
	},
	"NAME": {
		"name": "NAME",
		"description": "Logischer Name des Ziels."
	},
	"NO_SONAME": {
		"name": "NO_SONAME",
		"description": "Hiermit wird angegeben, ob beim Verknüpfen einer freigegebenen Bibliothek \"soname\" festgelegt werden soll."
	},
	"NO_SYSTEM_FROM_IMPORTED": {
		"name": "NO_SYSTEM_FROM_IMPORTED",
		"description": "Behandeln Sie Includeverzeichnisse der Schnittstellen genutzter importierter Ziele nicht als Systemverzeichnisse."
	},
	"OBJCXX_EXTENSIONS": {
		"name": "OBJCXX_EXTENSIONS",
		"description": "Ein boolescher Wert, der angibt, ob compilerspezifische Erweiterungen angefordert werden."
	},
	"OBJCXX_STANDARD": {
		"name": "OBJCXX_STANDARD",
		"description": "Der ObjC++-Standard, dessen Features zum Erstellen dieses Ziels angefordert werden."
	},
	"OBJCXX_STANDARD_REQUIRED": {
		"name": "OBJCXX_STANDARD_REQUIRED",
		"description": "Ein boolescher Wert, der beschreibt, ob der Wert von OBJCXX_STANDARD eine Anforderung ist."
	},
	"OBJC_EXTENSIONS": {
		"name": "OBJC_EXTENSIONS",
		"description": "Ein boolescher Wert, der angibt, ob compilerspezifische Erweiterungen angefordert werden."
	},
	"OBJC_STANDARD": {
		"name": "OBJC_STANDARD",
		"description": "Der OBJC-Standard, dessen Features zum Erstellen dieses Ziels angefordert werden."
	},
	"OBJC_STANDARD_REQUIRED": {
		"name": "OBJC_STANDARD_REQUIRED",
		"description": "Ein boolescher Wert, der beschreibt, ob der Wert von OBJC_STANDARD eine Anforderung ist."
	},
	"OPTIMIZE_DEPENDENCIES": {
		"name": "OPTIMIZE_DEPENDENCIES",
		"description": "Hiermit wird die Abhängigkeitsoptimierung von statischen Bibliotheken und Objektbibliotheken aktiviert."
	},
	"OSX_ARCHITECTURES": {
		"name": "OSX_ARCHITECTURES",
		"description": "Zielspezifische Architekturen für macOS."
	},
	"OSX_ARCHITECTURES_<CONFIG>": {
		"name": "OSX_ARCHITECTURES_<CONFIG>",
		"description": "macOS- und iOS-Binärarchitekturen (pro Konfiguration) für ein Ziel."
	},
	"OUTPUT_NAME": {
		"name": "OUTPUT_NAME",
		"description": "Ausgabename für Zieldateien."
	},
	"OUTPUT_NAME_<CONFIG>": {
		"name": "OUTPUT_NAME_<CONFIG>",
		"description": "Basisname der Zieldatei (pro Konfiguration)."
	},
	"PCH_INSTANTIATE_TEMPLATES": {
		"name": "PCH_INSTANTIATE_TEMPLATES",
		"description": "Wenn diese Eigenschaft auf TRUE festgelegt ist, enthalten die Compileroptionen für vorkompilierte Header ein Flag zum Instanziieren von Vorlagen während der Generierung des PCH, sofern dies unterstützt wird. Dadurch können die Kompilierzeiten erheblich verbessert werden. Diese Option wird in Clang ab Version 11 unterstützt."
	},
	"PCH_WARN_INVALID": {
		"name": "PCH_WARN_INVALID",
		"description": "Wenn diese Eigenschaft auf TRUE festgelegt ist, enthalten die Compileroptionen zum Vorkompilieren von Headern ein Compilerflag zum Warnen vor ungültigen vorkompilierten Headern. Beispiel: \"-Winvalid-pch\" für den GNU-Compiler."
	},
	"PDB_NAME": {
		"name": "PDB_NAME",
		"description": "Ausgabename der MS-Debugsymbol-.pdb-Datei, die vom Linker für das Ziel ausführbare Datei oder freigegebene Bibliothek generiert wurde."
	},
	"PDB_NAME_<CONFIG>": {
		"name": "PDB_NAME_<CONFIG>",
		"description": "Ausgabename (pro Konfiguration) der MS-Debugsymbol-.pdb-Datei, die vom Linker für das Ziel ausführbare Datei oder freigegebene Bibliothek generiert wurde."
	},
	"PDB_OUTPUT_DIRECTORY": {
		"name": "PDB_OUTPUT_DIRECTORY",
		"description": "Ausgabeverzeichnis der MS-Debugsymbol-.pdb-Datei, die vom Linker für das Ziel ausführbare Datei oder freigegebene Bibliothek generiert wurde."
	},
	"PDB_OUTPUT_DIRECTORY_<CONFIG>": {
		"name": "PDB_OUTPUT_DIRECTORY_<CONFIG>",
		"description": "Ausgabeverzeichnis (pro Konfiguration) der MS-Debugsymbol-.pdb-Datei, die vom Linker für das Ziel ausführbare Datei oder freigegebene Bibliothek generiert wurde."
	},
	"POSITION_INDEPENDENT_CODE": {
		"name": "POSITION_INDEPENDENT_CODE",
		"description": "Gibt an, ob ein positionsunabhängiges Ziel erstellt wird"
	},
	"POST_INSTALL_SCRIPT": {
		"name": "POST_INSTALL_SCRIPT",
		"description": "Veraltete Installationsunterstützung."
	},
	"PRECOMPILE_HEADERS": {
		"name": "PRECOMPILE_HEADERS",
		"description": "Eine Liste der Headerdateien, die vorkompiliert werden sollen."
	},
	"PRECOMPILE_HEADERS_REUSE_FROM": {
		"name": "PRECOMPILE_HEADERS_REUSE_FROM",
		"description": "Das Ziel, aus dem das Buildartefakt für vorkompilierte Header wiederverwendet werden soll."
	},
	"PREFIX": {
		"name": "PREFIX",
		"description": "Gibt an, welche Informationen vor dem Namen der Bibliothek erscheinen."
	},
	"PRE_INSTALL_SCRIPT": {
		"name": "PRE_INSTALL_SCRIPT",
		"description": "Veraltete Installationsunterstützung."
	},
	"PRIVATE_HEADER": {
		"name": "PRIVATE_HEADER",
		"description": "Geben Sie in einem FRAMEWORK private Headerdateien für ein Ziel freigegebene Bibliothek an."
	},
	"PROJECT_LABEL": {
		"name": "PROJECT_LABEL",
		"description": "Ändern Sie in einer IDE den Namen eines Ziels."
	},
	"PUBLIC_HEADER": {
		"name": "PUBLIC_HEADER",
		"description": "Geben Sie in einem FRAMEWORK in einem Ziel freigegebene Bibliothek öffentliche Headerdateien an."
	},
	"RESOURCE": {
		"name": "RESOURCE",
		"description": "Geben Sie Ressourcendateien in einem FRAMEWORK oder BUNDLE an."
	},
	"RUNTIME_OUTPUT_DIRECTORY": {
		"name": "RUNTIME_OUTPUT_DIRECTORY",
		"description": "Das Ausgabeverzeichnis, in dem XXX-Zieldateien erstellt werden."
	},
	"RUNTIME_OUTPUT_DIRECTORY_<CONFIG>": {
		"name": "RUNTIME_OUTPUT_DIRECTORY_<CONFIG>",
		"description": "Ausgabeverzeichnis (pro Konfiguration) für RUNTIME-Zieldateien."
	},
	"RUNTIME_OUTPUT_NAME": {
		"name": "RUNTIME_OUTPUT_NAME",
		"description": "Ausgabename für XXX-Zieldateien."
	},
	"RUNTIME_OUTPUT_NAME_<CONFIG>": {
		"name": "RUNTIME_OUTPUT_NAME_<CONFIG>",
		"description": "Ausgabename (pro Konfiguration) für RUNTIME-Zieldateien."
	},
	"SKIP_BUILD_RPATH": {
		"name": "SKIP_BUILD_RPATH",
		"description": "Soll rpaths für den Buildbaum verwendet werden?"
	},
	"SOURCES": {
		"name": "SOURCES",
		"description": "Dies gibt die Liste der Pfade zu Quelldateien für das Ziel an. Die folgenden Befehle setzen oder fügen der Zieleigenschaft SOURCES hinzu und sind die übliche Art, sie zu manipulieren:"
	},
	"SOVERSION": {
		"name": "SOVERSION",
		"description": "ABI-Versionsnummer eines freigegebenen Bibliotheksziels."
	},
	"STATIC_LIBRARY_FLAGS": {
		"name": "STATIC_LIBRARY_FLAGS",
		"description": "Flags des Archivierungsprogramms (oder MSVC-Bibliotheksprogramms) für eine statische Bibliothek als Ziel. Ziele, bei denen es sich um freigegebene Bibliotheken, freigegebene Module oder freigegebene ausführbare Dateien handelt, erfordern die Verwendung der Zieleigenschaft LINK_OPTIONS oder LINK_FLAGS."
	},
	"STATIC_LIBRARY_FLAGS_<CONFIG>": {
		"name": "STATIC_LIBRARY_FLAGS_<CONFIG>",
		"description": "Flags des Archivierungsprogramms (oder MSVC-Bibliotheksprogramms) für eine statische Bibliothek als Ziel (pro Konfiguration)."
	},
	"STATIC_LIBRARY_OPTIONS": {
		"name": "STATIC_LIBRARY_OPTIONS",
		"description": "Flags des Archivierungsprogramms (oder MSVC-Bibliotheksprogramms) für eine statische Bibliothek als Ziel (pro Konfiguration). Ziele, bei denen es sich um freigegebene Bibliotheken, freigegebene Module oder freigegebene ausführbare Dateien handelt, erfordern die Verwendung der Zieleigenschaft LINK_OPTIONS."
	},
	"SUFFIX": {
		"name": "SUFFIX",
		"description": "Gibt an, welche Informationen nach dem Zielnamen angezeigt werden."
	},
	"Swift_COMPILATION_MODE": {
		"name": "Swift_COMPILATION_MODE",
		"description": "Geben Sie an, wie Swift ein Ziel kompiliert."
	},
	"Swift_LANGUAGE_VERSION": {
		"name": "Swift_LANGUAGE_VERSION",
		"description": "Diese Eigenschaft legt die Sprachversion für die Swift-Quellen im Ziel fest. Ist kein Wert angegeben, wird standardmäßig „CMAKE_Swift_LANGUAGE_VERSION“ verwendet (sofern angegeben). Andernfalls wird die neueste Version verwendet, die vom Compiler unterstützt wird."
	},
	"Swift_MODULE_DIRECTORY": {
		"name": "Swift_MODULE_DIRECTORY",
		"description": "Hiermit wird das Ausgabeverzeichnis für Swift-Module angegeben, die vom Ziel bereitgestellt werden."
	},
	"Swift_MODULE_NAME": {
		"name": "Swift_MODULE_NAME",
		"description": "Diese Eigenschaft gibt den Namen des Swift-Moduls an. Standardmäßig wird der Name des Ziels verwendet."
	},
	"TEST_LAUNCHER": {
		"name": "TEST_LAUNCHER",
		"description": "Verwenden Sie das angegebene Startprogramm, um ausführbare Dateien auszuführen. Dieser Befehl wird add_test Befehlen für ausführbare Buildzielsystembefehle als Präfix hinzugefügt und muss auf dem Hostcomputer ausgeführt werden."
	},
	"TRANSITIVE_COMPILE_PROPERTIES": {
		"name": "TRANSITIVE_COMPILE_PROPERTIES",
		"description": "Eigenschaften, die der Generatorausdruck TARGET_PROPERTY auf dem Ziel und seinen Abhängigen als Union von Werten auswertet, die beim transitiven Abschluss von Verknüpfungsabhängigkeiten erfasst wurden, ohne von LINK_ONLY überwachte Einträge."
	},
	"TRANSITIVE_LINK_PROPERTIES": {
		"name": "TRANSITIVE_LINK_PROPERTIES",
		"description": "Eigenschaften, die der Generatorausdruck TARGET_PROPERTY auf dem Ziel und seinen Abhängigen als Union von Werten auswertet, die beim transitiven Abschluss von Verknüpfungsabhängigkeiten erfasst wurden, einschließlich von LINK_ONLY überwachter Einträge."
	},
	"UNITY_BUILD": {
		"name": "UNITY_BUILD",
		"description": "Wenn diese Eigenschaft auf TRUE festgelegt ist, werden die Zielquelldateien zur schnelleren Kompilierung in Batches zusammengefasst. Dies wird erreicht, indem (ein Satz an) Unity-Quellen erstellt wird, die die ursprünglichen Quellen enthalten (#include). Anschließend werden diese Unity-Quellen anstelle der ursprünglichen Quellen kompiliert. Das Ergebnis wird als Unity- oder Jumbo-Build bezeichnet."
	},
	"UNITY_BUILD_BATCH_SIZE": {
		"name": "UNITY_BUILD_BATCH_SIZE",
		"description": "Hiermit wird die maximale Anzahl von Quelldateien angegeben, die in einer beliebigen Unity-Quelldatei kombiniert werden können, wenn über die UNITY_BUILD-Zieleigenschaft Unity-Builds aktiviert werden. Die ursprünglichen Quelldateien werden auf so viele Unity-Quelldateien wie erforderlich verteilt, um diesen Grenzwert zu berücksichtigen."
	},
	"UNITY_BUILD_CODE_AFTER_INCLUDE": {
		"name": "UNITY_BUILD_CODE_AFTER_INCLUDE",
		"description": "Ein Codeschnipsel, der durch die UNITY_BUILD-Funktion unmittelbar nach jeder #include-Anweisung wortgetreu in die generierten Unity-Quelldateien eingefügt wird. Beispiel:"
	},
	"UNITY_BUILD_CODE_BEFORE_INCLUDE": {
		"name": "UNITY_BUILD_CODE_BEFORE_INCLUDE",
		"description": "Ein Codeschnipsel, der durch die UNITY_BUILD-Funktion unmittelbar vor jeder #include-Anweisung wortgetreu in die generierten Unity-Quelldateien eingefügt wird. Beispiel:"
	},
	"UNITY_BUILD_MODE": {
		"name": "UNITY_BUILD_MODE",
		"description": "CMake stellt unterschiedliche Algorithmen zur Auswahl der Quellen bereit, die zu einem Bucket zusammengefasst werden. Die Auswahl wird mithilfe dieser Eigenschaft festgelegt, für die folgende Werte zulässig sind:"
	},
	"UNITY_BUILD_UNIQUE_ID": {
		"name": "UNITY_BUILD_UNIQUE_ID",
		"description": "Der Name eines gültigen C-Bezeichners, der bei Unity-Builds für jede Datei auf einen eindeutigen Wert festgelegt ist."
	},
	"VERIFY_INTERFACE_HEADER_SETS": {
		"name": "VERIFY_INTERFACE_HEADER_SETS",
		"description": "Wird verwendet, um zu überprüfen, ob alle Header in den ÖFFENTLICHEN und SCHNITTSTELLEN-Headersätzen eines Ziels eigenständig eingeschlossen werden können."
	},
	"VERSION": {
		"name": "VERSION",
		"description": "Versionsnummer eines freigegebenen Bibliotheksziels."
	},
	"VISIBILITY_INLINES_HIDDEN": {
		"name": "VISIBILITY_INLINES_HIDDEN",
		"description": "Legt fest, ob ein Kompilierungsflag hinzugefügt wird, um Symbole von Inlinefunktionen auszublenden"
	},
	"VS_CONFIGURATION_TYPE": {
		"name": "VS_CONFIGURATION_TYPE",
		"description": "Typ der Projektkonfiguration für Visual Studio."
	},
	"VS_DEBUGGER_COMMAND": {
		"name": "VS_DEBUGGER_COMMAND",
		"description": "Legt den lokalen Debuggerbefehl für Visual Studio C++-Ziele fest. Der Eigenschaftswert kann Generatorausdrücke <cmake-generator-expressions(7)> verwenden. Dies wird in <LocalDebuggerCommand> in der Visual Studio-Projektdatei festgelegt. Diese Eigenschaft wird durch den Wert der Variablen CMAKE_VS_DEBUGGER_COMMAND initialisiert, wenn sie beim Erstellen eines Ziels festgelegt wird."
	},
	"VS_DEBUGGER_COMMAND_ARGUMENTS": {
		"name": "VS_DEBUGGER_COMMAND_ARGUMENTS",
		"description": "Legt die Befehlszeilenargumente des lokalen Debuggers für Visual Studio C++-Ziele fest. Der Eigenschaftswert kann Generatorausdrücke <cmake-generator-expressions(7)> verwenden. Das können Sie in <LocalDebuggerCommandArguments> in der Visual Studio-Projektdatei festlegen. Diese Eigenschaft wird durch den Wert der Variablen CMAKE_VS_DEBUGGER_COMMAND_ARGUMENTS initialisiert, wenn sie beim Erstellen eines Ziels festgelegt wird."
	},
	"VS_DEBUGGER_ENVIRONMENT": {
		"name": "VS_DEBUGGER_ENVIRONMENT",
		"description": "Legt die lokale Debuggerumgebung für Visual Studio C++-Ziele fest. Der Eigenschaftswert kann Generatorausdrücke <cmake-generator-expressions(7)> verwenden. Das können Sie in <LocalDebuggerEnvironment> in der Visual Studio Projektdatei festlegen. Diese Eigenschaft wird durch den Wert der Variablen CMAKE_VS_DEBUGGER_ENVIRONMENT initialisiert, wenn sie beim Erstellen eines Ziels festgelegt wird."
	},
	"VS_DEBUGGER_WORKING_DIRECTORY": {
		"name": "VS_DEBUGGER_WORKING_DIRECTORY",
		"description": "Legt das Arbeitsverzeichnis des lokalen Debuggers für Visual Studio C++-Ziele fest. Der Eigenschaftswert kann Generatorausdrücke <cmake-generator-expressions(7)> verwenden. Das können Sie in <LocalDebuggerWorkingDirectory> in der Visual Studio-Projektdatei festlegen. Diese Eigenschaft wird durch den Wert der Variablen CMAKE_VS_DEBUGGER_WORKING_DIRECTORY initialisiert, wenn sie beim Erstellen eines Ziels festgelegt wird."
	},
	"VS_DESKTOP_EXTENSIONS_VERSION": {
		"name": "VS_DESKTOP_EXTENSIONS_VERSION",
		"description": "Visual Studio Windows 10 Desktop Extensions Version"
	},
	"VS_DOTNET_DOCUMENTATION_FILE": {
		"name": "VS_DOTNET_DOCUMENTATION_FILE",
		"description": "Durch Visual Studio verwaltete Ausgabe der .NET-Projektdokumentation."
	},
	"VS_DOTNET_REFERENCEPROP_<refname>_TAG_<tagname>": {
		"name": "VS_DOTNET_REFERENCEPROP_<refname>_TAG_<tagname>",
		"description": "Definiert eine XML-Eigenschaft <tagname> für eine .NET-Referenz <refname>."
	},
	"VS_DOTNET_REFERENCES": {
		"name": "VS_DOTNET_REFERENCES",
		"description": "Durch Visual Studio verwaltete Projekt-.NET-Verweise"
	},
	"VS_DOTNET_REFERENCES_COPY_LOCAL": {
		"name": "VS_DOTNET_REFERENCES_COPY_LOCAL",
		"description": "Legt die Copy Local-Eigenschaft für alle .NET-Hinweisreferenzen im Ziel fest"
	},
	"VS_DOTNET_REFERENCE_<refname>": {
		"name": "VS_DOTNET_REFERENCE_<refname>",
		"description": "Durch Visual Studio verwalteter Projekt-.NET-Verweis mit dem Namen <refname> und Hinweispfad."
	},
	"VS_DOTNET_STARTUP_OBJECT": {
		"name": "VS_DOTNET_STARTUP_OBJECT",
		"description": "Legt die Startobjekteigenschaft in Microsoft Visual Studio .NET-Zielen fest. Der Eigenschaftswert definiert einen vollqualifizierten Klassennamen (einschließlich Paketname), beispielsweise: MyCompany.Package.MyStarterClass."
	},
	"VS_DOTNET_TARGET_FRAMEWORK_VERSION": {
		"name": "VS_DOTNET_TARGET_FRAMEWORK_VERSION",
		"description": "Geben Sie die Version des .NET-Zielframeworks an."
	},
	"VS_DPI_AWARE": {
		"name": "VS_DPI_AWARE",
		"description": "Hiermit können in den Eigenschaften des Visual Studio-Zielprojekts DPI-Werte festgelegt werden: \"Manifesttool\" > \"Eingabe und Ausgabe\" > \"DPI\"."
	},
	"VS_FILTER_PROPS": {
		"name": "VS_FILTER_PROPS",
		"description": "Legt die Filterpropsdatei fest, die in die Visual Studio C++-Projektfilterdatei eingeschlossen werden soll."
	},
	"VS_GLOBAL_KEYWORD": {
		"name": "VS_GLOBAL_KEYWORD",
		"description": "Visual Studio-Projektschlüsselwort."
	},
	"VS_GLOBAL_PROJECT_TYPES": {
		"name": "VS_GLOBAL_PROJECT_TYPES",
		"description": "Visual Studio-Projekttyp(en)."
	},
	"VS_GLOBAL_ROOTNAMESPACE": {
		"name": "VS_GLOBAL_ROOTNAMESPACE",
		"description": "Stammnamespace für Visual Studio-Projekt."
	},
	"VS_GLOBAL_<variable>": {
		"name": "VS_GLOBAL_<variable>",
		"description": "Globale Variable für ein spezifisches Visual Studio-Projekt."
	},
	"VS_IOT_EXTENSIONS_VERSION": {
		"name": "VS_IOT_EXTENSIONS_VERSION",
		"description": "Visual Studio Windows 10 IoT Extensions Version"
	},
	"VS_IOT_STARTUP_TASK": {
		"name": "VS_IOT_STARTUP_TASK",
		"description": "Visual Studio Windows 10 IoT: kontinuierliche Hintergrundaufgabe"
	},
	"VS_JUST_MY_CODE_DEBUGGING": {
		"name": "VS_JUST_MY_CODE_DEBUGGING",
		"description": "Hiermit wird nur eigener Code mit dem Visual Studio-Debugger aktiviert."
	},
	"VS_KEYWORD": {
		"name": "VS_KEYWORD",
		"description": "Entfernt. Hierdurch wurde einmal das Visual Studio Projekt Schlüsselwort (keyword) für den Generator von Visual Studio 9 2008 und älter angegeben, aber alle diese Generatoren wurden entfernt."
	},
	"VS_MOBILE_EXTENSIONS_VERSION": {
		"name": "VS_MOBILE_EXTENSIONS_VERSION",
		"description": "Version der mobilen Windows 10-Erweiterungen für Visual Studio"
	},
	"VS_NO_COMPILE_BATCHING": {
		"name": "VS_NO_COMPILE_BATCHING",
		"description": "Deaktivieren Sie die Batchverarbeitung für das Kompilieren für das Ziel. In der Regel ruft MSBuild den Compiler mit mehreren c/cpp-Dateien auf, und der Compiler startet Unterprozesse für jede Datei, um den Build parallel zu gestalten. Wenn der Compiler mit jeweils einer Datei aufgerufen werden soll, legen Sie VS_NO_COMPILE_BATCHING auf EIN fest. Wenn dieses Flag festgelegt ist, ruft MSBuild den Compiler mit jeweils einer c/cpp-Datei auf. Nützlich, wenn Sie ein Tool verwenden möchten, das den Compiler ersetzt, beispielsweise ein Tool zur Buildzwischenspeicherung."
	},
	"VS_NO_SOLUTION_DEPLOY": {
		"name": "VS_NO_SOLUTION_DEPLOY",
		"description": "Hiermit wird angegeben, dass das Ziel in der generierten Visual Studio-Lösung nicht zur Bereitstellung auf einem Windows CE- oder Windows Phone-Gerät gekennzeichnet werden soll."
	},
	"VS_PACKAGE_REFERENCES": {
		"name": "VS_PACKAGE_REFERENCES",
		"description": "Visual Studio-Paketverweise für NuGet."
	},
	"VS_PLATFORM_TOOLSET": {
		"name": "VS_PLATFORM_TOOLSET",
		"description": "Hiermit wird das zum Erstellen eines Ziels verwendete Plattformtoolset überschrieben."
	},
	"VS_PROJECT_IMPORT": {
		"name": "VS_PROJECT_IMPORT",
		"description": "Durch Visual Studio verwaltete Projektimporte."
	},
	"VS_SCC_AUXPATH": {
		"name": "VS_SCC_AUXPATH",
		"description": "Zusatzpfad für die Quellcodeverwaltung in Visual Studio."
	},
	"VS_SCC_LOCALPATH": {
		"name": "VS_SCC_LOCALPATH",
		"description": "Lokaler Pfad zur Quellcodeverwaltung in Visual Studio"
	},
	"VS_SCC_PROJECTNAME": {
		"name": "VS_SCC_PROJECTNAME",
		"description": "Visual Studio-Quellcodeverwaltungsprojekt."
	},
	"VS_SCC_PROVIDER": {
		"name": "VS_SCC_PROVIDER",
		"description": "Programm zur Quellcodeverwaltung in Visual Studio."
	},
	"VS_SDK_REFERENCES": {
		"name": "VS_SDK_REFERENCES",
		"description": "Dies sind SDK-Verweise für das Visual Studio-Projekt. Geben Sie eine durch Semikolon getrennte Liste mit SDK-Verweisen an, die einem generierten Visual Studio-Projekt hinzugefügt werden. Beispiel: Microsoft.AdMediatorWindows81, Version=1.0."
	},
	"VS_SOLUTION_DEPLOY": {
		"name": "VS_SOLUTION_DEPLOY",
		"description": "Hiermit wird angegeben, dass das Ziel zur Bereitstellung gekennzeichnet werden soll, wenn als Ziel nicht Windows CE, Windows Phone oder eine Windows Store-Anwendung verwendet wird."
	},
	"VS_SOURCE_SETTINGS_<tool>": {
		"name": "VS_SOURCE_SETTINGS_<tool>",
		"description": "Hiermit werden beliebige Elementmetadaten für alle nicht erstellten Dateien festgelegt, die <tool> verwenden."
	},
	"VS_USER_PROPS": {
		"name": "VS_USER_PROPS",
		"description": "Legt die Benutzereigenschaftendatei fest, die in die Visual Studio C++-Projektdatei einzubeziehen ist. Der Standardpfad ist $(UserRootDir)\\\\Microsoft.Cpp.$(Platform).user.props. In den meisten Fällen entspricht dies %LOCALAPPDATA%\\\\Microsoft\\\\MSBuild\\\\v4.0\\\\Microsoft.Cpp.Win32.user.props oder %LOCALAPPDATA%\\\\Microsoft\\\\MSBuild\\\\v4.0\\\\Microsoft.Cpp.x64.user.props."
	},
	"VS_USE_DEBUG_LIBRARIES": {
		"name": "VS_USE_DEBUG_LIBRARIES",
		"description": "Geben Sie für Visual Studio-Generatoren an, welche Konfigurationen als Debugkonfigurationen betrachtet werden. Hiermit wird die Einstellung \"UseDebugLibraries\" in jeder Konfiguration einer .vcxproj Datei gesteuert."
	},
	"VS_WINDOWS_TARGET_PLATFORM_MIN_VERSION": {
		"name": "VS_WINDOWS_TARGET_PLATFORM_MIN_VERSION",
		"description": "Visual Studio: Windows-Zielplattform, Mindestversion"
	},
	"VS_WINRT_COMPONENT": {
		"name": "VS_WINRT_COMPONENT",
		"description": "Markieren Sie für den Visual Studio-Generator ein Ziel als Windows-Runtime-Komponente. Kompilieren Sie das Ziel mit C++/CX-Spracherweiterungen für Windows-Runtime. Bei SHARED- und MODULE-Bibliotheken definiert dies auch den Präprozessormakro _WINRT_DLL."
	},
	"VS_WINRT_EXTENSIONS": {
		"name": "VS_WINRT_EXTENSIONS",
		"description": "Veraltet. Verwenden Sie stattdessen VS_WINRT_COMPONENT. Diese Eigenschaft war eine experimentelle Teilimplementierung von VS_WINRT_COMPONENT."
	},
	"VS_WINRT_REFERENCES": {
		"name": "VS_WINRT_REFERENCES",
		"description": "Visual Studio-Projekt: Windows-Runtime-Metadatenverweise"
	},
	"WATCOM_RUNTIME_LIBRARY": {
		"name": "WATCOM_RUNTIME_LIBRARY",
		"description": "Wählen Sie die Watcom-Laufzeitbibliothek für die Verwendung durch Compiler aus, welche die Watcom-ABI als Ziel verwenden."
	},
	"WIN32_EXECUTABLE": {
		"name": "WIN32_EXECUTABLE",
		"description": "Erstellen Sie unter Windows mit einem WinMain-Einstiegspunkt eine ausführbare Datei."
	},
	"WINDOWS_EXPORT_ALL_SYMBOLS": {
		"name": "WINDOWS_EXPORT_ALL_SYMBOLS",
		"description": "Diese Eigenschaft wird nur für MS-kompatible Tools unter Windows implementiert."
	},
	"XCODE_ATTRIBUTE_<an-attribute>": {
		"name": "XCODE_ATTRIBUTE_<an-attribute>",
		"description": "Legen Sie die Attribute eines Xcode-Ziels direkt fest."
	},
	"XCODE_EMBED_FRAMEWORKS_CODE_SIGN_ON_COPY": {
		"name": "XCODE_EMBED_FRAMEWORKS_CODE_SIGN_ON_COPY",
		"description": "Hiermit wird der Xcode-Generator angewiesen, die Codesignierung für alle Frameworks und Bibliotheken durchzuführen, die über die Eigenschaft XCODE_EMBED_FRAMEWORKS <XCODE_EMBED_<type>> eingebettet sind."
	},
	"XCODE_EMBED_FRAMEWORKS_REMOVE_HEADERS_ON_COPY": {
		"name": "XCODE_EMBED_FRAMEWORKS_REMOVE_HEADERS_ON_COPY",
		"description": "Hiermit wird der Xcode-Generator angewiesen, die Header aus allen Frameworks zu entfernen, die über die Eigenschaft XCODE_EMBED_FRAMEWORKS <XCODE_EMBED_<type>> eingebettet sind."
	},
	"XCODE_EMBED_<type>": {
		"name": "XCODE_EMBED_<type>",
		"description": "Teilen Sie dem Xcode-Generator mit, die angegebene Liste der Elemente in das Zielbündel einzubetten. <type> gibt die zu verwendende Einbettungsphase an. In der Xcode-Dokumentation finden Sie die Basisposition für jeden einzelnen <type>."
	},
	"XCODE_EMBED_<type>_CODE_SIGN_ON_COPY": {
		"name": "XCODE_EMBED_<type>_CODE_SIGN_ON_COPY",
		"description": "Eine Boolesche Eigenschaft, die nur vom Xcode-Generator verwendet wird. Sie gibt an, ob die Codesignatur für die Elemente ausgeführt werden soll, die mithilfe der XCODE_EMBED_-Eigenschaft eingebettet sind."
	},
	"XCODE_EMBED_<type>_PATH": {
		"name": "XCODE_EMBED_<type>_PATH",
		"description": "Diese Eigenschaft wird nur vom Xcode-Generator verwendet. Wenn diese Option definiert ist, wird der relative Pfad angegeben, der beim Einbetten der von XCODE_EMBED_ angegebenen Elemente verwendet werden soll. Der Pfad ist relativ zu dem Basisspeicherort der mit <type> verknüpften Buildphase für Embed-xxx. In der Xcode-Dokumentation finden Sie die Basisposition für jeden einzelnen <type>."
	},
	"XCODE_EMBED_<type>_REMOVE_HEADERS_ON_COPY": {
		"name": "XCODE_EMBED_<type>_REMOVE_HEADERS_ON_COPY",
		"description": "Boolesche Eigenschaft, die nur vom Xcode-Generator verwendet wird. Sie gibt an, ob Header aus allen Frameworks entfernt werden, die mit der XCODE_EMBED_-Eigenschaft eingebettet sind."
	},
	"XCODE_GENERATE_SCHEME": {
		"name": "XCODE_GENERATE_SCHEME",
		"description": "Wenn diese Variable aktiviert ist, generiert der Xcode-Generator Schemadateien. Diese sind nützlich, um Aktionen über die Befehlszeile aufzurufen, zu analysieren, zu archivieren, zu Testzwecken zu erstellen und zu testen."
	},
	"XCODE_LINK_BUILD_PHASE_MODE": {
		"name": "XCODE_LINK_BUILD_PHASE_MODE",
		"description": "Bei Verwendung des Xcode-Generators werden die zu verknüpfenden Bibliotheken in der Xcode-Projektdatei entweder über die Buildphase \"Binärdatei mit Bibliotheken verknüpfen\" oder direkt als Linkerflags angegeben. Die erste Option ermöglicht Xcode das Verwalten von Buildpfaden. Dies kann beim Erstellen von Xcode-Archiven erforderlich sein, weil möglicherweise andere Buildpfade als bei einem regulären Build verwendet werden."
	},
	"XCODE_PRODUCT_TYPE": {
		"name": "XCODE_PRODUCT_TYPE",
		"description": "Legen Sie das Xcode-productType-Attribut für dessen Verweis auf ein Ziel fest. CMake berechnet basierend auf dem Zieltyp einen Standardwert, kann jedoch auch explizit mit dieser Eigenschaft Berechnungen durchführen."
	},
	"XCODE_SCHEME_ADDRESS_SANITIZER": {
		"name": "XCODE_SCHEME_ADDRESS_SANITIZER",
		"description": "Legt fest, ob im Diagnoseabschnitt des generierten Xcode-Schemas \"Address Sanitizer\" aktiviert wird."
	},
	"XCODE_SCHEME_ADDRESS_SANITIZER_USE_AFTER_RETURN": {
		"name": "XCODE_SCHEME_ADDRESS_SANITIZER_USE_AFTER_RETURN",
		"description": "Legt fest, ob im Diagnoseabschnitt des generierten Xcode-Schemas \"Detect use of stack after return\" aktiviert wird."
	},
	"XCODE_SCHEME_ARGUMENTS": {
		"name": "XCODE_SCHEME_ARGUMENTS",
		"description": "Geben Sie Befehlszeilenargumente an, die dem Argumentenbereich des generierten Xcode-Schemas hinzugefügt werden."
	},
	"XCODE_SCHEME_DEBUG_AS_ROOT": {
		"name": "XCODE_SCHEME_DEBUG_AS_ROOT",
		"description": "Hiermit wird angegeben, ob das Ziel als \"root\" gedebuggt wird."
	},
	"XCODE_SCHEME_DEBUG_DOCUMENT_VERSIONING": {
		"name": "XCODE_SCHEME_DEBUG_DOCUMENT_VERSIONING",
		"description": "Gibt an, ob bei Verwendung des Dokumentversionsbrowsers im Abschnitt mit den Optionen des generierten Xcode-Schemas die Einstellung zum Zulassen des Debuggens aktiviert wird."
	},
	"XCODE_SCHEME_DISABLE_MAIN_THREAD_CHECKER": {
		"name": "XCODE_SCHEME_DISABLE_MAIN_THREAD_CHECKER",
		"description": "Legt fest, ob \"Main Thread Checker\" im Abschnitt \"Diagnostics\" des generierten Xcode-Schemas deaktiviert wird."
	},
	"XCODE_SCHEME_DYNAMIC_LIBRARY_LOADS": {
		"name": "XCODE_SCHEME_DYNAMIC_LIBRARY_LOADS",
		"description": "Legt fest, ob im Diagnoseabschnitt des generierten Xcode-Schemas \"Dynamic Library Loads\" aktiviert wird."
	},
	"XCODE_SCHEME_DYNAMIC_LINKER_API_USAGE": {
		"name": "XCODE_SCHEME_DYNAMIC_LINKER_API_USAGE",
		"description": "Legt fest, ob im Diagnoseabschnitt des generierten Xcode-Schemas \"Dynamic Linker API usage\" aktiviert wird."
	},
	"XCODE_SCHEME_ENABLE_GPU_API_VALIDATION": {
		"name": "XCODE_SCHEME_ENABLE_GPU_API_VALIDATION",
		"description": "Eigenschaftswert für Metal: API-Validierung im Abschnitt „Optionen“ des generierten Xcode-Schemas."
	},
	"XCODE_SCHEME_ENABLE_GPU_FRAME_CAPTURE_MODE": {
		"name": "XCODE_SCHEME_ENABLE_GPU_FRAME_CAPTURE_MODE",
		"description": "Eigenschaftswert für die GPU-Frame-Erfassung im Abschnitt „Optionen“ des generierten Xcode-Schemas. Beispielwerte sind Metal und Disabled."
	},
	"XCODE_SCHEME_ENABLE_GPU_SHADER_VALIDATION": {
		"name": "XCODE_SCHEME_ENABLE_GPU_SHADER_VALIDATION",
		"description": "Eigenschaftswert für Metal: Shader-Validierung im Abschnitt „Optionen“ des generierten Xcode-Schemas."
	},
	"XCODE_SCHEME_ENVIRONMENT": {
		"name": "XCODE_SCHEME_ENVIRONMENT",
		"description": "Geben Sie Umgebungsvariablen an, die dem Argumentenabschnitt des generierten Xcode-Schemas hinzugefügt werden."
	},
	"XCODE_SCHEME_EXECUTABLE": {
		"name": "XCODE_SCHEME_EXECUTABLE",
		"description": "Geben Sie im Informationsabschnitt des generierten Xcode-Schemas den Pfad zur ausführbaren Datei an. Wird keine Einstellung festgelegt, wählt der Schemagenerator das aktuelle Ziel aus, sofern die ausgeführt werden kann."
	},
	"XCODE_SCHEME_GUARD_MALLOC": {
		"name": "XCODE_SCHEME_GUARD_MALLOC",
		"description": "Legt fest, ob im Diagnoseabschnitt des generierten Xcode-Schemas \"Guard Malloc\" aktiviert wird."
	},
	"XCODE_SCHEME_LAUNCH_CONFIGURATION": {
		"name": "XCODE_SCHEME_LAUNCH_CONFIGURATION",
		"description": "Legen Sie die Buildkonfiguration fest, um das Ziel auszuführen."
	},
	"XCODE_SCHEME_LAUNCH_MODE": {
		"name": "XCODE_SCHEME_LAUNCH_MODE",
		"description": "Eigenschaftswert für Start im Abschnitt „Info“ des generierten Xcode-Schemas."
	},
	"XCODE_SCHEME_MAIN_THREAD_CHECKER_STOP": {
		"name": "XCODE_SCHEME_MAIN_THREAD_CHECKER_STOP",
		"description": "Legt fest, ob im Abschnitt \"Diagnostics\" des generierten Xcode-Schemas bei Problemen die Main Thread Checker-Option \"Pause\" aktiviert wird."
	},
	"XCODE_SCHEME_MALLOC_GUARD_EDGES": {
		"name": "XCODE_SCHEME_MALLOC_GUARD_EDGES",
		"description": "Legt fest, ob im Diagnoseabschnitt des generierten Xcode-Schemas \"Malloc Guard Edges\" aktiviert wird."
	},
	"XCODE_SCHEME_MALLOC_SCRIBBLE": {
		"name": "XCODE_SCHEME_MALLOC_SCRIBBLE",
		"description": "Legt fest, ob im Diagnoseabschnitt des generierten Xcode-Schemas \"Malloc Scribble\" aktiviert wird."
	},
	"XCODE_SCHEME_MALLOC_STACK": {
		"name": "XCODE_SCHEME_MALLOC_STACK",
		"description": "Legt fest, ob im Diagnoseabschnitt des generierten Xcode-Schemas \"Malloc Stack\" aktiviert wird."
	},
	"XCODE_SCHEME_THREAD_SANITIZER": {
		"name": "XCODE_SCHEME_THREAD_SANITIZER",
		"description": "Legt fest, ob im Diagnoseabschnitt des generierten Xcode-Schemas \"Thread Sanitizer\" aktiviert wird."
	},
	"XCODE_SCHEME_THREAD_SANITIZER_STOP": {
		"name": "XCODE_SCHEME_THREAD_SANITIZER_STOP",
		"description": "Legt fest, ob im Abschnitt \"Diagnostics\" des generierten Xcode-Schemas bei Problemen die Option \"Thread Sanitizer – Pause\" aktiviert wird."
	},
	"XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER": {
		"name": "XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER",
		"description": "Legt fest, ob im Abschnitt \"Diagnostics\" des generierten Xcode-Schemas \"Undefined Behavior Sanitizer\" aktiviert wird."
	},
	"XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER_STOP": {
		"name": "XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER_STOP",
		"description": "Legt fest, ob im Abschnitt \"Diagnostics\" des generierten Xcode-Schemas bei Problemen die Undefined Behavior Sanitizer-Option \"Pause\" aktiviert wird."
	},
	"XCODE_SCHEME_WORKING_DIRECTORY": {
		"name": "XCODE_SCHEME_WORKING_DIRECTORY",
		"description": "Hiermit wird das Arbeitsverzeichnis der Ausführungs- und Profilaktionen im generierten Xcode-Schema angegeben. Falls der Wert Generatorausdrücke enthält, werden diese ausgewertet."
	},
	"XCODE_SCHEME_ZOMBIE_OBJECTS": {
		"name": "XCODE_SCHEME_ZOMBIE_OBJECTS",
		"description": "Legt fest, ob im Diagnoseabschnitt des generierten Xcode-Schemas \"Zombie Objects\" aktiviert wird."
	},
	"XCODE_XCCONFIG": {
		"name": "XCODE_XCCONFIG",
		"description": "Wenn diese Einstellung festgelegt ist, registriert der Xcode-Generator die angegebene Datei als XCConfig-Datei auf Zielebene. Für weitere Informationen zu globalen XCConfig-Dateien siehe die Variable CMAKE_XCODE_XCCONFIG."
	},
	"XCTEST": {
		"name": "XCTEST",
		"description": "Auf dem Mac ist dieses Ziel ein XCTest-CFBundle."
	}
}