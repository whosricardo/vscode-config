{
	"AddFileDependencies": {
		"name": "AddFileDependencies",
		"description": "新增相依性至來源檔案。"
	},
	"AndroidTestUtilities": {
		"name": "AndroidTestUtilities",
		"description": "建立自動將指定資料載入 Android 裝置的測試。"
	},
	"BundleUtilities": {
		"name": "BundleUtilities",
		"description": "可協助組合獨立 套件組合應用程式的函式。"
	},
	"CheckCCompilerFlag": {
		"name": "CheckCCompilerFlag",
		"description": "檢查 C 編譯器是否支援指定旗標。"
	},
	"CheckCompilerFlag": {
		"name": "CheckCompilerFlag",
		"description": "檢查編譯器是否支援指定旗標。"
	},
	"CheckCSourceCompiles": {
		"name": "CheckCSourceCompiles",
		"description": "檢查所提供 C 來源是否編譯並連結至可執行檔。"
	},
	"CheckCSourceRuns": {
		"name": "CheckCSourceRuns",
		"description": "檢查所提供 C 來源是否編譯並連結至可執行檔，並可在接下來執行。"
	},
	"CheckCXXCompilerFlag": {
		"name": "CheckCXXCompilerFlag",
		"description": "檢查 CXX 編譯器是否支援指定旗標。"
	},
	"CheckCXXSourceCompiles": {
		"name": "CheckCXXSourceCompiles",
		"description": "檢查所提供 C++ 來源是否編譯並連結至可執行檔。"
	},
	"CheckCXXSourceRuns": {
		"name": "CheckCXXSourceRuns",
		"description": "檢查所提供 C++ 來源是否編譯並連結至可執行檔，並可在接下來執行。"
	},
	"CheckCXXSymbolExists": {
		"name": "CheckCXXSymbolExists",
		"description": "檢查符號是否存在於函式、變數或巨集 C++。"
	},
	"CheckFortranCompilerFlag": {
		"name": "CheckFortranCompilerFlag",
		"description": "檢查 Fortran 編譯器是否支援指定旗標。"
	},
	"CheckFortranFunctionExists": {
		"name": "CheckFortranFunctionExists",
		"description": "檢查 Fortran 函式是否存在。"
	},
	"CheckFortranSourceCompiles": {
		"name": "CheckFortranSourceCompiles",
		"description": "檢查所提供 Fortran 來源是否編譯並連結至可執行檔。"
	},
	"CheckFortranSourceRuns": {
		"name": "CheckFortranSourceRuns",
		"description": "檢查所提供 Fortran 來源是否編譯並連結至可執行檔，並可在接下來執行。"
	},
	"CheckFunctionExists": {
		"name": "CheckFunctionExists",
		"description": "檢查 C 函式是否可連結"
	},
	"CheckIncludeFile": {
		"name": "CheckIncludeFile",
		"description": "提供巨集來檢查標頭檔案是否可包含在 C 中。"
	},
	"CheckIncludeFileCXX": {
		"name": "CheckIncludeFileCXX",
		"description": "提供巨集來檢查標頭檔案是否可包含在 CXX 中。"
	},
	"CheckIncludeFiles": {
		"name": "CheckIncludeFiles",
		"description": "提供巨集來檢查一或多個標頭檔案的清單是否可一併包含。"
	},
	"CheckIPOSupported": {
		"name": "CheckIPOSupported",
		"description": "檢查編譯器是否支援跨程序式最佳化 (IPO/LTO)。在啟用 INTERPROCEDURAL_OPTIMIZATION 目標屬性之前，請使用此功能。"
	},
	"CheckLanguage": {
		"name": "CheckLanguage",
		"description": "檢查語言是否可以透過 enable_language 或專案命令啟用: "
	},
	"CheckLibraryExists": {
		"name": "CheckLibraryExists",
		"description": "檢查函式是否存在。"
	},
	"CheckLinkerFlag": {
		"name": "CheckLinkerFlag",
		"description": "檢查編譯器是否支援指定連結旗標。"
	},
	"CheckOBJCCompilerFlag": {
		"name": "CheckOBJCCompilerFlag",
		"description": "檢查 Objective-C 編譯器是否支援指定旗標。"
	},
	"CheckOBJCSourceCompiles": {
		"name": "CheckOBJCSourceCompiles",
		"description": "檢查所提供 Objective-C 來源是否編譯並連結至可執行檔。"
	},
	"CheckOBJCSourceRuns": {
		"name": "CheckOBJCSourceRuns",
		"description": "檢查所提供 Objective-C 來源是否編譯並連結至可執行檔，並可在接下來執行。"
	},
	"CheckOBJCXXCompilerFlag": {
		"name": "CheckOBJCXXCompilerFlag",
		"description": "檢查 Objective-C 編譯器是否支援指定旗標。"
	},
	"CheckOBJCXXSourceCompiles": {
		"name": "CheckOBJCXXSourceCompiles",
		"description": "檢查所提供 Objective-C++ 來源是否編譯並連結至可執行檔。"
	},
	"CheckOBJCXXSourceRuns": {
		"name": "CheckOBJCXXSourceRuns",
		"description": "檢查所提供 Objective-C++ 來源是否編譯並連結至可執行檔，並可在接下來執行。"
	},
	"CheckPIESupported": {
		"name": "CheckPIESupported",
		"description": "檢查連結器是否支援可執行檔的位置獨立程式碼 (PIE) 或無位置NO_PIE 程式碼 (NO_PIE)。使用此功能來確保可執行檔的 POSITION_INDEPENDENT_CODE 目標屬性在連結時間會採用。"
	},
	"CheckPrototypeDefinition": {
		"name": "CheckPrototypeDefinition",
		"description": "檢查我們預期原型是否正確。"
	},
	"CheckSourceCompiles": {
		"name": "CheckSourceCompiles",
		"description": "檢查所提供來源是否編譯並連結至可執行檔。"
	},
	"CheckSourceRuns": {
		"name": "CheckSourceRuns",
		"description": "檢查所提供來源是否編譯並連結至可執行檔，並可在接下來執行。"
	},
	"CheckStructHasMember": {
		"name": "CheckStructHasMember",
		"description": "檢查指定的結構或類別是否具有指定的成員變數"
	},
	"CheckSymbolExists": {
		"name": "CheckSymbolExists",
		"description": "提供巨集來檢查符號是否存在於 C 中的函式、變數或巨集。"
	},
	"CheckTypeSize": {
		"name": "CheckTypeSize",
		"description": "檢查類型的大小"
	},
	"CheckVariableExists": {
		"name": "CheckVariableExists",
		"description": "檢查變數是否存在。"
	},
	"CMakeAddFortranSubdirectory": {
		"name": "CMakeAddFortranSubdirectory",
		"description": "新增僅 fortran 的子目錄、尋找 fortran 編譯器及組建。"
	},
	"CMakeBackwardCompatibilityCXX": {
		"name": "CMakeBackwardCompatibilityCXX",
		"description": "定義多個回溯相容性變數"
	},
	"CMakeDependentOption": {
		"name": "CMakeDependentOption",
		"description": "提供依存於其他選項之選項的巨集。"
	},
	"CMakeDetermineVSServicePack": {
		"name": "CMakeDetermineVSServicePack",
		"description": "包含編譯器版本號碼的 CMAKE_<LANG>_COMPILER_VERSION 變數已取代此模組的功能。"
	},
	"CMakeExpandImportedTargets": {
		"name": "CMakeExpandImportedTargets",
		"description": "一旦需要此模組，才能將已匯出的目標擴充到它們在磁碟上參考的基礎程式庫，以用於 try_compile 和 try_run 命令。這些命令現在支援其 LINK_LIBRARIES 選項中的已匯出程式庫 (自 cMake 2.8.11 for try_compile 和 CMake 3.2 for try_run)。"
	},
	"CMakeFindDependencyMacro": {
		"name": "CMakeFindDependencyMacro",
		"description": "``find_dependency()`` 巨集會包裝套件相依性 :command:`find_package` call 呼叫。"
	},
	"CMakeFindFrameworks": {
		"name": "CMakeFindFrameworks",
		"description": "尋找 OSX 架構的協助程式模組"
	},
	"CMakeFindPackageMode": {
		"name": "CMakeFindPackageMode",
		"description": "使用 --find-package <Find-Package Tool Mode> 時，Cmake 會執行此檔案。預期會使用 -D 設定下列變數: "
	},
	"CMakeForceCompiler": {
		"name": "CMakeForceCompiler",
		"description": "當 CMake 無法自動偵測編譯器識別時，此模組提供的巨集曾是供跨編譯工具鏈檔案使用。自此模組推出以來，CMake 的編譯器識別功能已改善，現在可以開始進行辨識任何編譯器。此外，CMake 從編譯器偵測到的資訊套件現在已過於廣泛，無法由使用這些巨集的工具鏈檔案提供。"
	},
	"CMakeGraphVizOptions": {
		"name": "CMakeGraphVizOptions",
		"description": "CMake 的內建 Graphviz 支援。"
	},
	"CMakePackageConfigHelpers": {
		"name": "CMakePackageConfigHelpers",
		"description": "協助程式功能，用於建立其他專案可包含的設定檔，以尋找並使用套件。"
	},
	"CMakeParseArguments": {
		"name": "CMakeParseArguments",
		"description": "此模組一旦實作 CMake 現已原生執行的 cmake_parse_arguments 命令。現在，這是一個空的預留位置，用於與包含它的專案相容，以從 CMake 3.4 及更早版本取得命令。"
	},
	"CMakePrintHelpers": {
		"name": "CMakePrintHelpers",
		"description": "列印屬性和變數的便利函式，在針對如偵錯時非常實用。"
	},
	"CMakePrintSystemInformation": {
		"name": "CMakePrintSystemInformation",
		"description": "列印系統資訊。"
	},
	"CMakePushCheckState": {
		"name": "CMakePushCheckState",
		"description": "此模組定義三個巨集: CMAKE_PUSH_CHECK_STATE() CMAKE_POP_CHECK_STATE() 和 CMAKE_RESET_CHECK_STATE() 這些巨集可用來儲存、還原和重設 (即清除內容) 變數的狀態 CMAKE_REQUIRED_FLAGS，CMAKE_REQUIRED_DEFINITIONS，CMAKE_REQUIRED_LINK_OPTIONS，CMAKE_REQUIRED_LIBRARIES，CMAKE_REQUIRED_INCLUDES 和 CMAKE_EXTRA_INCLUDE_FILES，由 CMake 提供的各種檢查檔案使用，例如 check_function_exists() 等。變數內容會推送到堆疊上，支援多次推送。這非常實用，例如，在 Find-module 中執行這類測試時，必須設定它們，但在 Find-module 執行之後，它們的值應該與先前的值相同。"
	},
	"CMakeVerifyManifest": {
		"name": "CMakeVerifyManifest",
		"description": "CMakeVerifyManifest.cmake"
	},
	"CPack": {
		"name": "CPack",
		"description": "設定二進位安裝程式和來源套件的產生器。"
	},
	"CPackArchive": {
		"name": "CPackArchive",
		"description": "CPack Archive 產生器的文件已移動至此處: CPack Archive 產生器"
	},
	"CPackBundle": {
		"name": "CPackBundle",
		"description": "CPack Bundle 產生器的文件已移動至此處: CPack Bundle 產生器"
	},
	"CPackComponent": {
		"name": "CPackComponent",
		"description": "設定二進位安裝程式和來源套件的元件。"
	},
	"CPackCygwin": {
		"name": "CPackCygwin",
		"description": "CPack Cygwin 產生器的文件已移動至此處: CPack Cygwin 產生器"
	},
	"CPackDeb": {
		"name": "CPackDeb",
		"description": "CPack DEB 產生器的文件已移動至此處: CPack DEB 產生器"
	},
	"CPackDMG": {
		"name": "CPackDMG",
		"description": "CPack DragNDrop 產生器的文件已移動至此處: CPack DragNDrop 產生器"
	},
	"CPackFreeBSD": {
		"name": "CPackFreeBSD",
		"description": "CPack FreeBSD 產生器的文件已移動至此處: CPack FreeBSD 產生器"
	},
	"CPackIFW": {
		"name": "CPackIFW",
		"description": "此模組會尋找 Qt Installer Framework (QtIFW) 提供的命令行公用程式位置。"
	},
	"CPackIFWConfigureFile": {
		"name": "CPackIFWConfigureFile",
		"description": "此模組定義 configure_file 類似的命令，以設定以 QtIFW/SDK/Creator 樣式準備的檔案範本。"
	},
	"CPackNSIS": {
		"name": "CPackNSIS",
		"description": "CPack NSIS 產生器的文件已移動至此處: CPack NSIS 產生器"
	},
	"CPackNuGet": {
		"name": "CPackNuGet",
		"description": "CPack NuGet 產生器的文件已移動至此處: CPack NuGet 產生器"
	},
	"CPackProductBuild": {
		"name": "CPackProductBuild",
		"description": "CPack productbuild 產生器的文件已移動至此處: CPack productbuild 產生器"
	},
	"CPackRPM": {
		"name": "CPackRPM",
		"description": "CPack RPM 產生器的文件已移動至此處: CPack RPM 產生器"
	},
	"CPackWIX": {
		"name": "CPackWIX",
		"description": "CPack WIX 產生器的文件已移動至此處: CPack WIX 產生器"
	},
	"CSharpUtilities": {
		"name": "CSharpUtilities",
		"description": "讓 CSharp/.NET 目標設定更容易的函式。"
	},
	"CTest": {
		"name": "CTest",
		"description": "設定專案以使用 CTest/CDash 進行測試"
	},
	"CTestCoverageCollectGCOV": {
		"name": "CTestCoverageCollectGCOV",
		"description": "此模組提供 ctest_coverage_collect_gcov 函式。"
	},
	"CTestScriptMode": {
		"name": "CTestScriptMode",
		"description": "此檔案是由 ctest 在指令碼模式 (-S) 中讀取"
	},
	"CTestUseLaunchers": {
		"name": "CTestUseLaunchers",
		"description": "在開啟 CTEST_USE_LAUNCHERS 時，設定 RULE_LAUNCH_* 全域屬性。"
	},
	"Dart": {
		"name": "Dart",
		"description": "設定專案以使用 CTest 或舊的 Dart Tcl 用戶端進行測試"
	},
	"DeployQt4": {
		"name": "DeployQt4",
		"description": "可協助組合獨立 Qt4 可執行檔的函式。"
	},
	"Documentation": {
		"name": "Documentation",
		"description": "此模組提供 VTK 檔案架構的支援。它倚靠數個工具 (Doxygen、Perl 等)。"
	},
	"ExternalData": {
		"name": "ExternalData",
		"description": "管理儲存在來源樹狀目錄外部的資料檔案"
	},
	"ExternalProject": {
		"name": "ExternalProject",
		"description": "ExternalProject_Add() 函式會建立自訂目標，以驅動外部專案的下載、更新/修補、設定、組建、安裝和測試步驟"
	},
	"FeatureSummary": {
		"name": "FeatureSummary",
		"description": "產生已啟用/已停用功能摘要的函式。"
	},
	"FetchContent": {
		"name": "FetchContent",
		"description": "此模組可透過 ExternalProject 模組支援的任何方法，在設定時間填入內容。雖然 EExternalProject_Add() 在組建時間時下載，但 FetchContent 模組會立即提供內容，允許設定步驟使用命令中的內容，例如 add_subdirectory()，include() 或 file() 作業。"
	},
	"FindALSA": {
		"name": "FindALSA",
		"description": "尋找進階 Linux 音效架構 (ALSA)"
	},
	"FindArmadillo": {
		"name": "FindArmadillo",
		"description": "尋找 Armad C++ 程式庫。Armadillo 時是線性代數和科學運算的程式庫。"
	},
	"FindASPELL": {
		"name": "FindASPELL",
		"description": "嘗試尋找 ASPELL"
	},
	"FindAVIFile": {
		"name": "FindAVIFile",
		"description": "找出 AVIFILE 程式庫並包含路徑"
	},
	"FindBacktrace": {
		"name": "FindBacktrace",
		"description": "尋找反向追蹤 (3) 的提供者。"
	},
	"FindBISON": {
		"name": "FindBISON",
		"description": "尋找 bison 可執行檔，並提供巨集以產生自訂的組建規則。"
	},
	"FindBLAS": {
		"name": "FindBLAS",
		"description": "尋找基本線性代數子程式 (BLAS) 程式庫"
	},
	"FindBoost": {
		"name": "FindBoost",
		"description": "尋找 Boost，包括 dirs 和程式庫"
	},
	"FindBullet": {
		"name": "FindBullet",
		"description": "嘗試尋找項目符號物理引擎"
	},
	"FindBZip2": {
		"name": "FindBZip2",
		"description": "嘗試尋找 BZip2"
	},
	"FindCABLE": {
		"name": "FindCABLE",
		"description": "尋找 CABLE"
	},
	"FindCoin3D": {
		"name": "FindCoin3D",
		"description": "尋找 Coin3D (Open Inventor)"
	},
	"FindCUDA": {
		"name": "FindCUDA",
		"description": "不再需要使用此模組或呼叫 find_package (CUDA) 來編譯 CUDA 程式碼。相反地，在專案命令的上層呼叫指定的語言中，列出 CUDA，或是使用 CUDA 呼叫 enable_language 命令。接著，您可以直接將 CUDA (.cu) 來源新增到類似其他語言的目標。"
	},
	"FindCUDAToolkit": {
		"name": "FindCUDAToolkit",
		"description": "此指令碼會尋找 NVIDIA CUDA 工具組和相關聯的程式庫，但不需要為特定專案啟用 CUDA 語言。此模組不會搜尋 NVIDIA CUDA 範例。"
	},
	"FindCups": {
		"name": "FindCups",
		"description": "尋找 Common UNIX 列印系統 (CUPS)。"
	},
	"FindCURL": {
		"name": "FindCURL",
		"description": "尋找原生的 CURL 標頭和程式庫。"
	},
	"FindCurses": {
		"name": "FindCurses",
		"description": "尋找 curses 或 ncurses，包括檔案和程式庫。"
	},
	"FindCVS": {
		"name": "FindCVS",
		"description": "尋找協作版本系統 (CVS)。"
	},
	"FindCxxTest": {
		"name": "FindCxxTest",
		"description": "尋找 CxxTest 單元測試架構。"
	},
	"FindCygwin": {
		"name": "FindCygwin",
		"description": "尋找 Cygwin，這是一個與 POSIX 相容的環境，在 Microsoft Windows 上執行"
	},
	"FindDart": {
		"name": "FindDart",
		"description": "尋找 DART"
	},
	"FindDCMTK": {
		"name": "FindDCMTK",
		"description": "尋找 DICOM ToolKit】 (DCMTK) 程式庫和應用程式"
	},
	"FindDevIL": {
		"name": "FindDevIL",
		"description": "此模組會尋找開發人員的影像庫。https://openil.sourceforge.net/"
	},
	"FindDoxygen": {
		"name": "FindDoxygen",
		"description": "Doxygen 是文件產生工具 (請參閱 https://www.doxygen.nl)。此模組會尋找 Doxygen 及其支援的一些選擇性工具: "
	},
	"FindEnvModules": {
		"name": "FindEnvModules",
		"description": "找出環境模組實作，讓 CMake 指令碼可以使用命令。這與 Lua 型 Lmod 和 TCL 型 EnvironmentModules 相容。"
	},
	"FindEXPAT": {
		"name": "FindEXPAT",
		"description": "尋找原生的 Expat 標頭和程式庫。Expat 是以 C 撰寫的資料流導向 XML 剖析器庫。"
	},
	"FindFLEX": {
		"name": "FindFLEX",
		"description": "尋找快速詞彙分析程式 (Flex) 可執行檔，並提供巨集以產生自訂組建規則"
	},
	"FindFLTK": {
		"name": "FindFLTK",
		"description": "尋找 Fast Light Toolkit (FLTK) 程式庫"
	},
	"FindFLTK2": {
		"name": "FindFLTK2",
		"description": "尋找原生 FLTK 2.0 內容和程式庫"
	},
	"FindFontconfig": {
		"name": "FindFontconfig",
		"description": "尋找 Fontconfig 標頭和程式庫。"
	},
	"FindFreetype": {
		"name": "FindFreetype",
		"description": "尋找 FreeType 字型轉譯器內容和程式庫。"
	},
	"FindGCCXML": {
		"name": "FindGCCXML",
		"description": "尋找 GCC-XML 前端可執行檔。"
	},
	"FindGDAL": {
		"name": "FindGDAL",
		"description": "尋找地理空間資料抽象庫 (GDAL)。"
	},
	"FindGettext": {
		"name": "FindGettext",
		"description": "尋找 GNU gettext 工具"
	},
	"FindGIF": {
		"name": "FindGIF",
		"description": "這會尋找圖形交換格式 (GIF) 程式庫 (giflib)"
	},
	"FindGit": {
		"name": "FindGit",
		"description": "模組定義下列變數:"
	},
	"FindGLEW": {
		"name": "FindGLEW",
		"description": "尋找 OpenGL Extension Wrangler Library (GLEW)"
	},
	"FindGLUT": {
		"name": "FindGLUT",
		"description": "尋找 OpenGL Utility Toolkit (TOOLKIT) 程式庫並包含檔案。"
	},
	"FindGnuplot": {
		"name": "FindGnuplot",
		"description": "此模組會尋找 gnuplot"
	},
	"FindGnuTLS": {
		"name": "FindGnuTLS",
		"description": "尋找 GNU 傳輸層安全性程式庫 (gnutls)"
	},
	"FindGSL": {
		"name": "FindGSL",
		"description": "尋找原生科學研究用函式庫 (GSL) 包含內容和連結庫。"
	},
	"FindGTest": {
		"name": "FindGTest",
		"description": "找出 Google C++ 測試架構。"
	},
	"FindGTK": {
		"name": "FindGTK",
		"description": "尋找 GTK、glib 和 GTKGLArea"
	},
	"FindGTK2": {
		"name": "FindGTK2",
		"description": "尋找 GTK2 小工具庫及其幾個其他選擇性元件，例如 gtkmm、glade 和 glademm。"
	},
	"FindHDF5": {
		"name": "FindHDF5",
		"description": "尋找階層式資料格式 (HDF5)，這是一個可讀取和寫入自我描述陣列程式庫。"
	},
	"FindHg": {
		"name": "FindHg",
		"description": "從 mercurial 工作複本中解壓縮資訊。"
	},
	"FindHSPELL": {
		"name": "FindHSPELL",
		"description": "嘗試尋找希伯來文拼字檢查 (Hspell) 和字型引擎。"
	},
	"FindHTMLHelp": {
		"name": "FindHTMLHelp",
		"description": "此模組會尋找 Microsoft HTML 幫助集編譯器"
	},
	"FindIce": {
		"name": "FindIce",
		"description": "尋找 ZeroC 網路通訊引擎 (ICE) 程式、程式庫和資料檔。"
	},
	"FindIconv": {
		"name": "FindIconv",
		"description": "此模組會尋找系統上的 iconv() POSIX.1 函式。這些函式可能以一般 C 程式庫的形式提供，或以其他程式庫的形式在外部提供。"
	},
	"FindIcotool": {
		"name": "FindIcotool",
		"description": "尋找 icotool"
	},
	"FindICU": {
		"name": "FindICU",
		"description": "尋找 Unicode (ICU) 程式庫和程式的國際元件。"
	},
	"FindImageMagick": {
		"name": "FindImageMagick",
		"description": "尋找 ImageMagick，這是顯示、轉換及操作光柵影像的軟體套件。"
	},
	"FindIntl": {
		"name": "FindIntl",
		"description": "尋找 Gettext libintl 標頭和程式庫。"
	},
	"FindITK": {
		"name": "FindITK",
		"description": "此模組已不存在。"
	},
	"FindJasper": {
		"name": "FindJasper",
		"description": "尋找 Jasper JPEG2000 程式庫。"
	},
	"FindJava": {
		"name": "FindJava",
		"description": "尋找 Java"
	},
	"FindJNI": {
		"name": "FindJNI",
		"description": "尋找 Java 原生介面 (JNI) 標頭和程式庫。"
	},
	"FindJPEG": {
		"name": "FindJPEG",
		"description": "尋找聯合影像專家小組 (JPEG) 程式庫 (libjpeg)"
	},
	"FindKDE3": {
		"name": "FindKDE3",
		"description": "尋找 KDE3 內容和程式庫 dirs、KDE 前置處理器，並定義一些巨集"
	},
	"FindKDE4": {
		"name": "FindKDE4",
		"description": "尋找 KDE4 並提供所有必要的變數和巨集，以編譯其軟體。它會以指定的順序在下列目錄中尋找 KDE 4: "
	},
	"FindLAPACK": {
		"name": "FindLAPACK",
		"description": "尋找線性代數 PACKage (LAPACK) 程式庫"
	},
	"FindLATEX": {
		"name": "FindLATEX",
		"description": "尋找 LaTeX"
	},
	"FindLibArchive": {
		"name": "FindLibArchive",
		"description": "尋找程式庫和標頭。Libarchive 是多重格式的封存層和壓縮程式庫。"
	},
	"FindLibinput": {
		"name": "FindLibinput",
		"description": "尋找 libinput 標頭和程式庫。"
	},
	"FindLibLZMA": {
		"name": "FindLibLZMA",
		"description": "尋找 LZMA 壓縮演算法標頭和程式庫。"
	},
	"FindLibXml2": {
		"name": "FindLibXml2",
		"description": "尋找 XML 處理庫 (libxml2)。"
	},
	"FindLibXslt": {
		"name": "FindLibXslt",
		"description": "尋找 XSL 轉換、可延伸樣式表語言 (XSLT) 程式庫 (LibXslt)"
	},
	"FindLTTngUST": {
		"name": "FindLTTngUST",
		"description": "尋找 Trace Toolkit Next Generation (LTTng-UST) 程式庫。"
	},
	"FindLua": {
		"name": "FindLua",
		"description": "找出 Lua 程式庫。"
	},
	"FindLua50": {
		"name": "FindLua50",
		"description": "找出 Lua 程式庫。"
	},
	"FindLua51": {
		"name": "FindLua51",
		"description": "找出 Lua 程式庫。此模組定義: "
	},
	"FindMatlab": {
		"name": "FindMatlab",
		"description": "尋找 Matlab 或 Matlab Compiler Runtime (MCR)，並向 CMake 提供 Matlab 工具、程式庫和編譯器。"
	},
	"FindMFC": {
		"name": "FindMFC",
		"description": "在 Windows 上尋找 Microsoft Foundation Classes (MFC)。"
	},
	"FindMotif": {
		"name": "FindMotif",
		"description": "嘗試尋找 Motif (或 lesstif)"
	},
	"FindMPEG": {
		"name": "FindMPEG",
		"description": "尋找原生 MPEG 內容和程式庫"
	},
	"FindMPEG2": {
		"name": "FindMPEG2",
		"description": "尋找原生 MPEG2 內容和程式庫"
	},
	"FindMPI": {
		"name": "FindMPI",
		"description": "尋找訊息傳遞介面 (MPI) 實作。"
	},
	"FindMsys": {
		"name": "FindMsys",
		"description": "尋找 MSYS，這是一個與 POSIX 相容的環境，在 Microsoft Windows 上執行"
	},
	"FindODBC": {
		"name": "FindODBC",
		"description": "尋找開放式資料庫連接 (ODBC) 包括目錄和程式庫。"
	},
	"FindOpenACC": {
		"name": "FindOpenACC",
		"description": "偵測編譯器支援的 OpenACC。"
	},
	"FindOpenAL": {
		"name": "FindOpenAL",
		"description": "尋找 Open Audio Library (OpenAL).。"
	},
	"FindOpenCL": {
		"name": "FindOpenCL",
		"description": "尋找 Open Computing Language (OpenCL)"
	},
	"FindOpenGL": {
		"name": "FindOpenGL",
		"description": "適用於 OpenGL 和 OpenGL 公用程式庫 (GLU) 的 FindModule。"
	},
	"FindOpenMP": {
		"name": "FindOpenMP",
		"description": "尋找 Open Multi-Processing (OpenMP) 支援。"
	},
	"FindOpenSceneGraph": {
		"name": "FindOpenSceneGraph",
		"description": "尋找 OpenSceneGraph (3D 圖形應用程式開發介面)"
	},
	"FindOpenSP": {
		"name": "FindOpenSP",
		"description": "嘗試尋找 OpenSP 程式庫。"
	},
	"FindOpenSSL": {
		"name": "FindOpenSSL",
		"description": "尋找 OpenSSL 加密程式庫。"
	},
	"FindOpenThreads": {
		"name": "FindOpenThreads",
		"description": "OpenThreads 是 C++ 型線程程式庫。其最大的使用者群似乎為 OpenSceneGraph，因此您可能會注意到我接受 OSGDIR 作為環境路徑。我將其視為 Findosg* 套件的一部分，用來尋找 OpenSceneGraph 元件。每個元件都是獨立的，您必須選擇加入每個模組。"
	},
	"Findosg": {
		"name": "Findosg",
		"description": "這是 Findosg* 套件的一部分，用來尋找 OpenSceneGraph 元件。每個元件都是獨立的，您必須選擇加入每個模組。您也必須加入 OpenGL 和 OpenThreads (視需求加入 Producer)，因為這些模組不會協助您加入。這是為了讓您逐步控制自己的系統，以防您需要退出特定元件或變更特定模組的尋找行為 (可能是因為預設的 FindOpenGL 模組無法與您的系統一起作為範例)。如果您想要使用包含所有內容的更方便模組，請使用 FindOpenSceneGraph，而不是 Findosg*.cmake 模組。"
	},
	"FindosgAnimation": {
		"name": "FindosgAnimation",
		"description": "這是 Findosg* 套件的一部分，用來尋找 OpenSceneGraph 元件。每個元件都是獨立的，您必須選擇加入每個模組。您也必須加入 OpenGL 和 OpenThreads (視需求加入 Producer)，因為這些模組不會協助您加入。這是為了讓您逐步控制自己的系統，以防您需要退出特定元件或變更特定模組的尋找行為 (可能是因為預設的 FindOpenGL 模組無法與您的系統一起作為範例)。如果您想要使用包含所有內容的更方便模組，請使用 FindOpenSceneGraph，而不是 Findosg*.cmake 模組。"
	},
	"FindosgDB": {
		"name": "FindosgDB",
		"description": "這是 Findosg* 套件的一部分，用來尋找 OpenSceneGraph 元件。每個元件都是獨立的，您必須選擇加入每個模組。您也必須加入 OpenGL 和 OpenThreads (視需求加入 Producer)，因為這些模組不會協助您加入。這是為了讓您逐步控制自己的系統，以防您需要退出特定元件或變更特定模組的尋找行為 (可能是因為預設的 FindOpenGL 模組無法與您的系統一起作為範例)。如果您想要使用包含所有內容的更方便模組，請使用 FindOpenSceneGraph，而不是 Findosg*.cmake 模組。"
	},
	"FindosgFX": {
		"name": "FindosgFX",
		"description": "這是 Findosg* 套件的一部分，用來尋找 OpenSceneGraph 元件。每個元件都是獨立的，您必須選擇加入每個模組。您也必須加入 OpenGL 和 OpenThreads (視需求加入 Producer)，因為這些模組不會協助您加入。這是為了讓您逐步控制自己的系統，以防您需要退出特定元件或變更特定模組的尋找行為 (可能是因為預設的 FindOpenGL 模組無法與您的系統一起作為範例)。如果您想要使用包含所有內容的更方便模組，請使用 FindOpenSceneGraph，而不是 Findosg*.cmake 模組。"
	},
	"FindosgGA": {
		"name": "FindosgGA",
		"description": "這是 Findosg* 套件的一部分，用來尋找 OpenSceneGraph 元件。每個元件都是獨立的，您必須選擇加入每個模組。您也必須加入 OpenGL 和 OpenThreads (視需求加入 Producer)，因為這些模組不會協助您加入。這是為了讓您逐步控制自己的系統，以防您需要退出特定元件或變更特定模組的尋找行為 (可能是因為預設的 FindOpenGL 模組無法與您的系統一起作為範例)。如果您想要使用包含所有內容的更方便模組，請使用 FindOpenSceneGraph，而不是 Findosg*.cmake 模組。"
	},
	"FindosgIntrospection": {
		"name": "FindosgIntrospection",
		"description": "這是 Findosg* 套件的一部分，用來尋找 OpenSceneGraph 元件。每個元件都是獨立的，您必須選擇加入每個模組。您也必須加入 OpenGL 和 OpenThreads (視需求加入 Producer)，因為這些模組不會協助您加入。這是為了讓您逐步控制自己的系統，以防您需要退出特定元件或變更特定模組的尋找行為 (可能是因為預設的 FindOpenGL 模組無法與您的系統一起作為範例)。如果您想要使用包含所有內容的更方便模組，請使用 FindOpenSceneGraph，而不是 Findosg*.cmake 模組。"
	},
	"FindosgManipulator": {
		"name": "FindosgManipulator",
		"description": "這是 Findosg* 套件的一部分，用來尋找 OpenSceneGraph 元件。每個元件都是獨立的，您必須選擇加入每個模組。您也必須加入 OpenGL 和 OpenThreads (視需求加入 Producer)，因為這些模組不會協助您加入。這是為了讓您逐步控制自己的系統，以防您需要退出特定元件或變更特定模組的尋找行為 (可能是因為預設的 FindOpenGL 模組無法與您的系統一起作為範例)。如果您想要使用包含所有內容的更方便模組，請使用 FindOpenSceneGraph，而不是 Findosg*.cmake 模組。"
	},
	"FindosgParticle": {
		"name": "FindosgParticle",
		"description": "這是 Findosg* 套件的一部分，用來尋找 OpenSceneGraph 元件。每個元件都是獨立的，您必須選擇加入每個模組。您也必須加入 OpenGL 和 OpenThreads (視需求加入 Producer)，因為這些模組不會協助您加入。這是為了讓您逐步控制自己的系統，以防您需要退出特定元件或變更特定模組的尋找行為 (可能是因為預設的 FindOpenGL 模組無法與您的系統一起作為範例)。如果您想要使用包含所有內容的更方便模組，請使用 FindOpenSceneGraph，而不是 Findosg*.cmake 模組。"
	},
	"FindosgPresentation": {
		"name": "FindosgPresentation",
		"description": "這是 Findosg* 套件的一部分，用來尋找 OpenSceneGraph 元件。每個元件都是獨立的，您必須選擇加入每個模組。您也必須加入 OpenGL 和 OpenThreads (視需求加入 Producer)，因為這些模組不會協助您加入。這是為了讓您逐步控制自己的系統，以防您需要退出特定元件或變更特定模組的尋找行為 (可能是因為預設的 FindOpenGL 模組無法與您的系統一起作為範例)。如果您想要使用包含所有內容的更方便模組，請使用 FindOpenSceneGraph，而不是 Findosg*.cmake 模組。"
	},
	"FindosgProducer": {
		"name": "FindosgProducer",
		"description": "這是 Findosg* 套件的一部分，用來尋找 OpenSceneGraph 元件。每個元件都是獨立的，您必須選擇加入每個模組。您也必須加入 OpenGL 和 OpenThreads (視需求加入 Producer)，因為這些模組不會協助您加入。這是為了讓您逐步控制自己的系統，以防您需要退出特定元件或變更特定模組的尋找行為 (可能是因為預設的 FindOpenGL 模組無法與您的系統一起作為範例)。如果您想要使用包含所有內容的更方便模組，請使用 FindOpenSceneGraph，而不是 Findosg*.cmake 模組。"
	},
	"FindosgQt": {
		"name": "FindosgQt",
		"description": "這是 Findosg* 套件的一部分，用來尋找 OpenSceneGraph 元件。每個元件都是獨立的，您必須選擇加入每個模組。您也必須加入 OpenGL 和 OpenThreads (視需求加入 Producer)，因為這些模組不會協助您加入。這是為了讓您逐步控制自己的系統，以防您需要退出特定元件或變更特定模組的尋找行為 (可能是因為預設的 FindOpenGL 模組無法與您的系統一起作為範例)。如果您想要使用包含所有內容的更方便模組，請使用 FindOpenSceneGraph，而不是 Findosg*.cmake 模組。"
	},
	"FindosgShadow": {
		"name": "FindosgShadow",
		"description": "這是 Findosg* 套件的一部分，用來尋找 OpenSceneGraph 元件。每個元件都是獨立的，您必須選擇加入每個模組。您也必須加入 OpenGL 和 OpenThreads (視需求加入 Producer)，因為這些模組不會協助您加入。這是為了讓您逐步控制自己的系統，以防您需要退出特定元件或變更特定模組的尋找行為 (可能是因為預設的 FindOpenGL 模組無法與您的系統一起作為範例)。如果您想要使用包含所有內容的更方便模組，請使用 FindOpenSceneGraph，而不是 Findosg*.cmake 模組。"
	},
	"FindosgSim": {
		"name": "FindosgSim",
		"description": "這是 Findosg* 套件的一部分，用來尋找 OpenSceneGraph 元件。每個元件都是獨立的，您必須選擇加入每個模組。您也必須加入 OpenGL 和 OpenThreads (視需求加入 Producer)，因為這些模組不會協助您加入。這是為了讓您逐步控制自己的系統，以防您需要退出特定元件或變更特定模組的尋找行為 (可能是因為預設的 FindOpenGL 模組無法與您的系統一起作為範例)。如果您想要使用包含所有內容的更方便模組，請使用 FindOpenSceneGraph，而不是 Findosg*.cmake 模組。"
	},
	"FindosgTerrain": {
		"name": "FindosgTerrain",
		"description": "這是 Findosg* 套件的一部分，用來尋找 OpenSceneGraph 元件。每個元件都是獨立的，您必須選擇加入每個模組。您也必須加入 OpenGL 和 OpenThreads (視需求加入 Producer)，因為這些模組不會協助您加入。這是為了讓您逐步控制自己的系統，以防您需要退出特定元件或變更特定模組的尋找行為 (可能是因為預設的 FindOpenGL 模組無法與您的系統一起作為範例)。如果您想要使用包含所有內容的更方便模組，請使用 FindOpenSceneGraph，而不是 Findosg*.cmake 模組。"
	},
	"FindosgText": {
		"name": "FindosgText",
		"description": "這是 Findosg* 套件的一部分，用來尋找 OpenSceneGraph 元件。每個元件都是獨立的，您必須選擇加入每個模組。您也必須加入 OpenGL 和 OpenThreads (視需求加入 Producer)，因為這些模組不會協助您加入。這是為了讓您逐步控制自己的系統，以防您需要退出特定元件或變更特定模組的尋找行為 (可能是因為預設的 FindOpenGL 模組無法與您的系統一起作為範例)。如果您想要使用包含所有內容的更方便模組，請使用 FindOpenSceneGraph，而不是 Findosg*.cmake 模組。"
	},
	"FindosgUtil": {
		"name": "FindosgUtil",
		"description": "這是 Findosg* 套件的一部分，用來尋找 OpenSceneGraph 元件。每個元件都是獨立的，您必須選擇加入每個模組。您也必須加入 OpenGL 和 OpenThreads (視需求加入 Producer)，因為這些模組不會協助您加入。這是為了讓您逐步控制自己的系統，以防您需要退出特定元件或變更特定模組的尋找行為 (可能是因為預設的 FindOpenGL 模組無法與您的系統一起作為範例)。如果您想要使用包含所有內容的更方便模組，請使用 FindOpenSceneGraph，而不是 Findosg*.cmake 模組。"
	},
	"FindosgViewer": {
		"name": "FindosgViewer",
		"description": "這是 Findosg* 套件的一部分，用來尋找 OpenSceneGraph 元件。每個元件都是獨立的，您必須選擇加入每個模組。您也必須加入 OpenGL 和 OpenThreads (視需求加入 Producer)，因為這些模組不會協助您加入。這是為了讓您逐步控制自己的系統，以防您需要退出特定元件或變更特定模組的尋找行為 (可能是因為預設的 FindOpenGL 模組無法與您的系統一起作為範例)。如果您想要使用包含所有內容的更方便模組，請使用 FindOpenSceneGraph，而不是 Findosg*.cmake 模組。"
	},
	"FindosgVolume": {
		"name": "FindosgVolume",
		"description": "這是 Findosg* 套件的一部分，用來尋找 OpenSceneGraph 元件。每個元件都是獨立的，您必須選擇加入每個模組。您也必須加入 OpenGL 和 OpenThreads (視需求加入 Producer)，因為這些模組不會協助您加入。這是為了讓您逐步控制自己的系統，以防您需要退出特定元件或變更特定模組的尋找行為 (可能是因為預設的 FindOpenGL 模組無法與您的系統一起作為範例)。如果您想要使用包含所有內容的更方便模組，請使用 FindOpenSceneGraph，而不是 Findosg*.cmake 模組。"
	},
	"FindosgWidget": {
		"name": "FindosgWidget",
		"description": "這是 Findosg* 套件的一部分，用來尋找 OpenSceneGraph 元件。每個元件都是獨立的，您必須選擇加入每個模組。您也必須加入 OpenGL 和 OpenThreads (視需求加入 Producer)，因為這些模組不會協助您加入。這是為了讓您逐步控制自己的系統，以防您需要退出特定元件或變更特定模組的尋找行為 (可能是因為預設的 FindOpenGL 模組無法與您的系統一起作為範例)。如果您想要使用包含所有內容的更方便模組，請使用 FindOpenSceneGraph，而不是 Findosg*.cmake 模組。"
	},
	"Findosg_functions": {
		"name": "Findosg_functions",
		"description": "此 CMake 檔案包含兩個巨集，可協助搜尋 OSG 程式庫和 nodekit。如需完整文件，請參閱 FindOpenSceneGraph。"
	},
	"FindPackageHandleStandardArgs": {
		"name": "FindPackageHandleStandardArgs",
		"description": "此模組提供用來執行 find_package(<PackageName>) 呼叫的 Find Modules 中之函式。"
	},
	"FindPackageMessage": {
		"name": "FindPackageMessage",
		"description": "此函式適用於 FindXXX.cmake 模組檔案。它會針對每個唯一尋找結果列印一次訊息。這很適合用於告知使用者套件的所在位置。第一個引數指定套件的名稱 (XXX)。第二個引數指定要顯示的郵件。第三個引數會列出尋找結果的詳細資訊，如此一來，如果變更訊息將會再次顯示。巨集也會將 QUIET 引數遵守 find_package 命令。"
	},
	"FindPatch": {
		"name": "FindPatch",
		"description": "模組定義下列變數:"
	},
	"FindPerl": {
		"name": "FindPerl",
		"description": "尋找 Perl 解譯器。"
	},
	"FindPerlLibs": {
		"name": "FindPerlLibs",
		"description": "尋找 Perl 連結庫"
	},
	"FindPHP4": {
		"name": "FindPHP4",
		"description": "尋找 PHP4"
	},
	"FindPhysFS": {
		"name": "FindPhysFS",
		"description": "尋找 PhysFS 程式庫 此模組定義: "
	},
	"FindPike": {
		"name": "FindPike",
		"description": "尋找 Pike"
	},
	"FindPkgConfig": {
		"name": "FindPkgConfig",
		"description": "CMake 的 pkg-config 模組。"
	},
	"FindPNG": {
		"name": "FindPNG",
		"description": "尋找 libpng，這是 PNG 影像格式的正式參考程式庫。"
	},
	"FindPostgreSQL": {
		"name": "FindPostgreSQL",
		"description": "尋找 PostgreSQL 安裝。"
	},
	"FindProducer": {
		"name": "FindProducer",
		"description": "雖然製作人不是 OpenSceneGraph 的直接組成部分，但是其主要使用者是 OSG，因此我將其視為 Findosg* 套件的一部分，用於尋找 OpenSceneGraph 元件。您將注意到我將 OSGDIR 作為環境路徑。"
	},
	"FindProtobuf": {
		"name": "FindProtobuf",
		"description": "找出並設定 Google 通訊協定緩衝區庫。"
	},
	"FindPython": {
		"name": "FindPython",
		"description": "尋找 Python 解譯器、編譯程式及開發環境 (包括目錄和連結庫)。"
	},
	"FindPython2": {
		"name": "FindPython2",
		"description": "尋找 Python 2 解譯器、編譯程式及開發環境 (包括目錄和連結庫)。"
	},
	"FindPython3": {
		"name": "FindPython3",
		"description": "尋找 Python 3 解譯器、編譯程式及開發環境 (包括目錄和連結庫)。"
	},
	"FindPythonInterp": {
		"name": "FindPythonInterp",
		"description": "尋找 Python 解譯器"
	},
	"FindPythonLibs": {
		"name": "FindPythonLibs",
		"description": "尋找 Python 程式庫"
	},
	"FindQt": {
		"name": "FindQt",
		"description": "搜尋所有已安裝的 Qt3 或 Qt4 版本。"
	},
	"FindQt3": {
		"name": "FindQt3",
		"description": "尋找包含路徑和程式庫的 Qt"
	},
	"FindQt4": {
		"name": "FindQt4",
		"description": "此模組可用來尋找 Qt4。最重要的問題是 Qt4 qmake 可以透過系統路徑使用。接著，這個 qmake 會用來偵測其他所有內容。此模組定義一些 IMPORTED 目標、巨集和變數。"
	},
	"FindQuickTime": {
		"name": "FindQuickTime",
		"description": "尋找 QuickTime 此模組定義: "
	},
	"FindRTI": {
		"name": "FindRTI",
		"description": "嘗試尋找 M&S HLA RTI 程式庫"
	},
	"FindRuby": {
		"name": "FindRuby",
		"description": "尋找 Ruby"
	},
	"FindSDL": {
		"name": "FindSDL",
		"description": "尋找 SDL 程式庫"
	},
	"FindSDL_gfx": {
		"name": "FindSDL_gfx",
		"description": "尋找 SDL_gfx 程式庫"
	},
	"FindSDL_image": {
		"name": "FindSDL_image",
		"description": "尋找 SDL_image 程式庫"
	},
	"FindSDL_mixer": {
		"name": "FindSDL_mixer",
		"description": "尋找 SDL_mixer 程式庫"
	},
	"FindSDL_net": {
		"name": "FindSDL_net",
		"description": "尋找 SDL_net 程式庫"
	},
	"FindSDL_sound": {
		"name": "FindSDL_sound",
		"description": "尋找 SDL_sound 程式庫"
	},
	"FindSDL_ttf": {
		"name": "FindSDL_ttf",
		"description": "尋找 SDL_ttf 程式庫"
	},
	"FindSelfPackers": {
		"name": "FindSelfPackers",
		"description": "尋找 upx"
	},
	"FindSQLite3": {
		"name": "FindSQLite3",
		"description": "尋找 SQLite 程式庫，v3"
	},
	"FindSquish": {
		"name": "FindSquish",
		"description": "-- 一般用法"
	},
	"FindSubversion": {
		"name": "FindSubversion",
		"description": "從 Subversion 工作複本中解壓縮資訊。"
	},
	"FindSWIG": {
		"name": "FindSWIG",
		"description": "尋找簡單包裝介面產生器 (SWIG) 可執行檔。"
	},
	"FindTCL": {
		"name": "FindTCL",
		"description": "已移除 TK_INTERNAL_PATH。"
	},
	"FindTclsh": {
		"name": "FindTclsh",
		"description": "尋找 tclsh"
	},
	"FindTclStub": {
		"name": "FindTclStub",
		"description": "已移除 TCL_STUB_LIBRARY_DEBUG 和 TK_STUB_LIBRARY_DEBUG。"
	},
	"FindThreads": {
		"name": "FindThreads",
		"description": "此模組會決定系統的線程庫。"
	},
	"FindTIFF": {
		"name": "FindTIFF",
		"description": "尋找 TIFF 程式庫 (libtiff、https://libtiff.gitlab.io/libtiff/)。"
	},
	"FindUnixCommands": {
		"name": "FindUnixCommands",
		"description": "尋找 Unix 命令，包括來自 Cygwin 的命令"
	},
	"FindVTK": {
		"name": "FindVTK",
		"description": "此模組已不存在。"
	},
	"FindVulkan": {
		"name": "FindVulkan",
		"description": "尋找 Vulkan，這是低負荷、跨平台的 3D 圖形和運算 API。"
	},
	"FindWget": {
		"name": "FindWget",
		"description": "尋找小工具"
	},
	"FindWish": {
		"name": "FindWish",
		"description": "尋找願望安裝"
	},
	"FindwxWidgets": {
		"name": "FindwxWidgets",
		"description": "尋找 wxWidgets (即 wxWindows) 安裝。"
	},
	"FindwxWindows": {
		"name": "FindwxWindows",
		"description": "尋找 wxWindows (wxWidgets) 安裝"
	},
	"FindX11": {
		"name": "FindX11",
		"description": "尋找 X11 安裝"
	},
	"FindXalanC": {
		"name": "FindXalanC",
		"description": "尋找 Apache Xalan-C++ XSL 轉換處理器標頭和程式庫。"
	},
	"FindXCTest": {
		"name": "FindXCTest",
		"description": "可協助建立和執行 XCTest 套件組合的函式。"
	},
	"FindXercesC": {
		"name": "FindXercesC",
		"description": "尋找驗證 XML 剖析器標頭 C++ 程式庫的 Apache Xerces-C++。"
	},
	"FindXMLRPC": {
		"name": "FindXMLRPC",
		"description": "尋找 xmlrpc"
	},
	"FindZLIB": {
		"name": "FindZLIB",
		"description": "尋找原生 ZLIB 內容和程式庫。"
	},
	"FortranCInterface": {
		"name": "FortranCInterface",
		"description": "Fortran/C 介面偵測"
	},
	"GenerateExportHeader": {
		"name": "GenerateExportHeader",
		"description": "產生連結庫匯出巨集的函式"
	},
	"GetPrerequisites": {
		"name": "GetPrerequisites",
		"description": "分析及列出可執行檔先決條件的函式。"
	},
	"GNUInstallDirs": {
		"name": "GNUInstallDirs",
		"description": "定義 GNU 標準安裝目錄"
	},
	"GoogleTest": {
		"name": "GoogleTest",
		"description": "此模組定義函式來協助使用 Google Test 基礎結構。提供兩個新增測試的機制。gtest_add_tests 已存在一段時間，原本是在 CMake 3.10 中透過 find_package(GTest). gtest_discover_tests 引進。"
	},
	"InstallRequiredSystemLibraries": {
		"name": "InstallRequiredSystemLibraries",
		"description": "包含此模組以搜尋編譯程式提供的系統運行時間連結庫，並新增其安裝規則。在包含模組以調整行為之前，可以先設定一些選用變數:"
	},
	"MacroAddFileDependencies": {
		"name": "MacroAddFileDependencies",
		"description": "請勿在新的程式碼中使用此命令。這隻是一個包裝函式:"
	},
	"ProcessorCount": {
		"name": "ProcessorCount",
		"description": "ProcessorCount(var)"
	},
	"SelectLibraryConfigurations": {
		"name": "SelectLibraryConfigurations",
		"description": "此巨集會使用程式庫基底名稱做為引述，並針對變數選擇良好的值"
	},
	"SquishTestScript": {
		"name": "SquishTestScript",
		"description": "此指令碼會使用 Squish 啟動 GUI 測試。您不應該直接呼叫程式碼;相反地，您應該透過 FindSquish.cmake 中定義的 SQUISH_ADD_TEST 巨集來存取程式碼。"
	},
	"TestBigEndian": {
		"name": "TestBigEndian",
		"description": "檢查目標架構是位元組由大到小或位元組由小到大。"
	},
	"TestCXXAcceptsFlag": {
		"name": "TestCXXAcceptsFlag",
		"description": "檢查 CXX 編譯器是否接受旗標。"
	},
	"TestForANSIForScope": {
		"name": "TestForANSIForScope",
		"description": "檢查 ANSI 的範圍支援"
	},
	"TestForANSIStreamHeaders": {
		"name": "TestForANSIStreamHeaders",
		"description": "測試 ANSI 資料流標頭 iostream 等的編譯器支援。"
	},
	"TestForSSTREAM": {
		"name": "TestForSSTREAM",
		"description": "測試 ANSI 資料流標頭的編譯器支援"
	},
	"TestForSTDNamespace": {
		"name": "TestForSTDNamespace",
		"description": "測試 std:: 命名空間支援"
	},
	"UseEcos": {
		"name": "UseEcos",
		"description": "此模組定義建立 eCos 應用程式所需的變數和巨集。"
	},
	"UseJava": {
		"name": "UseJava",
		"description": "此檔案提供 Java 支援。假設 FindJava 已經載入。請參閱 Find Java，以了解如何將 Java 載入 CMake 專案。"
	},
	"UseJavaClassFilelist": {
		"name": "UseJavaClassFilelist",
		"description": "此模組先前因錯誤而記錄，而且一律不會由專案程式碼直接引用。請參閱: :module:`UseJava` 模組。"
	},
	"UseJavaSymlinks": {
		"name": "UseJavaSymlinks",
		"description": "此模組先前因錯誤而記錄，而且一律不會由專案程式碼直接引用。請參閱: :module:`UseJava` 模組。"
	},
	"UsePkgConfig": {
		"name": "UsePkgConfig",
		"description": "CMake 的已淘汰 pkg-config 模組，請改為使用 FindPkgConfig。"
	},
	"UseSWIG": {
		"name": "UseSWIG",
		"description": "此檔案提供 SWIG 支援。假設 FindSWIG 模組已經載入。"
	},
	"UsewxWidgets": {
		"name": "UsewxWidgets",
		"description": "使用 wxWidgets 文件庫所包含的便利性。"
	},
	"Use_wxWindows": {
		"name": "Use_wxWindows",
		"description": "此便利性包括尋找是否安裝 wxWindows 並設定適當的 libs、incdirs、旗標等。作者 Jan Woetzel <jw -at- mip.informatik.uni-kiel.de> (07/2003)"
	},
	"WriteBasicConfigVersionFile": {
		"name": "WriteBasicConfigVersionFile",
		"description": "版本 3.0 後已淘汰: 使用來自模組 CMakePackageConfigHelpers 的相同命令 write_basic_package_version_file()。"
	},
	"WriteCompilerDetectionHeader": {
		"name": "WriteCompilerDetectionHeader",
		"description": "此模組提供函式 write_compiler_detection_header()。"
	}
}